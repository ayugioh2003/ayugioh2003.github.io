<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2016/10/hello-world/</url>
    <content><![CDATA[<p><img src="/images/20161018Hello-World.png" alt="Hello-World: http://www.amir.ninja/hello-world/ "></p>
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#quick-start">Quick Start</a><ul>
<li><a href="#create-a-new-post">Create a new post</a></li>
<li><a href="#run-server">Run server</a></li>
<li><a href="#generate-static-files">Generate static files</a></li>
<li><a href="#deploy-to-remote-sites">Deploy to remote sites</a></li>
</ul>
</li>
</ul>
<!-- tocstop -->

<hr>
<h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h2 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h2 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h2 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h2 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo 安裝過程</title>
    <url>/2016/10/how-to-stall-hexo/</url>
    <content><![CDATA[<p><img src="/images/20161018HexoAndHexo.png" alt="來源：https://wsgzao.github.io/post/hexo-guide/"></p>
<p>本來想用 jekyll 來當架在 Github 上的部落格系統，但安裝過程太坑爹了，一氣之下就換成用 Hexo 來架設。雖然過程中也有點鬼打牆 … 但真的有比較好設定。以下稍微紀錄安裝的過程。</p>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#%E5%AE%89%E8%A3%9D%E9%81%8E%E7%A8%8B">安裝過程</a><ul>
<li><a href="#%E5%AE%89%E8%A3%9D-nodejs">安裝 node.js</a></li>
<li><a href="#%E5%AE%89%E8%A3%9D-git">安裝 git</a></li>
<li><a href="#%E8%A8%BB%E5%86%8A-github">註冊 github</a></li>
<li><a href="#%E5%AE%89%E8%A3%9Dhexo">安裝hexo</a></li>
</ul>
</li>
<li><a href="#%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA">問題解決</a></li>
<li><a href="#%E9%A0%90%E5%AE%9A%E7%9A%84%E9%99%A4%E9%8C%AF">預定的除錯</a></li>
</ul>
<!-- tocstop -->

<hr>
<h1 id="安裝過程"><a href="#安裝過程" class="headerlink" title="安裝過程"></a>安裝過程</h1><h2 id="安裝-node-js"><a href="#安裝-node-js" class="headerlink" title="安裝 node.js"></a>安裝 node.js</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 確認 node 安裝成功</span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 確認 npm 安裝成功</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<h2 id="安裝-git"><a href="#安裝-git" class="headerlink" title="安裝 git"></a>安裝 git</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 確認 git 安裝成功</span><br><span class="line">git --version</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="註冊-github"><a href="#註冊-github" class="headerlink" title="註冊 github"></a>註冊 github</h2><ul>
<li>開啟 gh-pages 功能（若 repo 用 name.github.com，就不用）</li>
<li>設置 SSH</li>
</ul>
<h2 id="安裝hexo"><a href="#安裝hexo" class="headerlink" title="安裝hexo"></a>安裝hexo</h2><p>在本機上的使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 安裝hexo，用全局</span><br><span class="line">npm install -g hexo</span><br><span class="line">npm install hexo --save &#x2F;&#x2F; 選一個裝吧，我不太懂差異 ...</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 初始化 hexo 架構</span><br><span class="line">hexo init</span><br><span class="line">npm install &#x2F;&#x2F; 有人說這會自動幫妳安裝需要的組件</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;建立新文章</span><br><span class="line">hexo new &quot;title&quot;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 產生 public 檔，就是 html 檔</span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 在本機 sever 觀看</span><br><span class="line">hexo sever</span><br></pre></td></tr></table></figure>

<p>就會在本機端 <a href="http://localhost:4000/">http://localhost:4000/</a> 看到網站</p>
<p>如果要放到 github 上，在 <code>_config.yml</code> 加入這串</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;ayugioh2003&#x2F;ayugioh2003.github.com.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>就能在 ayugioh2003.github.com 看到</p>
<p>接著輸入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; push 到 github 上</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<h1 id="問題解決"><a href="#問題解決" class="headerlink" title="問題解決"></a>問題解決</h1><ul>
<li>Yaml</li>
</ul>
<p>我他媽卡在這裡幾個小時啊！！！</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;ayugioh2003&#x2F;ayugioh2003.github.com.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<ul>
<li>SSH</li>
</ul>
<p>兩個 RSA 檔案都點開來看，有開頭、密鑰、信箱的那個才是正確的</p>
<h1 id="預定的除錯"><a href="#預定的除錯" class="headerlink" title="預定的除錯"></a>預定的除錯</h1><ul>
<li>標籤</li>
<li>類別</li>
<li>YY/MM/DD 檔名</li>
</ul>
<hr>
<ul>
<li><a href="https://xuanwo.org/2015/03/26/hexo-intor/">史上最详细的 Hexo 博客搭建图文教程 | Xuanwo’s Blog</a></li>
<li><a href="https://hexo.io/zh-tw/">Hexo</a></li>
<li><a href="http://code.kpman.cc/2013/04/26/hexo%E6%9E%B6blog%E5%88%9D%E9%AB%94%E9%A9%97/">hexo 架 blog 初體驗 | kpman | code</a></li>
<li><a href="http://www.rudy-yuan.net/archives/2016-newest-hexo-guide/">2016 年最新的 hexo 教程 | Rudy-Yuan 的博客</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>語法測試</title>
    <url>/2016/10/grammar-test/</url>
    <content><![CDATA[<p><img src="/images/20161020markdown.png" alt="來源：http://kirkstrobeck.github.io/whatismarkdown.com/"></p>
<p>想測試一下 markdown 語法和 js 語法在 hexo 上呈現的效果</p>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#markdown-%E8%AA%9E%E6%B3%95%E6%B8%AC%E8%A9%A6">Markdown 語法測試</a><ul>
<li><a href="#%E6%A8%99%E9%A1%8C">標題</a></li>
<li><a href="#%E6%B8%85%E5%96%AE">清單</a></li>
<li><a href="#%E5%BC%95%E8%A8%80">引言</a></li>
<li><a href="#%E8%A1%A8%E6%A0%BC">表格</a></li>
<li><a href="#%E7%A8%8B%E5%BC%8F%E7%A2%BC">程式碼</a></li>
<li><a href="#%E9%80%A3%E7%B5%90">連結</a></li>
<li><a href="#%E5%BC%B7%E8%AA%BF">強調</a></li>
<li><a href="#%E5%88%86%E9%9A%94%E7%B7%9A">分隔線</a></li>
</ul>
</li>
<li><a href="#javascript-%E8%AA%9E%E6%B3%95%E6%B8%AC%E8%A9%A6">Javascript 語法測試</a></li>
<li><a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99">參考資料</a></li>
</ul>
<!-- tocstop -->

<hr>
<h1 id="Markdown-語法測試"><a href="#Markdown-語法測試" class="headerlink" title="Markdown 語法測試"></a>Markdown 語法測試</h1><h2 id="標題"><a href="#標題" class="headerlink" title="標題"></a>標題</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 標題語法</span><br><span class="line"></span><br><span class="line"># 標題一</span><br><span class="line">## 標題二</span><br><span class="line">### 標題三</span><br><span class="line"></span><br><span class="line">標題一</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">標題二</span><br><span class="line">----------------</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>（怕打亂目錄結構，就不做標題的實際呈現了）</p>
<h2 id="清單"><a href="#清單" class="headerlink" title="清單"></a>清單</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 無序清單</span><br><span class="line"></span><br><span class="line">- 項目A</span><br><span class="line">- 項目B</span><br><span class="line">- 項目C</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 有序清單</span><br><span class="line"></span><br><span class="line">1. 項目一</span><br><span class="line">2. 項目二</span><br><span class="line">3. 項目三</span><br></pre></td></tr></table></figure>

<p>無序清單</p>
<ul>
<li>項目A</li>
<li>項目B</li>
<li>項目C</li>
</ul>
<p>有序清單</p>
<ol>
<li>項目一</li>
<li>項目二</li>
<li>項目三</li>
</ol>
<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 引言語法</span><br><span class="line"></span><br><span class="line">&gt; 今天天氣真好</span><br></pre></td></tr></table></figure>

<blockquote>
<p>今天天氣真好</p>
</blockquote>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table>
<thead>
<tr>
<th align="left">Header One</th>
<th align="left">Header Two</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Item One</td>
<td align="left">Item Two</td>
</tr>
</tbody></table>
<h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 程式碼格式</span><br><span class="line"></span><br><span class="line">測試測試 &#96;我是在句子內的程式碼&#96; 測試測試</span><br><span class="line"></span><br><span class="line">&#96; &#96; &#96;</span><br><span class="line">我是有獨立區塊的程式碼</span><br><span class="line">&#96; &#96; &#96;</span><br><span class="line">↑ 要把三個 &#96; 接在一起</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>測試測試 <code>我是在句子內的程式碼</code> 測試測試</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我是有獨立區塊的程式碼</span><br></pre></td></tr></table></figure>

<h2 id="連結"><a href="#連結" class="headerlink" title="連結"></a>連結</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我是李[連結](https:&#x2F;&#x2F;ayugioh2003.github.io&#x2F;)</span><br></pre></td></tr></table></figure>
<p>我是李<a href="https://ayugioh2003.github.io/">連結</a></p>
<h2 id="強調"><a href="#強調" class="headerlink" title="強調"></a>強調</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我要*強調*</span><br></pre></td></tr></table></figure>
<p>我要<em>強調</em></p>
<h2 id="分隔線"><a href="#分隔線" class="headerlink" title="分隔線"></a>分隔線</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 分隔線語法</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="Javascript-語法測試"><a href="#Javascript-語法測試" class="headerlink" title="Javascript 語法測試"></a>Javascript 語法測試</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// js 程式碼</span></span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">disp_alert</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;我是警告框！！&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=<span class="string">&quot;button&quot;</span> onclick=<span class="string">&quot;disp_alert()&quot;</span> value=<span class="string">&quot;显示警告框&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>

<script type="text/javascript">
function disp_alert(){
  alert("我是警告框！！")
}
</script>


<div>
  點擊按鈕看看 <input type="button" onclick="disp_alert()" value="顯示警告框" />
</div>

<hr>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://wastemobile.gitbooks.io/gitbook-chinese/content/format/markdown.html">Markdown | GitBook 中文解說 - 2.4</a></li>
<li><a href="http://markdown.tw/">Markdown 語法說明</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>從github上clone到coding</title>
    <url>/2016/10/clone-from-coding-to-github/</url>
    <content><![CDATA[<p><img src="/images/20161022coding.png" alt="來源：https://coding.net/about"></p>
<p>自從知道有 webIDE 這種東西存在後，一直肖想著一件事情，就在只要在有網路的地方，就可以在 github 上的 hexo or jekyll 寫部落格。先前是用 cloud9，但好像不支援 ssh 上傳了，最近則找到了中國產的服務：<a href="https://coding.net/">https://coding.net/</a> 、<a href="https://ide.coding.net/">https://ide.coding.net</a> 。</p>
<p>以下將介紹怎麼把 github 上的項目 clone 到 coding 上。</p>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#%E7%95%B6%E6%99%82%E7%9A%84%E7%92%B0%E5%A2%83">當時的環境</a></li>
<li><a href="#%E6%AD%A5%E9%A9%9F">步驟</a><ul>
<li><a href="#%E5%9C%A8-coding-%E7%9A%84-webide-%E5%AE%89%E8%A3%9D-hexo">在 coding 的 webIDE 安裝 hexo</a></li>
<li><a href="#%E5%9C%A8-coding-%E7%9A%84-webide-%E6%B7%BB%E5%8A%A0-git-%E9%85%8D%E7%BD%AE%E8%A8%8A%E6%81%AF">在 coding 的 webIDE 添加 git 配置訊息</a></li>
<li><a href="#%E5%9C%A8-coding-%E7%9A%84-webide-%E7%94%9F%E6%88%90%E5%AF%86%E9%91%B0-%E6%9F%A5%E7%9C%8B%E5%AF%86%E9%91%B0">在 coding 的 webIDE 生成密鑰、查看密鑰</a></li>
<li><a href="#%E5%B0%87%E5%AF%86%E9%91%B0%E8%B2%BC%E5%88%B0-coding-%E7%9A%84-ssh-%E8%A8%AD%E5%AE%9A">將密鑰貼到 coding 的 ssh 設定</a></li>
<li><a href="#%E5%BE%9E-github-%E4%B8%8A-clone-%E5%88%B0-coding-%E4%B8%8A">從 github 上 clone 到 coding 上</a></li>
</ul>
</li>
</ul>
<!-- tocstop -->

<hr>
<h1 id="當時的環境"><a href="#當時的環境" class="headerlink" title="當時的環境"></a>當時的環境</h1><ul>
<li>已經有 github 帳號，上面有 blog_hexo 的項目</li>
<li>已經有 coding 帳號，已經開好 blog_hexo 項目</li>
</ul>
<hr>
<h1 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h1><h2 id="在-coding-的-webIDE-安裝-hexo"><a href="#在-coding-的-webIDE-安裝-hexo" class="headerlink" title="在 coding 的 webIDE 安裝 hexo"></a>在 coding 的 webIDE 安裝 hexo</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="http://sufaith.com/2016/02/27/Hexo%E8%BF%81%E7%A7%BB/">Hexo 在两台电脑间的操作流程 | sufaith</a></li>
</ul>
<h2 id="在-coding-的-webIDE-添加-git-配置訊息"><a href="#在-coding-的-webIDE-添加-git-配置訊息" class="headerlink" title="在 coding 的 webIDE 添加 git 配置訊息"></a>在 coding 的 webIDE 添加 git 配置訊息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;John Doe&quot;</span><br><span class="line">$ git config --global user.email johndoe@example.com</span><br></pre></td></tr></table></figure>


<h2 id="在-coding-的-webIDE-生成密鑰、查看密鑰"><a href="#在-coding-的-webIDE-生成密鑰、查看密鑰" class="headerlink" title="在 coding 的 webIDE 生成密鑰、查看密鑰"></a>在 coding 的 webIDE 生成密鑰、查看密鑰</h2><p>生成密鑰</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -C &quot;xxxxxxxxx@gmail.com&quot;</span><br></pre></td></tr></table></figure>

<p>查看 .ssh 底下檔案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -al ~&#x2F;.ssh</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://help.github.com/articles/checking-for-existing-ssh-keys/">Checking for existing SSH keys - User Documentation</a>x</li>
</ul>
<p>查看密鑰</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;home&#x2F;coding&#x2F;.ssh&#x2F;id.pub</span><br></pre></td></tr></table></figure>
<p>gedit 可能也可以看</p>
<ul>
<li><a href="http://www.jianshu.com/p/3c8629ca00eb">上传本地代码到 github 上 - 简书</a></li>
</ul>
<h2 id="將密鑰貼到-coding-的-ssh-設定"><a href="#將密鑰貼到-coding-的-ssh-設定" class="headerlink" title="將密鑰貼到 coding 的 ssh 設定"></a>將密鑰貼到 coding 的 ssh 設定</h2><ul>
<li><a href="https://coding.net/user/account/setting/keys">https://coding.net/user/account/setting/keys</a></li>
</ul>
<h2 id="從-github-上-clone-到-coding-上"><a href="#從-github-上-clone-到-coding-上" class="headerlink" title="從 github 上 clone 到 coding 上"></a>從 github 上 clone 到 coding 上</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:ayugioh2003&#x2F;hexo_blog.git</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>讓chrome變成所見即所得編輯器</title>
    <url>/2016/10/make-chrome-be-editor/</url>
    <content><![CDATA[<p><img src="/images/chrome.jpg" alt="來源：http://www.pc3mag.com/google-chrome-stop-flash/"></p>
<p>剛剛看到一個能直接在 chrome 更改網頁內容的方式，就簡單紀錄一下</p>
<span id="more"></span>

<p>到 Chrome 的開發者控制台（快捷鍵是 <code>F12</code>），打入以下程式碼</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">document.body.contentEditable=true</span><br></pre></td></tr></table></figure>

<p>就能直接編輯網頁內容了～</p>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Html</tag>
      </tags>
  </entry>
  <entry>
    <title>目前所安裝的atom套件</title>
    <url>/2016/10/atom-packages/</url>
    <content><![CDATA[<p><img src="/images/20161023atom.png" alt="來源:https://goo.gl/LGBVzh"></p>
<p>想記錄一下目前在 atom 安裝的 package 有哪些，未來有空的話再介紹一下大略的功能。先記錄 markdown 相關 package，其他的放到 others XD</p>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#package-%E8%AE%93-atom-%E6%88%90%E7%82%BA-markdown-%E7%B7%A8%E8%BC%AF%E5%99%A8">Package: 讓 atom 成為 Markdown 編輯器</a><ul>
<li><a href="#expose%E9%A0%90%E8%A6%BD%E5%B7%B2%E9%96%8B%E5%95%9F%E6%AA%94%E6%A1%88">expose｜預覽已開啟檔案</a></li>
<li><a href="#markdown-img-paste%E9%80%9F%E8%B2%BCmd%E5%9C%96%E6%AA%94%E8%AA%9E%E6%B3%95">markdown-img-paste｜速貼md圖檔語法</a></li>
<li><a href="#markdwon-preview-enhancedmd%E9%A0%90%E8%A6%BD">markdwon-preview-enhanced｜md預覽</a></li>
<li><a href="#markdown-table-formatter%E8%AA%BF%E6%95%B4md%E8%A1%A8%E6%A0%BC">markdown-table-formatter｜調整md表格</a></li>
<li><a href="#markdown-writer%E6%94%AF%E6%8F%B4md%E7%B7%A8%E8%BC%AF">markdown-writer｜支援md編輯</a></li>
<li><a href="#platformio-ide-terminal%E5%85%A7%E7%BD%AEterminal">platformio-ide-terminal｜內置terminal</a></li>
<li><a href="#script%E5%9F%B7%E8%A1%8C%E7%95%B6%E5%89%8D%E8%85%B3%E6%9C%AC">script｜執行當前腳本</a></li>
<li><a href="#vim-modevim%E8%AA%9E%E6%B3%95%E6%93%8D%E4%BD%9C">vim-mode｜vim語法操作</a></li>
<li><a href="#wordcount%E7%AE%97%E5%AD%97">wordcount｜算字</a></li>
<li><a href="#zen%E5%85%8D%E9%99%A4%E5%88%86%E5%BF%83">Zen｜免除分心</a></li>
</ul>
</li>
<li><a href="#%E5%85%B6%E4%BB%96">其他</a><ul>
<li><a href="#activate-power-mode%E6%89%93%E5%AD%97%E7%89%B9%E6%95%88">activate-power-mode｜打字特效</a></li>
<li><a href="#emmet%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90%E8%AA%9E%E6%B3%95%E6%A8%99%E7%B1%A4">emmet｜快速生成語法標籤</a></li>
<li><a href="#color-picker%E5%8F%96%E8%89%B2%E7%9B%B8%E9%97%9C">color-picker｜取色相關</a></li>
<li><a href="#file-icons%E7%BE%8E%E5%8C%96%E6%AA%94%E6%A1%88%E5%9C%96%E6%A8%99">file-icons｜美化檔案圖標</a></li>
<li><a href="#jumpy%E5%BF%AB%E9%80%9F%E8%B7%B3%E5%88%B0%E6%9F%90%E6%AE%B5%E8%90%BD">jumpy｜快速跳到某段落</a></li>
<li><a href="#linter%E8%AA%9E%E6%B3%95%E5%81%B5%E9%8C%AF">linter｜語法偵錯</a></li>
<li><a href="#linter-jshintjs-%E9%9D%9C%E6%85%8B%E8%AA%9E%E6%B3%95%E5%81%B5%E9%8C%AF">linter-jshint｜js 靜態語法偵錯</a></li>
<li><a href="#minimap%E7%A8%8B%E5%BC%8F%E7%A2%BC%E7%B8%AE%E5%9C%96">minimap｜程式碼縮圖</a></li>
<li><a href="#open_in_cmd%E5%9C%A8%E8%A9%B2%E7%9B%AE%E9%8C%84%E9%96%8B%E5%95%9F-cmd">open_in_cmd｜在該目錄開啟 cmd</a></li>
<li><a href="#pigments%E5%8F%96%E8%89%B2%E7%9B%B8%E9%97%9C">pigments｜取色相關</a></li>
<li><a href="#symbols-tree-view%E7%9B%AE%E9%8C%84%E6%A8%B9">symbols-tree-view｜目錄樹</a></li>
<li><a href="#sync-settings%E5%90%8C%E6%AD%A5-atom-package">sync-settings｜同步 atom package</a></li>
</ul>
</li>
<li><a href="#%E6%99%82%E9%96%93%E5%BF%AB%E7%85%A7">時間快照</a><ul>
<li><a href="#20161105">2016.11.05</a></li>
<li><a href="#20161023">2016.10.23</a></li>
</ul>
</li>
<li><a href="#%E7%9B%B8%E9%97%9C%E9%80%A3%E7%B5%90">相關連結</a></li>
</ul>
<!-- tocstop -->

<hr>
<p>先記錄幾個事後方便使用快捷鍵</p>
<ul>
<li><code>ctrl + alt + R</code> 可重啟 atom</li>
<li><code>ctrl + ,</code> 可打開 setting，到 <code>install</code> 可搜尋 package 下載</li>
<li>打開 terminal，輸入 <code>apm install package-name</code> 可直接下載 package</li>
<li>打開 terminal，輸入 <code>apm ls</code> 可查看當前安裝的 package</li>
</ul>
<p>暫時將 package 分成 Markdown 和 others 兩類</p>
<hr>
<h1 id="Package-讓-atom-成為-Markdown-編輯器"><a href="#Package-讓-atom-成為-Markdown-編輯器" class="headerlink" title="Package: 讓 atom 成為 Markdown 編輯器"></a>Package: 讓 atom 成為 Markdown 編輯器</h1><p>忘記是從什麼時候接觸的 markdown 這個語法了。一開始的時候根本看不懂它在幹麻 XD 但後來就漸漸明白它的好了。身為一個還沒什麼在碼程式的人，裝 atom 當然是拿來打 markdown 啦，不然要幹麻。以下來記錄些我覺得對 atom 變身成 markdown 編輯器有幫助的 package</p>
<h2 id="expose｜預覽已開啟檔案"><a href="#expose｜預覽已開啟檔案" class="headerlink" title="expose｜預覽已開啟檔案"></a>expose｜預覽已開啟檔案</h2><ul>
<li>網址：<a href="https://atom.io/packages/expose">expose</a></li>
</ul>
<ul>
<li>按住 <code>alt + shift + e</code> 後，能夠預覽目前開啟的檔案畫面。這在全螢幕的狀態下、想換檔案來編輯時的幫助很大</li>
</ul>
<h2 id="markdown-img-paste｜速貼md圖檔語法"><a href="#markdown-img-paste｜速貼md圖檔語法" class="headerlink" title="markdown-img-paste｜速貼md圖檔語法"></a>markdown-img-paste｜速貼md圖檔語法</h2><ul>
<li><p>網址：<a href="https://github.com/cocoakekeyu/markdown-img-paste">cocoakekeyu/markdown-img-paste: 一个可以快速粘贴剪贴板里的照片到markdown的插件，并且可以设置使用七牛存储照片。</a></p>
</li>
<li><p>在 <code>hackmd.io</code> 這個網路服務中，只要將本機端的圖片拖曳到編輯器中，它就能自動幫你上傳圖片到 imgur，並且自動生成 <code>![](filename)</code> 的語法，第一次看到的時候覺得很感動（恩？）。現在，<code>markdown-img-paste</code> 也能做到這件事情。在 md 文件按下 <code>ctrl+shft+v</code>，可以完成兩件事情</p>
<ol>
<li>儲存照片到 本地端 / imgur / 七牛上</li>
<li>在 md 檔貼上 <code>![](filename)</code></li>
</ol>
</li>
<li><p>此外，我在 github 上向作者提問，沒想到才兩天就解決了我的提問（<a href="https://github.com/cocoakekeyu/markdown-img-paste/issues/2">如何自訂本地端儲存路徑和檔名 · Issue #2 · cocoakekeyu/markdown-img-paste</a>），立馬幫這個項目按 star XD。這 package 還滿好用的，想快速的複製後貼圖的話可以使用。</p>
</li>
</ul>
<h2 id="markdwon-preview-enhanced｜md預覽"><a href="#markdwon-preview-enhanced｜md預覽" class="headerlink" title="markdwon-preview-enhanced｜md預覽"></a>markdwon-preview-enhanced｜md預覽</h2><ul>
<li><p>網址：<a href="https://github.com/shd101wyy/markdown-preview-enhanced/blob/master/docs/README_CN.md">markdown-preview-enhanced/README_CN.md at master · shd101wyy/markdown-preview-enhanced</a></p>
</li>
<li><p>其實 md 的原始檔不是重點，被它渲染過後的 html 才是大家想要看到的，因此有個方便的 markdown preview 功能是很重要滴。<code>markdwon-preview-enhanced</code> 算是 atom 裡，最好用的 markdown preview 工具。我常在用的有以下功能</p>
<ol>
<li>按 <code>Ctrl + Shift + M</code> 可渲染 md 成 html</li>
<li>滑動同步</li>
<li>Toc 自動生成</li>
<li>支援圖片上傳<ul>
<li>按下 <code>Ctrl + Shift + I</code>，拖曳圖片到視窗</li>
<li>將圖片放到 本地端/imgur/sm.ms</li>
<li>在 md 檔貼上 <code>![](filename)</code> 語法</li>
</ul>
</li>
</ol>
</li>
<li><p>這套件就像是 markdown 的瑞士刀，把一些常用的功能都包進來了。滿推薦這個 package 的，可以把內建的 markdwon preview 給停用了</p>
</li>
</ul>
<h2 id="markdown-table-formatter｜調整md表格"><a href="#markdown-table-formatter｜調整md表格" class="headerlink" title="markdown-table-formatter｜調整md表格"></a>markdown-table-formatter｜調整md表格</h2><ul>
<li>markdwon 的表格語法，我覺得是個硬傷，因為用起來實在是很麻煩 … 。<code>markdown-table-formatter</code> 會自動調整 table 的格式，會讓表格自動對齊，讓表格變比較好看</li>
</ul>
<h2 id="markdown-writer｜支援md編輯"><a href="#markdown-writer｜支援md編輯" class="headerlink" title="markdown-writer｜支援md編輯"></a>markdown-writer｜支援md編輯</h2><ul>
<li>好像有支援快速輸入 markdwon 語法的樣子 … 對這個 package 不是很熟 orz。目前留著的原因是，無序列表換行的時候，它可以幫忙添加一個 <code>-</code> 的符號（聽起來我滿懶惰的 …）</li>
</ul>
<h2 id="platformio-ide-terminal｜內置terminal"><a href="#platformio-ide-terminal｜內置terminal" class="headerlink" title="platformio-ide-terminal｜內置terminal"></a>platformio-ide-terminal｜內置terminal</h2><ul>
<li>能在當前工作區目錄下開啟 PowerShell，並內嵌在 atom 裡頭（神 package。PowerShell 本身也很神，可惜好像無法以管理員權限執行）。linux 用戶去安裝 <code>terminal-plus</code>，它是原始專案，<code>platformio-ide-terminal</code> 是 folk 它改成適合 windows 的版本。</li>
</ul>
<h2 id="script｜執行當前腳本"><a href="#script｜執行當前腳本" class="headerlink" title="script｜執行當前腳本"></a>script｜執行當前腳本</h2><ul>
<li><p>能直接執行當前文件的程式，阿阿阿好好用啊，簡直快把 atom 改造成 IDE 了（迷：是誰剛剛說只把 atom 當成 markdown 編輯器在看的）。目前試過 <code>.sh</code>、<code>.bat</code>、<code>.js</code>、<code>.java</code>、<code>.py</code>、<code>.r</code> 都可以</p>
</li>
<li><p>阿，補充一下為什麼要安裝 <code>platformio-ide-terminal</code> 和 <code>script</code> 這兩個 package。因為我目前是用 hexo 在產生部落格的 html 檔案，而我將一些語法整合成數個能包在一起執行的 <code>.sh</code> 腳本。這樣以後想執行命令時，就能按快捷鍵，而不用碼字啦 ~</p>
</li>
</ul>
<h2 id="vim-mode｜vim語法操作"><a href="#vim-mode｜vim語法操作" class="headerlink" title="vim-mode｜vim語法操作"></a>vim-mode｜vim語法操作</h2><ul>
<li>能夠用 vim 的操作方式來編輯文件，還在學習中。聽說一個牛B的碼農就要用 vim 的指法來碼字才夠牛B，可是我目前只用 <code>J</code>, <code>K</code>, <code>L</code>, <code>M</code> 來讓鼠標上下左右而已 …</li>
</ul>
<h2 id="wordcount｜算字"><a href="#wordcount｜算字" class="headerlink" title="wordcount｜算字"></a>wordcount｜算字</h2><ul>
<li>能自動計算字數，不過對中文字不太友善。參考就好</li>
</ul>
<h2 id="Zen｜免除分心"><a href="#Zen｜免除分心" class="headerlink" title="Zen｜免除分心"></a>Zen｜免除分心</h2><ul>
<li><p>網址：<a href="https://atom.io/packages/Zen">zen</a></p>
</li>
<li><p>原本這 package 的想法是，讓 edtidor 能有一個不被分心的編輯環境，而這同樣也適合 markdown 的寫作。按下 <code>Shift + F11</code> 就能得到全屏的編輯畫面。再加上 <code>markdwon-preview-enhanced</code> 的畫面，atom 就變身成屏佔比超大的 markdwon 編輯器了（樂）</p>
</li>
</ul>
<hr>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul>
<li>除非我接下來很積極的在學某種程式語言（可能是 <code>js</code> 或 <code>python</code> 或 <code>java</code> 或 <code>R</code> 吧），不然其他的 package 應該都會被放到 others XD</li>
</ul>
<h2 id="activate-power-mode｜打字特效"><a href="#activate-power-mode｜打字特效" class="headerlink" title="activate-power-mode｜打字特效"></a>activate-power-mode｜打字特效</h2><ul>
<li>在打字的時候，能產生視窗在振動、以及火花的特效，覺得很酷炫 XD</li>
</ul>
<h2 id="emmet｜快速生成語法標籤"><a href="#emmet｜快速生成語法標籤" class="headerlink" title="emmet｜快速生成語法標籤"></a>emmet｜快速生成語法標籤</h2><ul>
<li><a href="https://pjchender.blogspot.tw/2016/07/emmet.html">[學習] Emmet 簡易教學 - 快速上手包 | PJCHENder 愛分享</a></li>
<li>超好用的 ~ 可以快速生成 <code>html</code> 和 <code>css</code> 的標籤，聽說在各個編輯器平台都支援這個 package（像是 notepad++, sublime）。強力推薦安裝這個 package。</li>
</ul>
<h2 id="color-picker｜取色相關"><a href="#color-picker｜取色相關" class="headerlink" title="color-picker｜取色相關"></a>color-picker｜取色相關</h2><h2 id="file-icons｜美化檔案圖標"><a href="#file-icons｜美化檔案圖標" class="headerlink" title="file-icons｜美化檔案圖標"></a>file-icons｜美化檔案圖標</h2><h2 id="jumpy｜快速跳到某段落"><a href="#jumpy｜快速跳到某段落" class="headerlink" title="jumpy｜快速跳到某段落"></a>jumpy｜快速跳到某段落</h2><p>Enter jump mode</p>
<ul>
<li><code>shift + enter</code></li>
</ul>
<p>Reset first character entered</p>
<ul>
<li><code>backspace</code></li>
</ul>
<p>Cancel/exit jump mode (any)</p>
<ul>
<li><code>shift + enter</code></li>
<li><code>enter</code></li>
<li><code>esc</code></li>
<li><code>space</code></li>
</ul>
<h2 id="linter｜語法偵錯"><a href="#linter｜語法偵錯" class="headerlink" title="linter｜語法偵錯"></a>linter｜語法偵錯</h2><h2 id="linter-jshint｜js-靜態語法偵錯"><a href="#linter-jshint｜js-靜態語法偵錯" class="headerlink" title="linter-jshint｜js 靜態語法偵錯"></a>linter-jshint｜js 靜態語法偵錯</h2><h2 id="minimap｜程式碼縮圖"><a href="#minimap｜程式碼縮圖" class="headerlink" title="minimap｜程式碼縮圖"></a>minimap｜程式碼縮圖</h2><h2 id="open-in-cmd｜在該目錄開啟-cmd"><a href="#open-in-cmd｜在該目錄開啟-cmd" class="headerlink" title="open_in_cmd｜在該目錄開啟 cmd"></a>open_in_cmd｜在該目錄開啟 cmd</h2><h2 id="pigments｜取色相關"><a href="#pigments｜取色相關" class="headerlink" title="pigments｜取色相關"></a>pigments｜取色相關</h2><h2 id="symbols-tree-view｜目錄樹"><a href="#symbols-tree-view｜目錄樹" class="headerlink" title="symbols-tree-view｜目錄樹"></a>symbols-tree-view｜目錄樹</h2><ul>
<li>我以為這是 atom 會內建的 package，可是卻跑到社群 packages 的分類 …。總之，這功能好用，能看到目前工作目錄的目錄樹。按 <code>ctrl + \</code> 能切換開啟關閉。</li>
</ul>
<h2 id="sync-settings｜同步-atom-package"><a href="#sync-settings｜同步-atom-package" class="headerlink" title="sync-settings｜同步 atom package"></a>sync-settings｜同步 atom package</h2><ul>
<li>能夠同步不同電腦上的相同帳戶的 atom package。但我不確定設置會不會相同、以及 atom 的 sytle 等等會不會也能同步</li>
</ul>
<hr>
<h1 id="時間快照"><a href="#時間快照" class="headerlink" title="時間快照"></a>時間快照</h1><p>想到的時候，就執行一下 <code>apm ls</code>，貼上目前安裝的 atom packages。</p>
<h2 id="2016-11-05"><a href="#2016-11-05" class="headerlink" title="2016.11.05"></a>2016.11.05</h2><p>├── <a href="mailto:&#x61;&#99;&#x74;&#105;&#118;&#x61;&#116;&#101;&#x2d;&#x70;&#111;&#x77;&#101;&#x72;&#45;&#x6d;&#111;&#100;&#101;&#64;&#48;&#x2e;&#51;&#46;&#50;">&#x61;&#99;&#x74;&#105;&#118;&#x61;&#116;&#101;&#x2d;&#x70;&#111;&#x77;&#101;&#x72;&#45;&#x6d;&#111;&#100;&#101;&#64;&#48;&#x2e;&#51;&#46;&#50;</a><br>├── <a href="mailto:&#97;&#116;&#x6f;&#109;&#x2d;&#98;&#x65;&#97;&#117;&#x74;&#x69;&#102;&#x79;&#x40;&#48;&#46;&#50;&#57;&#46;&#49;&#51;">&#97;&#116;&#x6f;&#109;&#x2d;&#98;&#x65;&#97;&#117;&#x74;&#x69;&#102;&#x79;&#x40;&#48;&#46;&#50;&#57;&#46;&#49;&#51;</a><br>├── <a href="mailto:&#x61;&#x74;&#x6f;&#x6d;&#45;&#104;&#116;&#109;&#108;&#x2d;&#112;&#x72;&#101;&#x76;&#105;&#101;&#119;&#x40;&#48;&#x2e;&#x31;&#x2e;&#49;&#x39;">&#x61;&#x74;&#x6f;&#x6d;&#45;&#104;&#116;&#109;&#108;&#x2d;&#112;&#x72;&#101;&#x76;&#105;&#101;&#119;&#x40;&#48;&#x2e;&#x31;&#x2e;&#49;&#x39;</a><br>├── <a href="mailto:&#x61;&#x74;&#111;&#109;&#45;&#x72;&#101;&#97;&#x63;&#x74;&#45;&#x70;&#114;&#101;&#x76;&#x69;&#x65;&#x77;&#x40;&#x32;&#46;&#x30;&#46;&#x30;">&#x61;&#x74;&#111;&#109;&#45;&#x72;&#101;&#97;&#x63;&#x74;&#45;&#x70;&#114;&#101;&#x76;&#x69;&#x65;&#x77;&#x40;&#x32;&#46;&#x30;&#46;&#x30;</a><br>├── <a href="mailto:&#97;&#116;&#x6f;&#109;&#45;&#x74;&#x65;&#114;&#109;&#105;&#x6e;&#97;&#x6c;&#x40;&#x30;&#x2e;&#x38;&#x2e;&#48;">&#97;&#116;&#x6f;&#109;&#45;&#x74;&#x65;&#114;&#109;&#105;&#x6e;&#97;&#x6c;&#x40;&#x30;&#x2e;&#x38;&#x2e;&#48;</a><br>├── <a href="mailto:&#97;&#x74;&#x6f;&#109;&#45;&#116;&#x65;&#114;&#x6d;&#x69;&#110;&#97;&#x6c;&#x2d;&#x70;&#97;&#110;&#x65;&#x6c;&#64;&#52;&#x2e;&#x34;&#46;&#52;">&#97;&#x74;&#x6f;&#109;&#45;&#116;&#x65;&#114;&#x6d;&#x69;&#110;&#97;&#x6c;&#x2d;&#x70;&#97;&#110;&#x65;&#x6c;&#64;&#52;&#x2e;&#x34;&#46;&#52;</a><br>├── <a href="mailto:&#97;&#x74;&#111;&#x6d;&#45;&#116;&#101;&#x72;&#110;&#106;&#x73;&#x40;&#x30;&#46;&#x31;&#x34;&#46;&#50;">&#97;&#x74;&#111;&#x6d;&#45;&#116;&#101;&#x72;&#110;&#106;&#x73;&#x40;&#x30;&#46;&#x31;&#x34;&#46;&#50;</a><br>├── <a href="mailto:&#x62;&#117;&#115;&#121;&#64;&#x30;&#46;&#53;&#x2e;&#48;">&#x62;&#117;&#115;&#121;&#64;&#x30;&#46;&#53;&#x2e;&#48;</a><br>├── <a href="mailto:&#99;&#x6f;&#108;&#111;&#x72;&#x2d;&#112;&#x69;&#x63;&#107;&#x65;&#x72;&#x40;&#50;&#46;&#50;&#x2e;&#x32;">&#99;&#x6f;&#108;&#111;&#x72;&#x2d;&#112;&#x69;&#x63;&#107;&#x65;&#x72;&#x40;&#50;&#46;&#50;&#x2e;&#x32;</a><br>├── <a href="mailto:&#101;&#x6d;&#109;&#101;&#116;&#64;&#50;&#46;&#x34;&#46;&#51;">&#101;&#x6d;&#109;&#101;&#116;&#64;&#50;&#46;&#x34;&#46;&#51;</a><br>├── <a href="mailto:&#101;&#x78;&#112;&#111;&#115;&#x65;&#64;&#48;&#46;&#49;&#x32;&#46;&#x31;">&#101;&#x78;&#112;&#111;&#115;&#x65;&#64;&#48;&#46;&#49;&#x32;&#46;&#x31;</a><br>├── <a href="mailto:&#x66;&#105;&#x6c;&#x65;&#45;&#x69;&#99;&#111;&#x6e;&#x73;&#x40;&#49;&#46;&#55;&#46;&#50;&#50;">&#x66;&#105;&#x6c;&#x65;&#45;&#x69;&#99;&#111;&#x6e;&#x73;&#x40;&#49;&#46;&#55;&#46;&#50;&#50;</a><br>├── <a href="mailto:&#103;&#x69;&#116;&#45;&#x70;&#108;&#x75;&#115;&#x40;&#53;&#x2e;&#x31;&#51;&#x2e;&#x34;">&#103;&#x69;&#116;&#45;&#x70;&#108;&#x75;&#115;&#x40;&#53;&#x2e;&#x31;&#51;&#x2e;&#x34;</a><br>├── <a href="mailto:&#x6a;&#117;&#109;&#x70;&#x79;&#x40;&#51;&#x2e;&#48;&#x2e;&#51;">&#x6a;&#117;&#109;&#x70;&#x79;&#x40;&#51;&#x2e;&#48;&#x2e;&#51;</a><br>├── <a href="mailto:&#108;&#105;&#x6e;&#x74;&#101;&#114;&#x40;&#x31;&#x2e;&#x31;&#49;&#x2e;&#x31;&#56;">&#108;&#105;&#x6e;&#x74;&#101;&#114;&#x40;&#x31;&#x2e;&#x31;&#49;&#x2e;&#x31;&#56;</a><br>├── <a href="mailto:&#108;&#x69;&#x6e;&#x74;&#x65;&#x72;&#x2d;&#x6a;&#115;&#104;&#105;&#x6e;&#116;&#64;&#51;&#x2e;&#x30;&#x2e;&#x31;">&#108;&#x69;&#x6e;&#x74;&#x65;&#x72;&#x2d;&#x6a;&#115;&#104;&#105;&#x6e;&#116;&#64;&#51;&#x2e;&#x30;&#x2e;&#x31;</a><br>├── <a href="mailto:&#x6d;&#97;&#x72;&#107;&#100;&#x6f;&#119;&#110;&#45;&#x69;&#x6d;&#x67;&#x2d;&#x70;&#x61;&#x73;&#x74;&#x65;&#64;&#48;&#x2e;&#51;&#x2e;&#50;">&#x6d;&#97;&#x72;&#107;&#100;&#x6f;&#119;&#110;&#45;&#x69;&#x6d;&#x67;&#x2d;&#x70;&#x61;&#x73;&#x74;&#x65;&#64;&#48;&#x2e;&#51;&#x2e;&#50;</a><br>├── <a href="mailto:&#x6d;&#x61;&#114;&#x6b;&#x64;&#111;&#119;&#x6e;&#x2d;&#x70;&#x72;&#101;&#118;&#x69;&#x65;&#x77;&#45;&#101;&#110;&#x68;&#x61;&#110;&#99;&#101;&#x64;&#64;&#48;&#x2e;&#56;&#46;&#x37;">&#x6d;&#x61;&#114;&#x6b;&#x64;&#111;&#119;&#x6e;&#x2d;&#x70;&#x72;&#101;&#118;&#x69;&#x65;&#x77;&#45;&#101;&#110;&#x68;&#x61;&#110;&#99;&#101;&#x64;&#64;&#48;&#x2e;&#56;&#46;&#x37;</a><br>├── <a href="mailto:&#109;&#x61;&#x72;&#x6b;&#x64;&#111;&#119;&#x6e;&#45;&#x74;&#97;&#x62;&#x6c;&#x65;&#45;&#102;&#111;&#114;&#109;&#97;&#116;&#116;&#x65;&#x72;&#64;&#50;&#x2e;&#56;&#46;&#51;">&#109;&#x61;&#x72;&#x6b;&#x64;&#111;&#119;&#x6e;&#45;&#x74;&#97;&#x62;&#x6c;&#x65;&#45;&#102;&#111;&#114;&#109;&#97;&#116;&#116;&#x65;&#x72;&#64;&#50;&#x2e;&#56;&#46;&#51;</a><br>├── <a href="mailto:&#109;&#97;&#114;&#x6b;&#x64;&#111;&#x77;&#110;&#x2d;&#x77;&#x72;&#x69;&#116;&#x65;&#114;&#x40;&#x32;&#46;&#x33;&#x2e;&#51;">&#109;&#97;&#114;&#x6b;&#x64;&#111;&#x77;&#110;&#x2d;&#x77;&#x72;&#x69;&#116;&#x65;&#114;&#x40;&#x32;&#46;&#x33;&#x2e;&#51;</a><br>├── <a href="mailto:&#109;&#105;&#x6e;&#105;&#109;&#x61;&#x70;&#x40;&#52;&#46;&#50;&#x35;&#46;&#x36;">&#109;&#105;&#x6e;&#105;&#109;&#x61;&#x70;&#x40;&#52;&#46;&#50;&#x35;&#46;&#x36;</a><br>├── <a href="mailto:&#111;&#x70;&#101;&#x6e;&#95;&#105;&#x6e;&#x5f;&#99;&#109;&#x64;&#x40;&#x30;&#46;&#54;&#x2e;&#49;">&#111;&#x70;&#101;&#x6e;&#95;&#105;&#x6e;&#x5f;&#99;&#109;&#x64;&#x40;&#x30;&#46;&#54;&#x2e;&#49;</a><br>├── <a href="mailto:&#x70;&#105;&#103;&#x6d;&#x65;&#x6e;&#x74;&#115;&#64;&#x30;&#x2e;&#51;&#55;&#46;&#48;">&#x70;&#105;&#103;&#x6d;&#x65;&#x6e;&#x74;&#115;&#64;&#x30;&#x2e;&#51;&#55;&#46;&#48;</a><br>├── <a href="mailto:&#x70;&#108;&#97;&#x74;&#102;&#x6f;&#114;&#x6d;&#105;&#x6f;&#x2d;&#105;&#x64;&#101;&#45;&#116;&#x65;&#x72;&#x6d;&#105;&#x6e;&#x61;&#108;&#x40;&#x32;&#x2e;&#x32;&#46;&#48;">&#x70;&#108;&#97;&#x74;&#102;&#x6f;&#114;&#x6d;&#105;&#x6f;&#x2d;&#105;&#x64;&#101;&#45;&#116;&#x65;&#x72;&#x6d;&#105;&#x6e;&#x61;&#108;&#x40;&#x32;&#x2e;&#x32;&#46;&#48;</a><br>├── <a href="mailto:&#x73;&#99;&#114;&#x69;&#112;&#116;&#64;&#51;&#x2e;&#x39;&#x2e;&#48;">&#x73;&#99;&#114;&#x69;&#112;&#116;&#64;&#51;&#x2e;&#x39;&#x2e;&#48;</a><br>├── <a href="mailto:&#115;&#x79;&#109;&#x62;&#x6f;&#108;&#115;&#45;&#x74;&#114;&#x65;&#x65;&#45;&#118;&#x69;&#x65;&#x77;&#64;&#48;&#x2e;&#x31;&#x33;&#x2e;&#x32;">&#115;&#x79;&#109;&#x62;&#x6f;&#108;&#115;&#45;&#x74;&#114;&#x65;&#x65;&#45;&#118;&#x69;&#x65;&#x77;&#64;&#48;&#x2e;&#x31;&#x33;&#x2e;&#x32;</a><br>├── <a href="mailto:&#115;&#x79;&#x6e;&#99;&#45;&#x73;&#x65;&#x74;&#x74;&#x69;&#x6e;&#103;&#115;&#x40;&#x30;&#x2e;&#55;&#46;&#x32;">&#115;&#x79;&#x6e;&#99;&#45;&#x73;&#x65;&#x74;&#x74;&#x69;&#x6e;&#103;&#115;&#x40;&#x30;&#x2e;&#55;&#46;&#x32;</a><br>├── <a href="mailto:&#x76;&#105;&#109;&#x2d;&#109;&#111;&#x64;&#x65;&#64;&#48;&#46;&#x36;&#x35;&#46;&#49;">&#x76;&#105;&#109;&#x2d;&#109;&#111;&#x64;&#x65;&#64;&#48;&#46;&#x36;&#x35;&#46;&#49;</a><br>├── <a href="mailto:&#119;&#x6f;&#x72;&#100;&#x63;&#x6f;&#117;&#x6e;&#116;&#64;&#x32;&#46;&#x37;&#x2e;&#x30;">&#119;&#x6f;&#x72;&#100;&#x63;&#x6f;&#117;&#x6e;&#116;&#64;&#x32;&#46;&#x37;&#x2e;&#x30;</a><br>└── <a href="mailto:&#90;&#101;&#110;&#64;&#48;&#46;&#49;&#54;&#46;&#52;">&#90;&#101;&#110;&#64;&#48;&#46;&#49;&#54;&#46;&#52;</a></p>
<h2 id="2016-10-23"><a href="#2016-10-23" class="headerlink" title="2016.10.23"></a>2016.10.23</h2><p>├── <a href="mailto:&#97;&#99;&#116;&#105;&#x76;&#97;&#x74;&#x65;&#45;&#x70;&#111;&#x77;&#101;&#x72;&#45;&#x6d;&#x6f;&#x64;&#101;&#x40;&#48;&#46;&#x33;&#46;&#50;">&#97;&#99;&#116;&#105;&#x76;&#97;&#x74;&#x65;&#45;&#x70;&#111;&#x77;&#101;&#x72;&#45;&#x6d;&#x6f;&#x64;&#101;&#x40;&#48;&#46;&#x33;&#46;&#50;</a><br>├── <a href="mailto:&#97;&#x74;&#111;&#109;&#x2d;&#x68;&#116;&#x6d;&#x6c;&#45;&#x70;&#114;&#101;&#118;&#105;&#101;&#119;&#x40;&#x30;&#x2e;&#49;&#46;&#x31;&#x39;">&#97;&#x74;&#111;&#109;&#x2d;&#x68;&#116;&#x6d;&#x6c;&#45;&#x70;&#114;&#101;&#118;&#105;&#101;&#119;&#x40;&#x30;&#x2e;&#49;&#46;&#x31;&#x39;</a><br>├── <a href="mailto:&#97;&#116;&#111;&#x6d;&#45;&#116;&#x65;&#x72;&#x6d;&#105;&#x6e;&#x61;&#108;&#64;&#x30;&#x2e;&#x38;&#x2e;&#x30;">&#97;&#116;&#111;&#x6d;&#45;&#116;&#x65;&#x72;&#x6d;&#105;&#x6e;&#x61;&#108;&#64;&#x30;&#x2e;&#x38;&#x2e;&#x30;</a><br>├── <a href="mailto:&#x61;&#x74;&#111;&#x6d;&#45;&#x74;&#101;&#114;&#110;&#x6a;&#x73;&#x40;&#48;&#x2e;&#x31;&#x34;&#x2e;&#50;">&#x61;&#x74;&#111;&#x6d;&#45;&#x74;&#101;&#114;&#110;&#x6a;&#x73;&#x40;&#48;&#x2e;&#x31;&#x34;&#x2e;&#50;</a><br>├── <a href="mailto:&#x61;&#x74;&#x6f;&#109;&#105;&#x63;&#45;&#99;&#104;&#114;&#x6f;&#109;&#x65;&#x40;&#x30;&#46;&#51;&#x2e;&#x30;">&#x61;&#x74;&#x6f;&#109;&#105;&#x63;&#45;&#99;&#104;&#114;&#x6f;&#109;&#x65;&#x40;&#x30;&#46;&#51;&#x2e;&#x30;</a><br>├── <a href="mailto:&#98;&#117;&#x73;&#x79;&#64;&#x30;&#x2e;&#x35;&#46;&#x30;">&#98;&#117;&#x73;&#x79;&#64;&#x30;&#x2e;&#x35;&#46;&#x30;</a><br>├── <a href="mailto:&#x67;&#x69;&#116;&#45;&#112;&#x6c;&#x75;&#115;&#64;&#x35;&#x2e;&#x31;&#51;&#46;&#x34;">&#x67;&#x69;&#116;&#45;&#112;&#x6c;&#x75;&#115;&#64;&#x35;&#x2e;&#x31;&#51;&#46;&#x34;</a><br>├── <a href="mailto:&#106;&#x75;&#109;&#112;&#x79;&#64;&#51;&#46;&#x30;&#46;&#x33;">&#106;&#x75;&#109;&#112;&#x79;&#64;&#51;&#46;&#x30;&#46;&#x33;</a><br>├── <a href="mailto:&#x6d;&#97;&#x72;&#x6b;&#100;&#111;&#x77;&#x6e;&#x2d;&#112;&#x72;&#x65;&#x76;&#x69;&#x65;&#119;&#x2d;&#x65;&#110;&#104;&#97;&#x6e;&#99;&#101;&#x64;&#64;&#48;&#46;&#x38;&#46;&#55;">&#x6d;&#97;&#x72;&#x6b;&#100;&#111;&#x77;&#x6e;&#x2d;&#112;&#x72;&#x65;&#x76;&#x69;&#x65;&#119;&#x2d;&#x65;&#110;&#104;&#97;&#x6e;&#99;&#101;&#x64;&#64;&#48;&#46;&#x38;&#46;&#55;</a><br>├── <a href="mailto:&#109;&#x61;&#114;&#107;&#100;&#x6f;&#x77;&#x6e;&#x2d;&#116;&#97;&#x62;&#108;&#101;&#45;&#102;&#111;&#x72;&#x6d;&#x61;&#116;&#x74;&#101;&#x72;&#x40;&#50;&#x2e;&#x38;&#46;&#51;">&#109;&#x61;&#114;&#107;&#100;&#x6f;&#x77;&#x6e;&#x2d;&#116;&#97;&#x62;&#108;&#101;&#45;&#102;&#111;&#x72;&#x6d;&#x61;&#116;&#x74;&#101;&#x72;&#x40;&#50;&#x2e;&#x38;&#46;&#51;</a><br>├── <a href="mailto:&#x6d;&#97;&#114;&#107;&#100;&#x6f;&#x77;&#110;&#45;&#119;&#114;&#x69;&#116;&#101;&#114;&#x40;&#x32;&#x2e;&#51;&#46;&#51;">&#x6d;&#97;&#114;&#107;&#100;&#x6f;&#x77;&#110;&#45;&#119;&#114;&#x69;&#116;&#101;&#114;&#x40;&#x32;&#x2e;&#51;&#46;&#51;</a><br>├── <a href="mailto:&#x6f;&#x70;&#101;&#x6e;&#x5f;&#x69;&#110;&#x5f;&#99;&#x6d;&#100;&#x40;&#48;&#x2e;&#x36;&#x2e;&#x31;">&#x6f;&#x70;&#101;&#x6e;&#x5f;&#x69;&#110;&#x5f;&#99;&#x6d;&#100;&#x40;&#48;&#x2e;&#x36;&#x2e;&#x31;</a><br>├── <a href="mailto:&#115;&#x63;&#x72;&#x69;&#112;&#x74;&#64;&#x33;&#46;&#x39;&#46;&#48;">&#115;&#x63;&#x72;&#x69;&#112;&#x74;&#64;&#x33;&#46;&#x39;&#46;&#48;</a><br>├── <a href="mailto:&#x73;&#x79;&#109;&#x62;&#x6f;&#x6c;&#115;&#45;&#116;&#114;&#101;&#101;&#x2d;&#118;&#105;&#101;&#x77;&#64;&#x30;&#x2e;&#49;&#51;&#46;&#50;">&#x73;&#x79;&#109;&#x62;&#x6f;&#x6c;&#115;&#45;&#116;&#114;&#101;&#101;&#x2d;&#118;&#105;&#101;&#x77;&#64;&#x30;&#x2e;&#49;&#51;&#46;&#50;</a><br>├── <a href="mailto:&#115;&#121;&#x6e;&#x63;&#x2d;&#115;&#101;&#x74;&#x74;&#105;&#110;&#x67;&#115;&#x40;&#48;&#x2e;&#x37;&#x2e;&#x32;">&#115;&#121;&#x6e;&#x63;&#x2d;&#115;&#101;&#x74;&#x74;&#105;&#110;&#x67;&#115;&#x40;&#48;&#x2e;&#x37;&#x2e;&#x32;</a><br>├── <a href="mailto:&#x74;&#x65;&#114;&#109;&#105;&#x6e;&#97;&#108;&#45;&#112;&#108;&#x75;&#115;&#x40;&#x30;&#x2e;&#x31;&#52;&#46;&#x35;">&#x74;&#x65;&#114;&#109;&#105;&#x6e;&#97;&#108;&#45;&#112;&#108;&#x75;&#115;&#x40;&#x30;&#x2e;&#x31;&#52;&#46;&#x35;</a><br>└── <a href="mailto:&#118;&#x69;&#109;&#x2d;&#109;&#111;&#x64;&#x65;&#64;&#48;&#46;&#x36;&#53;&#x2e;&#49;">&#118;&#x69;&#109;&#x2d;&#109;&#111;&#x64;&#x65;&#64;&#48;&#46;&#x36;&#53;&#x2e;&#49;</a></p>
<p>└── (empty)</p>
<hr>
<h1 id="相關連結"><a href="#相關連結" class="headerlink" title="相關連結"></a>相關連結</h1><ul>
<li><a href="http://negaihoshi.logdown.com/posts/220517-atom-use-ideas-and-recommendations">Atom 使用心得與 Package 推薦 (2016/07/26 更新) « Negai no Sekai</a></li>
<li><a href="http://hungjie19.github.io/hexoblog/2016/05/23/Github-atom-IDE-Plugin-%E7%B0%A1%E4%BB%8B%E8%88%87%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/">Github atom IDE Plugin 簡介與使用心得 | Jacky’s Notes</a></li>
<li><a href="https://git.io/vXacR">Github 開源編輯器 Atom 常用插件及安裝方法 | AbsentM’s Notes</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Atom</tag>
        <tag>整理</tag>
      </tags>
  </entry>
  <entry>
    <title>目前電腦上所安裝的程式</title>
    <url>/2016/10/software-i-installed/</url>
    <content><![CDATA[<p><img src="/images/20161026software.jpg" alt="來源:http://www.unitech.com.au/?p=4323"></p>
<p>本文將記錄我安裝的電腦軟體</p>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#%E7%A2%8E%E7%A2%8E%E5%94%B8">碎碎唸</a><ul>
<li><a href="#%E5%85%88%E6%95%B4%E7%90%86%E4%B8%80%E4%BA%9B%E8%83%BD%E6%9F%A5%E7%9C%8B%E5%AE%89%E8%A3%9D%E8%BB%9F%E9%AB%94%E7%9A%84%E6%8C%87%E4%BB%A4">先整理一些能查看安裝軟體的指令</a></li>
<li><a href="#%E8%A8%98%E9%8C%84%E7%A5%9E%E5%A5%87%E7%9A%84%E6%8C%87%E4%BB%A4">記錄神奇的指令</a></li>
</ul>
</li>
<li><a href="#%E8%BB%9F%E9%AB%94%E5%85%B6%E4%BB%96">軟體：其他</a><ul>
<li><a href="#atom">Atom</a></li>
<li><a href="#chrome">Chrome</a></li>
</ul>
</li>
<li><a href="#%E6%99%82%E9%96%93%E5%BF%AB%E7%85%A7">時間快照</a><ul>
<li><a href="#20161026">2016.10.26</a></li>
</ul>
</li>
<li><a href="#%E5%8F%83%E8%80%83%E9%80%A3%E7%B5%90">參考連結</a></li>
</ul>
<!-- tocstop -->
<hr>
<h1 id="碎碎唸"><a href="#碎碎唸" class="headerlink" title="碎碎唸"></a>碎碎唸</h1><p>工欲善其事，必先利其器。這邊簡單的記錄一些指令</p>
<h2 id="先整理一些能查看安裝軟體的指令"><a href="#先整理一些能查看安裝軟體的指令" class="headerlink" title="先整理一些能查看安裝軟體的指令"></a>先整理一些能查看安裝軟體的指令</h2><p>要記錄安裝的軟體，用 cmd 來查看也是很合理的</p>
<ul>
<li>用 cmd 的話</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">WMIC</span><br><span class="line">product get name,version</span><br></pre></td></tr></table></figure>
<ul>
<li>用 PowerShell 的話</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Get-WmiObject -Class Win32_Product | Select-Object -Property Name</span><br></pre></td></tr></table></figure>

<h2 id="記錄神奇的指令"><a href="#記錄神奇的指令" class="headerlink" title="記錄神奇的指令"></a>記錄神奇的指令</h2><p>既然用了 cmd 記錄安裝的軟體，那用 cmd 來安裝軟體也是很合理的</p>
<ul>
<li>透過 cmd 安裝軟體</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看</span></span><br><span class="line">clist Name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝</span></span><br><span class="line">choco install Name</span><br></pre></td></tr></table></figure>

<ul>
<li>快速打開有管理員權限的 cmd or PowerShell<ul>
<li>方法一<ol>
<li>按一下 <code>Win</code> 鍵</li>
<li>鍵入想開啟程式的前幾個字</li>
<li>出現目標程式後，鍵入 <code>Ctrl + Shift + Enter</code></li>
</ol>
</li>
<li>方法二<ol>
<li><code>Win + X</code></li>
<li><code>A</code></li>
</ol>
</li>
</ul>
</li>
</ul>
<hr>
<h1 id="軟體：其他"><a href="#軟體：其他" class="headerlink" title="軟體：其他"></a>軟體：其他</h1><p>暫時還沒有想到好的分類方式，所以全部的軟體都是 others XD</p>
<h2 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h2><p>Coding 碼字的好夥伴。前端的生活工具。已新增</p>
<ul>
<li>Atom Package 篇</li>
</ul>
<h2 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h2><p>居家旅行，必備好軟件。之後會再新增</p>
<ul>
<li>附加元件篇</li>
<li>Stylish 與 TemporMonkey 篇</li>
</ul>
<hr>
<h1 id="時間快照"><a href="#時間快照" class="headerlink" title="時間快照"></a>時間快照</h1><h2 id="2016-10-26"><a href="#2016-10-26" class="headerlink" title="2016.10.26"></a>2016.10.26</h2><p>Name                                                                                                        Version<br>Windows Installer Clean Up                                                                                  3.00.00.0000<br>中華郵政 TRUSTATM Plugin                                                                                    1.1.39<br>PxMergeModule                                                                                               1.00.0000<br>Microsoft Application Error Reporting                                                                       12.0.6015.5000<br>Microsoft Office Professional Plus 2010                                                                     14.0.7015.1000<br>Microsoft Office OneNote MUI (Chinese (Traditional)) 2010                                                   14.0.7015.1000<br>Microsoft Office Office 32-bit Components 2010                                                              14.0.7015.1000<br>Microsoft Office Shared 32-bit MUI (Chinese (Traditional)) 2010                                             14.0.7015.1000<br>Microsoft Office InfoPath MUI (Chinese (Traditional)) 2010                                                  14.0.7015.1000<br>Microsoft Office Access MUI (Chinese (Traditional)) 2010                                                    14.0.7015.1000<br>Microsoft Office Excel MUI (Chinese (Traditional)) 2010                                                     14.0.7015.1000<br>Microsoft Office PowerPoint MUI (Chinese (Traditional)) 2010                                                14.0.7015.1000<br>Microsoft Office IME (Chinese (Traditional)) 2010                                                           14.0.7015.1000<br>Microsoft Office IME (Chinese (Traditional)) 2010                                                           14.0.7015.1000<br>Microsoft Office Publisher MUI (Chinese (Traditional)) 2010                                                 14.0.7015.1000<br>Microsoft Office Outlook MUI (Chinese (Traditional)) 2010                                                   14.0.7015.1000<br>Microsoft Office Groove MUI (Chinese (Traditional)) 2010                                                    14.0.7015.1000<br>Microsoft Office Word MUI (Chinese (Traditional)) 2010                                                      14.0.7015.1000<br>Microsoft Office Proofing (Chinese (Traditional)) 2010                                                      14.0.7015.1000<br>Microsoft Office Shared MUI (Chinese (Traditional)) 2010                                                    14.0.7015.1000<br>Microsoft Office Proof (Chinese (Traditional)) 2010                                                         14.0.7015.1000<br>Microsoft Office Proof (English) 2010                                                                       14.0.7015.1000<br>Microsoft Office 2010                                                                                       14.0.4763.1000<br>Microsoft DCF MUI (Chinese (Traditional)) 2016                                                              16.0.4266.1001<br>Microsoft Office Professional Plus 2016                                                                     16.0.4266.1001<br>Microsoft OneNote MUI (Chinese (Traditional)) 2016                                                          16.0.4266.1001<br>Microsoft Office 32-bit Components 2016                                                                     16.0.4266.1001<br>Microsoft Office Shared 32-bit MUI (Chinese (Traditional)) 2016                                             16.0.4266.1001<br>Microsoft Office OSM MUI (Chinese (Traditional)) 2016                                                       16.0.4266.1001<br>Microsoft Office OSM UX MUI (Chinese (Traditional)) 2016                                                    16.0.4266.1001<br>Microsoft InfoPath MUI (Chinese (Traditional)) 2016                                                         16.0.4266.1001<br>Microsoft Access MUI (Chinese (Traditional)) 2016                                                           16.0.4266.1001<br>Microsoft Excel MUI (Chinese (Traditional)) 2016                                                            16.0.4266.1001<br>Microsoft PowerPoint MUI (Chinese (Traditional)) 2016                                                       16.0.4266.1001<br>Microsoft Publisher MUI (Chinese (Traditional)) 2016                                                        16.0.4266.1001<br>Microsoft Outlook MUI (Chinese (Traditional)) 2016                                                          16.0.4266.1001<br>Microsoft Groove MUI (Chinese (Traditional)) 2016                                                           16.0.4266.1001<br>Microsoft Word MUI (Chinese (Traditional)) 2016                                                             16.0.4266.1001<br>Microsoft Skype for Business MUI (Chinese (Traditional)) 2016                                               16.0.4266.1001<br>Microsoft Office Proofing (Chinese (Traditional)) 2016                                                      16.0.4266.1001<br>Microsoft Office Shared MUI (Chinese (Traditional)) 2016                                                    16.0.4266.1001<br>Microsoft Office 校訂工具 2016 - 繁體中文                                                                   16.0.4266.1001<br>Microsoft Office Proofing Tools 2016 - English                                                              16.0.4266.1001<br>Raccolta foto di Windows Live                                                                               15.4.3502.0922<br>MSXML 4.0 SP3 Parser (KB2758694)                                                                            4.30.2117.0<br>Microsoft Visual C++ 2008 Redistributable - x64 9.0.30729.4148                                              9.0.30729.4148<br>Microsoft_VC90_CRT_x86                                                                                      1.00.0000<br>Microsoft Visual C++ 2008 Redistributable - x64 9.0.21022                                                   9.0.21022<br>Microsoft Visual C++ 2010  x64 Redistributable - 10.0.40219                                                 10.0.40219<br>Microsoft_VC80_CRT_x86_x64                                                                                  8.0.50727.4053<br>Microsoft Visual Studio 2010 Tools for Office Runtime (x64) Language Pack - CHT                             10.0.50903<br>Microsoft SQL Server 2005 Compact Edition [ENU]                                                             3.1.0000<br>Microsoft Visual C++ 2010  x86 Redistributable - 10.0.40219                                                 10.0.40219<br>Microsoft_VC80_MFC_x86                                                                                      8.0.50727.4053<br>Python 2.7.8                                                                                                2.7.8150<br>Microsoft Visual C++ 2013 x86 Minimum Runtime - 12.0.21005                                                  12.0.21005<br>Intel(R) Chipset Device Software                                                                            10.0.24<br>Microsoft Visual C++ 2013 x86 Additional Runtime - 12.0.21005                                               12.0.21005<br>Microsoft_VC80_MFCLOC_x86                                                                                   8.0.50727.4053<br>Broadcom Gigabit NetLink Controller                                                                         14.6.1.2<br>Chrome Remote Desktop Host                                                                                  52.0.2743.48<br>IBM SPSS Statistics 21                                                                                      21.0.0.0<br>PDF Settings CS5                                                                                            10.0<br>Device Simulation Framework 1.0.1                                                                           1.0.1<br>Windows Live Communications Platform                                                                        15.4.3502.0922<br>Acrobat.com                                                                                                 1.6.65<br>Microsoft Visual Studio 2010 Tools for Office Runtime (x64)                                                 10.0.50908<br>Microsoft_VC90_MFC_x86_x64                                                                                  1.00.0000<br>Java 8 Update 31                                                                                            8.0.310<br>Java 8 Update 25                                                                                            8.0.250<br>Java 7 Update 71 (64-bit)                                                                                   7.0.710<br>Java 8 Update 25 (64-bit)                                                                                   8.0.250<br>Java SE Development Kit 7 Update 71 (64-bit)                                                                1.7.0.710<br>Bluetooth Win7 Suite (64)                                                                                   7.2.0.56<br>Windows Live Argazki Galeria                                                                                15.4.3502.0922<br>Adobe Media Player                                                                                          1.8<br>Microsoft_VC80_MFC_x86_x64                                                                                  8.0.50727.4053<br>Backup Manager V3                                                                                           3.0.0.85<br>Microsoft .NET Framework 4.5.2                                                                              4.5.51209<br>NVIDIA PhysX                                                                                                9.10.0514<br>Microsoft Visual C++ 2008 Redistributable - x64 9.0.30729.6161                                              9.0.30729.6161<br>Adobe Acrobat XI Pro                                                                                        11.0.00<br>G*Power 3.1.9.2                                                                                             3.1.92<br>EndNote X7                                                                                                  17.1.0.7705<br>Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161                                              9.0.30729.6161<br>MSXML 4.0 SP2 (KB973688)                                                                                    4.20.9876.0<br>Oracle VM VirtualBox 4.3.12_ZZZZ                                                                            4.3.12<br>tools-winPre2k                                                                                              9.6.1.1379776<br>tools-netware                                                                                               9.6.1.1379776<br>ChocolateyGUI 0.13.2.0                                                                                      0.13.2.0<br>D3DX10                                                                                                      15.4.2368.0902<br>Microsoft Visual C++ 2012 x64 Additional Runtime - 11.0.61030                                               11.0.61030<br>Evernote Sticky Notes                                                                                       1.5.9<br>Paragon Backup and Recovery? 14 Home                                                                       90.00.0003<br>Microsoft_VC80_MFCLOC_x86_x64                                                                               80.50727.4053<br>Node.js                                                                                                     4.4.3<br>Vedio WebCam                                                                                                4.00.0000<br>Renesas Electronics USB 3.0 Host Controller Driver                                                          2.0.26.0<br>PetWings                                                                                                    1.2.0<br>Microsoft_VC80_ATL_x86                                                                                      8.0.50727.4053<br>EverCamPPT                                                                                                  1.0.0<br>Google Drive                                                                                                1.31.2873.2758<br>Microsoft_VC80_CRT_x86                                                                                      8.0.50727.4053<br>Google Update Helper                                                                                        1.3.25.11<br>7-Zip 9.20 (x64 edition)                                                                                    9.20.00.0<br>EAP-GTC-x64                                                                                                 2.04.0000<br>Google Update Helper                                                                                        1.3.31.5<br>tools-linux                                                                                                 9.6.1.1379776<br>Python 2.7 pygame-1.9.1                                                                                     1.9.1<br>VMware Workstation                                                                                          10.0.1<br>MSVCRT                                                                                                      15.4.2862.0708<br>Dolby Advanced Audio v2                                                                                     7.2.7000.4<br>Adobe Community Help                                                                                        3.0.0<br>Microsoft DVD App Installation for Microsoft.WindowsDVDPlayer_2019.6.13291.0_neutral_~_ 8wekyb3d8bbwe (x64)  1.0.0.0<br>Podstawowe programy Windows Live                                                                            15.4.3502.0922<br>E-Prime 2.0 (2.0.8.22)                                                                                      2.0.08022<br>Microsoft_VC90_MFC_x86                                                                                      1.00.0000<br>Microsoft_VC80_ATL_x86_x64                                                                                  8.0.50727.4053<br>tools-solaris                                                                                               9.6.1.1379776<br>Intel(R) Driver Update Utility 2.0                                                                          2.0.0.29<br>Microsoft Visual C++ 2005 Redistributable                                                                   8.0.61001<br>Broadcom Card Reader Driver Installer                                                                       14.6.1.2<br>tools-windows                                                                                               9.6.1.1379776<br>Microsoft Visual C++ 2012 x64 Minimum Runtime - 11.0.61030                                                  11.0.61030<br>Microsoft_VC90_ATL_x86_x64                                                                                  1.00.0000<br>Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.4148                                              9.0.30729.4148<br>Microsoft_VC90_CRT_x86_x64                                                                                  1.00.0000<br>Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.17                                                9.0.30729<br>Microsoft Silverlight                                                                                       5.1.50428.0<br>tools-freebsd                                                                                               9.6.1.1379776<br>MSXML 4.0 SP2 (KB954430)                                                                                    4.20.9870.0<br>Adobe AIR                                                                                                   16.0.0.245<br>Evernote v. 6.0.6                                                                                           6.0.6.1769<br>Microsoft_VC90_ATL_x86                                                                                      1.00.0000<br>Microsoft Visual C++ 2008 Redistributable - x64 9.0.30729.17                                                9.0.30729<br>Experiment Builder 1.10.165                                                                                 1.10.165<br>Windows Live                                                                                                15.4.3502.0922<br>Java Auto Updater                                                                                           2.8.31.13<br>Python 3.4.4 (64-bit)                                                                                       3.4.4150<br>Costco Photo Batch Uploading Tool                                                                           1.0.11</p>
<hr>
<h1 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h1><ul>
<li><a href="https://steachs.com/archives/3266">《電腦小技巧》如何將電腦中已安裝的軟體列出清單並儲存為文字檔 | 就是教不落 - 給你最豐富的 3C 資訊、教學網站</a></li>
<li><a href="http://jdev.tw/blog/2487/wmic-product">用 wmic 建立已安裝軟體清單 | 簡睿隨筆 | 學習過程的紀錄與備忘</a></li>
<li><a href="http://blog.darkthread.net/post-2013-12-29-chocolatey.aspx">你是我的巧克力 - Chocolatey - 黑暗執行緒</a></li>
<li><a href="http://blog.darkthread.net/post-2015-04-17-cmdexe-runas-admin-in-win8.aspx">使用管理者身分執行 cmd.exe - 黑暗執行緒</a></li>
</ul>
]]></content>
      <categories>
        <category>軟體</category>
      </categories>
      <tags>
        <tag>整理</tag>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>目前安裝的 TamperMonkey 腳本</title>
    <url>/2016/10/TamperMonkey-scripts-list/</url>
    <content><![CDATA[<p><img src="/images/20161030TamperMonkey.png" alt="來源:https://git.io/vX4D3"></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>自從對 JavaScript 稍微有了解後，就斷斷續續的在學習語法。某日碰見 TamperMonkey 這個套件，就瞬間一見傾心了 XD 以下記錄有在使用的 js 腳本</p>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#%E5%89%8D%E8%A8%80">前言</a></li>
<li><a href="#%E8%85%B3%E6%9C%AC%E6%95%B4%E7%90%86">腳本整理</a><ul>
<li><a href="#anti-adblock-killer%E6%93%8B%E5%81%B5%E6%B8%AC%E5%BB%A3%E5%91%8A">Anti-Adblock Killer｜擋偵測廣告</a></li>
<li><a href="#facebook-hd-video-downloader%E4%B8%8B%E8%BC%89%E8%87%89%E6%9B%B8%E5%BD%B1%E7%89%87">Facebook HD Video Downloader｜下載臉書影片</a></li>
<li><a href="#highlight-every-code%E9%AB%98%E4%BA%AE%E7%B6%B2%E9%A0%81%E4%B8%8A%E9%81%B8%E5%8F%96%E7%9A%84%E4%BB%A3%E7%A2%BC">Highlight Every Code｜高亮網頁上選取的代碼</a></li>
<li><a href="#switch-traditional-chinese-and-simple%E7%B0%A1%E7%B9%81%E4%BA%92%E6%8F%9B">Switch Traditional Chinese and Simple｜簡繁互換</a></li>
<li><a href="#youtube-%E9%AD%94%E6%94%B9youtube">Youtube +｜魔改youtube</a></li>
<li><a href="#youtube-best-video-downloader-2%E4%B8%8B%E8%BC%89youtube">Youtube Best Video Downloader 2｜下載Youtube</a></li>
<li><a href="#%E7%82%BA%E4%BB%80%E9%BA%BC%E4%BD%A0%E5%80%91%E5%B0%B1%E6%98%AF%E4%B8%8D%E8%83%BD%E5%8A%A0%E5%80%8B%E7%A9%BA%E6%A0%BC%E5%91%A2%E4%B8%AD%E8%8B%B1%E4%B9%8B%E9%96%93%E5%8A%A0%E7%A9%BA%E6%A0%BC">為什麼你們就是不能加個空格呢？｜中英之間加空格</a></li>
</ul>
</li>
<li><a href="#%E8%87%AA%E5%B7%B1%E5%AF%AB%E7%9A%84%E8%85%B3%E6%9C%AC">自己寫的腳本</a><ul>
<li><a href="#fb%E5%88%86%E4%BA%AB%E5%BC%95%E6%96%87">FB分享引文</a><ul>
<li><a href="#fb%E5%88%86%E4%BA%AB%E5%BC%95%E6%96%87-fb-quote">FB分享引文 fb-quote</a></li>
<li><a href="#fb%E5%88%86%E4%BA%AB%E5%BC%95%E6%96%87-fb-root">FB分享引文 fb-root</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%E5%8F%83%E8%80%83%E9%80%A3%E7%B5%90">參考連結</a></li>
</ul>
<!-- tocstop -->

<hr>
<h1 id="腳本整理"><a href="#腳本整理" class="headerlink" title="腳本整理"></a>腳本整理</h1><p>因為腳本沒有很多，所以就不分類介紹惹</p>
<h2 id="Anti-Adblock-Killer｜擋偵測廣告"><a href="#Anti-Adblock-Killer｜擋偵測廣告" class="headerlink" title="Anti-Adblock Killer｜擋偵測廣告"></a>Anti-Adblock Killer｜擋偵測廣告</h2><ul>
<li>連結：<a href="https://github.com/reek/anti-adblock-killer/">reek/anti-adblock-killer: Anti-Adblock Killer helps you keep your Ad-Blocker active, when you visit a website and it asks you to disable.</a></li>
</ul>
<p>至今還不知道該怎麼使用它 …（原本用途是，繞開那些能偵測到 安裝者有裝擋廣告套件的機制），可能再過一陣子就把它刪了</p>
<h2 id="Facebook-HD-Video-Downloader｜下載臉書影片"><a href="#Facebook-HD-Video-Downloader｜下載臉書影片" class="headerlink" title="Facebook HD Video Downloader｜下載臉書影片"></a>Facebook HD Video Downloader｜下載臉書影片</h2><ul>
<li>連結：<a href="https://greasyfork.org/zh-TW/scripts/3481-facebook-hd-video-downloader">Facebook HD Video Downloader</a></li>
</ul>
<p>可以下載 Facebook 上的影片。雖然平常用不到，但還是下載起來備份用。</p>
<h2 id="Highlight-Every-Code｜高亮網頁上選取的代碼"><a href="#Highlight-Every-Code｜高亮網頁上選取的代碼" class="headerlink" title="Highlight Every Code｜高亮網頁上選取的代碼"></a>Highlight Every Code｜高亮網頁上選取的代碼</h2><ul>
<li>連結：<a href="https://greasyfork.org/zh-TW/scripts/24150-highlight-every-code">代碼片斷高亮</a></li>
</ul>
<p>這腳本超厲害的，按 <code>ctrl + 反白</code>，就能排列、高亮被圈選到的程式碼，省去一些整理程式碼時間。</p>
<h2 id="Switch-Traditional-Chinese-and-Simple｜簡繁互換"><a href="#Switch-Traditional-Chinese-and-Simple｜簡繁互換" class="headerlink" title="Switch Traditional Chinese and Simple｜簡繁互換"></a>Switch Traditional Chinese and Simple｜簡繁互換</h2><ul>
<li>連結：<a href="https://greasyfork.org/zh-TW/scripts/24300-switch-traditional-chinese-and-simplified-chinese">繁簡自由切換</a></li>
</ul>
<p>按 <code>F8</code> 能切換簡轉繁或繁轉簡。預設會自動轉繁體</p>
<h2 id="Youtube-｜魔改youtube"><a href="#Youtube-｜魔改youtube" class="headerlink" title="Youtube +｜魔改youtube"></a>Youtube +｜魔改youtube</h2><ul>
<li>連結：<a href="https://greasyfork.org/zh-TW/scripts/9932-youtube">YouTube +</a></li>
</ul>
<p>這腳本也猛猛的，把 Youtube 改造成我快不認識了 XD</p>
<ul>
<li>Play your videos in a pop-out window</li>
<li>Turn off 60fps</li>
<li>Navigate through videos frame by frame (No longer necessary, YouTube already has it)</li>
<li>Allow ads only in videos from your subscribed channels</li>
<li>Blacklist entire channels from your suggestions and search results</li>
<li>Make the player fill the entire browser with the Fullbrowser mode feature</li>
<li>Player always visible where you want while reading the comments</li>
<li>Play your most recent subscriptions in a playlist</li>
<li>Reverse any playlist</li>
<li>Control any playlist autoplay</li>
<li>Take video screenshots and save them</li>
<li>View and save the video thumbnail like old times</li>
<li>Bring back the total number of videos uploaded by the creator</li>
<li>Use the relative video post time to know quickly how old the video is</li>
<li>and many more!</li>
</ul>
<h2 id="Youtube-Best-Video-Downloader-2｜下載Youtube"><a href="#Youtube-Best-Video-Downloader-2｜下載Youtube" class="headerlink" title="Youtube Best Video Downloader 2｜下載Youtube"></a>Youtube Best Video Downloader 2｜下載Youtube</h2><ul>
<li>連結：<a href="https://greasyfork.org/zh-TW/scripts/19592-youtube-best-video-downloader-2">Youtube Best Video Downloader 2</a></li>
</ul>
<p>顧名思義，這是可以下載 Youtube 影片的腳本</p>
<h2 id="為什麼你們就是不能加個空格呢？｜中英之間加空格"><a href="#為什麼你們就是不能加個空格呢？｜中英之間加空格" class="headerlink" title="為什麼你們就是不能加個空格呢？｜中英之間加空格"></a>為什麼你們就是不能加個空格呢？｜中英之間加空格</h2><ul>
<li>連結：<a href="https://greasyfork.org/zh-TW/scripts/2185-%E7%82%BA%E4%BB%80%E9%BA%BC%E4%BD%A0%E5%80%91%E5%B0%B1%E6%98%AF%E4%B8%8D%E8%83%BD%E5%8A%A0%E5%80%8B%E7%A9%BA%E6%A0%BC%E5%91%A2#">為什麼你們就是不能加個空格呢？</a></li>
</ul>
<p>這腳本也很厲害啊 ~ 能在中文和英文之間插入空白，提供文章的可讀性。之前裝過 Chrome 套件的版本，看到有腳本版的就開心的把之前的套件給移除了</p>
<hr>
<h1 id="自己寫的腳本"><a href="#自己寫的腳本" class="headerlink" title="自己寫的腳本"></a>自己寫的腳本</h1><p>還不穩定 orz</p>
<h2 id="FB分享引文"><a href="#FB分享引文" class="headerlink" title="FB分享引文"></a>FB分享引文</h2><p>2016年04月左右，臉書出了一個功能：分享引文。只要在有開啟此功能的網頁中反白選取文字，就會跳出「分享到臉書」的按鈕。點擊按鈕，跳出來的分享視窗就會多引用了剛剛反白選取的文字。</p>
<p>因為我很想讓自己分享的文章都能引用上面的文字，但又不是每個網頁都有此功能，我就自己想辦法自己土砲一下 js 語法。此功能的介紹可參考這裡</p>
<ul>
<li><a href="https://free.com.tw/facebook-quote-plugin/">Facebook Quote Plugin 臉書選取文字後自動跳出「分享引文」外掛功能設定教學</a></li>
</ul>
<p>簡單的說，就是在想開啟分享引文功能的網頁上，放上以下程式碼</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 程式碼一</span></span><br><span class="line">&lt;div id=<span class="string">&quot;fb-root&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;(<span class="function"><span class="keyword">function</span>(<span class="params">d, s, id</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> js, fjs = d.getElementsByTagName(s)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> (d.getElementById(id)) <span class="keyword">return</span>;</span><br><span class="line">js = d.createElement(s); js.id = id;</span><br><span class="line">js.src = <span class="string">&quot;//connect.facebook.net/zh_TW/sdk.js#xfbml=1&amp;version=v2.6&quot;</span>;</span><br><span class="line">fjs.parentNode.insertBefore(js, fjs);</span><br><span class="line">&#125;(<span class="built_in">document</span>, <span class="string">&#x27;script&#x27;</span>, <span class="string">&#x27;facebook-jssdk&#x27;</span>));&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>以及</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 程式碼二</span></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fb-quote&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>參考這兩段 Facebook SDK 程式馬後，以下是我修改的能放到 TamperMonkey 的兩段語法。因為能力不足的關係，這兩個語法要拆開來使用比較適合，詳情在後文說明。</p>
<h3 id="FB分享引文-fb-quote"><a href="#FB分享引文-fb-quote" class="headerlink" title="FB分享引文 fb-quote"></a>FB分享引文 fb-quote</h3><p>在有些網頁中，如果它已經安裝臉書的按讚分享工具的話，那可能也已經安裝 <code>程式碼一</code> 的片段了。如此，只要再添加 <code>程式碼二</code> 就好。<code>程式碼二</code> 的目的是在 html 中加入 <code>&lt;div class=&quot;fb-quote&quot;&gt;&lt;/div&gt;</code> 這個帶有 <code>fb-quote</code> class 的 div。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 程式碼三</span></span><br><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         FB分享引文 fb-quote</span></span><br><span class="line"><span class="comment">// @namespace    https://ayugioh2003.github.io/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @include      *</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// @homepage     https://ayugioh2003.github.io/</span></span><br><span class="line"><span class="comment">// @author       ChiuCW</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"><span class="comment">// https://free.com.tw/facebook-quote-plugin/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newHTML = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="comment">// newHTML.innerHTML=&#x27;&lt;div class=&quot;fb-quote&quot;&gt;second&lt;/div&gt;&#x27;;</span></span><br><span class="line">newHTML.setAttribute(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;fb-quote&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(newHTML);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="FB分享引文-fb-root"><a href="#FB分享引文-fb-root" class="headerlink" title="FB分享引文 fb-root"></a>FB分享引文 fb-root</h3><p>如果想分享引文的網頁沒有安裝 Facebook SDK 的話，就要載入 SDK 才行。添加以下腳本就能夠有分享引文的功能。但要注意的是，載入此腳本後，網頁會一直在 loading … 速度會變慢。但如果在網頁載入後馬上關掉此腳本的話，仍然能有分享引文的功能。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 程式碼四</span></span><br><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         FB分享引文 fb-root</span></span><br><span class="line"><span class="comment">// @namespace    https://ayugioh2003.github.io/</span></span><br><span class="line"><span class="comment">// @version      0.1</span></span><br><span class="line"><span class="comment">// @description  try to take over the world!</span></span><br><span class="line"><span class="comment">// @include      *</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// @homepage     https://ayugioh2003.github.io/</span></span><br><span class="line"><span class="comment">// @author       ChiwCW</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"><span class="comment">// https://free.com.tw/facebook-quote-plugin/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newHTML2 = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="comment">// newHTML2.innerHTML=&#x27;&lt;div class=&quot;fb-quote&quot;&gt;second&lt;/div&gt;&#x27;;</span></span><br><span class="line">newHTML2.setAttribute(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;fb-root&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(newHTML2);</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">d, s, id</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> js, fjs = d.getElementsByTagName(s)[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span> (d.getElementById(id)) <span class="keyword">return</span>;</span><br><span class="line">  js = d.createElement(s);</span><br><span class="line">  js.id = id;</span><br><span class="line">  js.src = <span class="string">&quot;//connect.facebook.net/zh_TW/sdk.js#xfbml=1&amp;version=v2.6&quot;</span>;</span><br><span class="line">  fjs.parentNode.insertBefore(js, fjs);</span><br><span class="line">&#125;(<span class="built_in">document</span>, <span class="string">&#x27;script&#x27;</span>, <span class="string">&#x27;facebook-jssdk&#x27;</span>));</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h1><ul>
<li>暫無</li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>整理</tag>
        <tag>TamperMonkey</tag>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>學習JavaScript的線上資源</title>
    <url>/2016/10/learn-javascript-online-resources/</url>
    <content><![CDATA[<p><img src="/images/20161031javascript.png" alt="來源:https://goo.gl/Rwhvq6"></p>
<p>想收集線上看得到的 js 教學，方便日後自學</p>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#%E6%96%87%E6%9C%AC%E5%BD%A2%E5%BC%8F">文本形式</a></li>
<li><a href="#%E7%B7%9A%E4%B8%8A%E8%AA%B2%E7%A8%8B">線上課程</a></li>
<li><a href="#%E5%85%B6%E4%BB%96">其他</a></li>
</ul>
<!-- tocstop -->

<hr>
<h1 id="文本形式"><a href="#文本形式" class="headerlink" title="文本形式"></a>文本形式</h1><p>目前會先以陳鍾誠的文件為學習主軸，w3school 則當參考資料。而阮一峰寫的很細，等對 js 了解的比較全面時再回過頭看他寫的東西 ……</p>
<ul>
<li><a href="https://ccckmit.gitbooks.io/javascript/content/">專為中學生寫的 JavaScript 程式書 - 陳鍾誠</a></li>
<li><a href="http://www.w3school.com.cn/js/index.asp">JavaScript 教程 - w3school</a></li>
<li><a href="http://javascript.ruanyifeng.com/#toc0">JavaScript 標準參考教程 - 阮一峰</a></li>
</ul>
<h1 id="線上課程"><a href="#線上課程" class="headerlink" title="線上課程"></a>線上課程</h1><p>先在慕課網學習 js，因為有分成新手、中階、高手三個層級可以學習。Node.js 的課程加減看看</p>
<ul>
<li><a href="http://www.imooc.com/learn/36">JavaScript入门篇-JavaScript入门视频教程-慕课网</a><ul>
<li>我的目前進度</li>
<li><a href="http://www.imooc.com/code/469">通過 ID 獲取元素 - 慕課網</a></li>
</ul>
</li>
<li><a href="http://www.imooc.com/learn/348">进击Node.js基础(一)-慕课网</a><ul>
<li>目前進度</li>
<li><a href="http://www.imooc.com/video/6695">Node.js 基礎 - 命令行中體驗 - 慕課網</a></li>
</ul>
</li>
</ul>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul>
<li><a href="http://es6.ruanyifeng.com/#docs/let">let 和 const 命令 - ECMAScript 6 入門</a></li>
<li><a href="https://github.com/ruanyf/jstraining">ruanyf/jstraining: 全棧工程師培訓材料</a></li>
<li><a href="https://cnodejs.org/getstart">Node.js 新手入門 - CNode 技術社區</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>整理</tag>
        <tag>學習中</tag>
      </tags>
  </entry>
  <entry>
    <title>三十天學 Python</title>
    <url>/2016/11/Python-30-days/</url>
    <content><![CDATA[<!-- thumbnail: /images/index.JPG -->

<p><img src="/images/20161107-python.jpg"></p>
<p>在 Python 臉書看到一篇免費的 30 天教學課程，立刻就去註冊了 ~ 因此先在這裡開一篇，如果之後有繼續學習的話，就在這邊更新</p>
<ul>
<li><a href="https://softnshare.wordpress.com/2016/11/07/thirddays/">30 天的 Python 課程釋放你的 Python 潛力 | Soft &amp; Share</a></li>
</ul>
<span id="more"></span>

<hr>
<!-- toc -->

<ul>
<li><a href="#%E8%AA%B2%E7%A8%8B%E8%B3%87%E6%BA%90">課程資源</a></li>
<li><a href="#%E6%BA%96%E5%82%99%E8%A6%81%E7%9C%8B-day-3-loop">準備要看 Day 3: loop</a></li>
<li><a href="#day-2-list-dictionaries-tuples-1107">Day 2: List, Dictionaries &amp; Tuples 1107</a><ul>
<li><a href="#list">List</a></li>
<li><a href="#dictionaries">Dictionaries</a></li>
<li><a href="#tuples">Tuples</a></li>
</ul>
</li>
<li><a href="#day-1-python-basics-strings-1107">Day 1: Python Basics Strings 1107</a><ul>
<li><a href="#set-up-python">Set up python</a></li>
<li><a href="#strings">Strings</a></li>
<li><a href="#variable">Variable</a></li>
<li><a href="#number">Number</a></li>
</ul>
</li>
<li><a href="#%E8%AA%B2%E7%A8%8B%E8%AA%AA%E6%98%8E">課程說明</a></li>
</ul>
<!-- tocstop -->

<hr>
<h1 id="課程資源"><a href="#課程資源" class="headerlink" title="課程資源"></a>課程資源</h1><p>主要資源</p>
<ul>
<li>課程頁面: <a href="https://www.codingforentrepreneurs.com/projects/30-days-python/">30 Days of Python - Coding for Entrepreneurs</a></li>
<li>全部 code: <a href="https://github.com/codingforentrepreneurs/30-Days-of-Python">codingforentrepreneurs/30-Days-of-Python: For the next 30 days, learn the Python Programming language.</a></li>
<li>影片區: <a href="https://www.youtube.com/codingentrepreneurs">CodingEntrepreneurs - YouTube</a></li>
</ul>
<p>QA</p>
<ul>
<li>QA論壇: <a href="http://stackoverflow.com/">Stack Overflow</a></li>
<li>提問區: <a href="https://www.youtube.com/watch?v=LtZEEv3SziA">Get Your Questions Answered - YouTube</a></li>
<li>臉書台灣社群: <a href="https://www.facebook.com/groups/pythontw/">Python Taiwan</a></li>
</ul>
<p>清除視窗</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># on windows</span></span><br><span class="line"><span class="keyword">import</span> os;</span><br><span class="line">os.system(<span class="string">&quot;cls&quot;</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="http://stackoverflow.com/questions/1432480/any-way-to-clear-pythons-idle-window">Any way to clear python’s IDLE window? - Stack Overflow</a></li>
<li><a href="http://stackoverflow.com/questions/4810537/how-to-clear-the-screen-in-python">how to clear the screen in python - Stack Overflow</a></li>
</ul>
<hr>
<h1 id="準備要看-Day-3-loop"><a href="#準備要看-Day-3-loop" class="headerlink" title="準備要看 Day 3: loop"></a>準備要看 Day 3: loop</h1><ul>
<li><a href="https://www.udemy.com/30-days-of-python/learn/v4/t/lecture/5872370">30 Days of Python | Unlock your Python Potential | Udemy</a></li>
</ul>
<hr>
<h1 id="Day-2-List-Dictionaries-amp-Tuples-1107"><a href="#Day-2-List-Dictionaries-amp-Tuples-1107" class="headerlink" title="Day 2: List, Dictionaries &amp; Tuples 1107"></a>Day 2: List, Dictionaries &amp; Tuples 1107</h1><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p>一種資料型態，也是一種儲存資料的結構。用 <code>ListName[i]</code> 的方式可以存取位置在 <code>i</code> 的資料。<code>ListName.pop(i)</code> 可以擠出位置在 <code>i</code> 的資料（預設參數是最後一個）、而　<code>ListName.append(&quot;data content&quot;)</code> 可以將資料塞到最後一個位置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 在 list 新增一個資料</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_var = [<span class="string">&quot;some string&quot;</span>, <span class="number">123</span>, <span class="string">&quot;another string&quot;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_var.append(<span class="string">&quot;some otehr item&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_var</span><br><span class="line">[<span class="string">&#x27;some string&#x27;</span>, <span class="number">123</span>, <span class="string">&#x27;another string&#x27;</span>, <span class="string">&#x27;some otehr item&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 讓 list 最後一個資料跳出</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_var.pop()</span><br><span class="line"><span class="string">&#x27;some otehr item&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_var</span><br><span class="line">[<span class="string">&#x27;some string&#x27;</span>, <span class="number">123</span>, <span class="string">&#x27;another string&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 看長度(不曉得為什麼突然要看)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(list_var)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(<span class="string">&quot;an string&quot;</span>)</span><br><span class="line"><span class="number">9</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 抓取 list 某資料的方法</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_var[<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;some string&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_var[<span class="number">1</span>]</span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_var[<span class="number">2</span>]</span><br><span class="line"><span class="string">&#x27;another string&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新講一次 list 中位置的概念</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abc = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abc[<span class="number">0</span>]</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abc[<span class="number">1</span>]</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abc[<span class="number">2</span>]</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以抓取 list 中的某資料，並宣告為 var 的內容</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>another_list = [<span class="string">&quot;Justin&quot;</span>, <span class="string">&quot;John&quot;</span>, <span class="string">&quot;Matt&quot;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>another_list</span><br><span class="line">[<span class="string">&#x27;Justin&#x27;</span>, <span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Matt&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>matt_name = anotehr_list[<span class="number">2</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;anotehr_list&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>matt_name = another_list[<span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>matt_name</span><br><span class="line"><span class="string">&#x27;Matt&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用 pop 來理解 list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list.pop(<span class="number">0</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list.pop(<span class="number">0</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list.pop(<span class="number">0</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list.pop(<span class="number">0</span>) <span class="comment"># 沒資料了，所以 error</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: pop <span class="keyword">from</span> empty <span class="built_in">list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list.pop(<span class="number">2</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list.pop(<span class="number">2</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: pop index out of <span class="built_in">range</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list[<span class="number">1000</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: <span class="built_in">list</span> index out of <span class="built_in">range</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(the_list)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Dictionaries"><a href="#Dictionaries" class="headerlink" title="Dictionaries"></a>Dictionaries</h2><p>也是一種資料結構。由 <code>DictName = &#123; &quot;key&quot;: &quot;value&quot;&#125;</code> 所組成。使用 <code>DictName[&quot;key&quot;]</code> 可以取用該 key 的 value。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 建立 dict</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a_dict = &#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;</span><br><span class="line"><span class="meta">... </span> <span class="string">&quot;abc&quot;</span>:<span class="string">&quot;A string&quot;</span></span><br><span class="line"><span class="meta">... </span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;A string&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 dict</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;</span><br><span class="line"><span class="meta">... </span>  <span class="string">&quot;abc&quot;</span>:<span class="string">&quot;A string&quot;</span>,</span><br><span class="line"><span class="meta">... </span>  <span class="string">&quot;anothter&quot;</span>: <span class="string">&quot;another string&quot;</span>,</span><br><span class="line"><span class="meta">... </span>  <span class="string">&quot;yetanother&quot;</span>: <span class="string">&quot;anotehr string&quot;</span></span><br><span class="line"><span class="meta">... </span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;anothter&#x27;</span>: <span class="string">&#x27;another string&#x27;</span>, <span class="string">&#x27;yetanother&#x27;</span>: <span class="string">&#x27;anotehr string&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;A string&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 為某個 key 設定 value</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a_dict[<span class="string">&quot;abc&quot;</span>] = <span class="string">&quot;another&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a_dict</span><br><span class="line">&#123;<span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;another&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新的 dict 例子</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc = &#123;<span class="string">&#x27;anothter&#x27;</span>: <span class="string">&#x27;another string&#x27;</span>, <span class="string">&#x27;yetanother&#x27;</span>: <span class="string">&#x27;anotehr string&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;A string&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc</span><br><span class="line">&#123;<span class="string">&#x27;anothter&#x27;</span>: <span class="string">&#x27;another string&#x27;</span>, <span class="string">&#x27;yetanother&#x27;</span>: <span class="string">&#x27;anotehr string&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;A string&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc[<span class="string">&quot;abc&quot;</span>]</span><br><span class="line"><span class="string">&#x27;A string&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># list 和 dict 的差異: dict 是用 key 在儲存資料，但數字也能當 key</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list[<span class="number">1</span>]</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc[<span class="number">0</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">KeyError: <span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc[<span class="number">0</span>] = <span class="string">&quot;anotehr new item in the dict&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc[<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;anotehr new item in the dict&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc</span><br><span class="line">&#123;<span class="number">0</span>: <span class="string">&#x27;anotehr new item in the dict&#x27;</span>, <span class="string">&#x27;anothter&#x27;</span>: <span class="string">&#x27;another string&#x27;</span>, <span class="string">&#x27;yetanother&#x27;</span>: <span class="string">&#x27;anotehr string&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;A string&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># dict 可以存放 list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc[<span class="string">&#x27;list&#x27;</span>] = the_list</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc</span><br><span class="line">&#123;<span class="number">0</span>: <span class="string">&#x27;anotehr new item in the dict&#x27;</span>, <span class="string">&#x27;anothter&#x27;</span>: <span class="string">&#x27;another string&#x27;</span>, <span class="string">&#x27;list&#x27;</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="string">&#x27;yetanother&#x27;</span>: <span class="string">&#x27;anotehr string&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;A string&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># dict 放 dict 會怪怪的</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc[<span class="string">&#x27;abc2&#x27;</span>] = new_abc</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc</span><br><span class="line">&#123;<span class="number">0</span>: <span class="string">&#x27;anotehr new item in the dict&#x27;</span>, <span class="string">&#x27;list&#x27;</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="string">&#x27;yetanother&#x27;</span>: <span class="string">&#x27;anotehr string&#x27;</span>, <span class="string">&#x27;abc2&#x27;</span>: &#123;...&#125;, <span class="string">&#x27;anothter&#x27;</span>: <span class="string">&#x27;another string&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;A string&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_abc[<span class="string">&quot;abc2&quot;</span>]</span><br><span class="line">&#123;<span class="number">0</span>: <span class="string">&#x27;anotehr new item in the dict&#x27;</span>, <span class="string">&#x27;list&#x27;</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="string">&#x27;yetanother&#x27;</span>: <span class="string">&#x27;anotehr string&#x27;</span>, <span class="string">&#x27;abc2&#x27;</span>: &#123;...&#125;, <span class="string">&#x27;anothter&#x27;</span>: <span class="string">&#x27;another string&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>: <span class="string">&#x27;A string&#x27;</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Tuples"><a href="#Tuples" class="headerlink" title="Tuples"></a>Tuples</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 宣告一個 tuples</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup = ()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup = (<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;abc&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup</span><br><span class="line">(<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新宣告一次</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup = (</span><br><span class="line"><span class="meta">... </span>(<span class="string">&quot;another&quot;</span>, <span class="string">&quot;another&quot;</span>),</span><br><span class="line"><span class="meta">... </span>(<span class="string">&quot;more&quot;</span>, <span class="string">&quot;more&quot;</span>),</span><br><span class="line"><span class="meta">... </span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup</span><br><span class="line">((<span class="string">&#x27;another&#x27;</span>, <span class="string">&#x27;another&#x27;</span>), (<span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;more&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup[<span class="number">0</span>]</span><br><span class="line">(<span class="string">&#x27;another&#x27;</span>, <span class="string">&#x27;another&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;another&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加內容</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup += (<span class="string">&quot;yetAnother&quot;</span>, <span class="number">123</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup</span><br><span class="line">((<span class="string">&#x27;another&#x27;</span>, <span class="string">&#x27;another&#x27;</span>), (<span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;more&#x27;</span>), <span class="string">&#x27;yetAnother&#x27;</span>, <span class="number">123</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup += ((<span class="string">&quot;yetAnother&quot;</span>, <span class="number">123</span>),)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tup</span><br><span class="line">((<span class="string">&#x27;another&#x27;</span>, <span class="string">&#x27;another&#x27;</span>), (<span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;more&#x27;</span>), <span class="string">&#x27;yetAnother&#x27;</span>, <span class="number">123</span>, (<span class="string">&#x27;yetAnother&#x27;</span>, <span class="number">123</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># list 的類似作法（我覺得滿像 array 的</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abc = [<span class="string">&quot;another&quot;</span>, <span class="string">&quot;another&quot;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list.append(abc)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_list</span><br><span class="line">[[<span class="string">&#x27;another&#x27;</span>, <span class="string">&#x27;another&#x27;</span>]]</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="Day-1-Python-Basics-Strings-1107"><a href="#Day-1-Python-Basics-Strings-1107" class="headerlink" title="Day 1: Python Basics Strings 1107"></a>Day 1: Python Basics Strings 1107</h1><h2 id="Set-up-python"><a href="#Set-up-python" class="headerlink" title="Set up python"></a>Set up python</h2><ul>
<li><a href="http://joincfe.com/projects/#setup">安裝環境連結</a></li>
<li><a href="http://joincfe.com/knock">有問題去這裡問</a></li>
<li><a href="http://www.python.org/">python官網</a></li>
</ul>
<p>版本2版本3都可以</p>
<h2 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h2><p>在 console 中，使用 <code>&quot;&quot;</code> 包住字，就能夠被辨識成 String。使用 ‘+’ 可以連接 String</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;Some&#x27;</span> + <span class="string">&#x27;string&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="Variable"><a href="#Variable" class="headerlink" title="Variable"></a>Variable</h2><p>變量要先 declare 才能被使用。例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">abc = <span class="string">&quot;some string&quot;</span></span><br><span class="line">abc</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>`some string`</span><br></pre></td></tr></table></figure>

<h2 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 就是個數字</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 數字在字串中，就是字串</span></span><br><span class="line"><span class="string">&quot;123 is awesome&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;123 is awesome&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 數字能加減乘除</span></span><br><span class="line"><span class="number">2</span> * <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字串也可以加減乘除</span></span><br><span class="line"><span class="string">&quot;abc&quot;</span> * <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;abcabc&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="課程說明"><a href="#課程說明" class="headerlink" title="課程說明"></a>課程說明</h1><p>在 2016 年初，Python 超越 Java 成為世界上第一名初學者程式設計語言。為什麼? 這是因為它足夠簡單，適合那些還沒足夠進階成為專業人員的初學者。</p>
<ul>
<li><p>SpaceX 使用它來發射火箭</p>
</li>
<li><p>Pixar 使用 Python 來運行他們的動畫軟體</p>
</li>
<li><p>Instagram 和 Pinterest 使用它來運行他們的 Web 應用程式（後端採用 Django）</p>
</li>
</ul>
<p>來和我一起學習，我會告訴你如何使 Python 變成你的意志。本課程適合任何年齡與任何等級電腦知識的初學者來學習 Python。目標很簡單：通過逐步構建實際的專案來學習 Python，同時解釋每個概念。在接下來的 30 天，你將學習如何：</p>
<ul>
<li>任何網站（包括啟用 JavaScript 的網站）抓取資料</li>
<li>為所有類型的自動化構建你自己的 Python 應用程式</li>
<li>發送電子郵件和簡訊 (SMS) 給你的朋友或是你的客戶</li>
<li>讀取和寫入 CSV 格式檔案 - 使用逗號分隔資料的格式，將你的資料以 CSV 格式儲存在本地端檔案並且可以使用熱門試算表軟體讀取，如 Microsoft Excel 和 Apple Numbers</li>
<li>了解 Python 程式設計語言的基礎知識，以便準備好構建更進階的專案，例如 Web 應用程式</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>整理</tag>
        <tag>學習中</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>鍵盤世大運的作弊js語法</title>
    <url>/2017/09/keyboard-Universiade/</url>
    <content><![CDATA[<p>既然開發團隊都在 console 裡面放彩蛋了，那用 console 來玩遊戲也是很理所當然的吧(?)</p>
<p>總之呢，這段語法的概念就是，每隔 100 毫秒，就會點擊按鈕一次。當然，把間隔秒數調整成更小，加速度到滿速的時間就更短了 … 嘿嘿</p>
<p>本來想找看看有沒有其他的作弊方式，但我才粗學淺，不知道該怎麼找 orz</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 世大運網頁遊戲腳本 by Wheat&#x27;s FBlog</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">KPNO1</span>(<span class="params"> </span>)</span>&#123;　</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;run-button&quot;</span>).click();</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="string">&quot;KPNO1( )&quot;</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">KPNO1()</span><br></pre></td></tr></table></figure>

<p>順便放在我的 gitbook 記錄裡面</p>
<ul>
<li><a href="https://ayugioh2003.gitbooks.io/front2end/content/shi-da-yun-wang-ye-you-xi-wai-gua.html">世大運網頁遊戲腳本 · Front2End</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>git push to github without password</title>
    <url>/2017/09/git-push-to-github-without-password/</url>
    <content><![CDATA[<!-- thumbnail: /images/index.JPG -->

<p>用 git 這段時間，有一件事情納悶了很久，就是為什麼 git push 的時候會需要輸入密碼呢？結果這件事情在剛剛 google 後終於搞清楚了</p>
<ul>
<li>原因: 可能之前都用到 https 的方式 clone 資料</li>
<li>解法: git clone 時採用 ssh 方式，或是重新刪掉遠程 o，然後再新增 ssh 的 o </li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git remote rm origin  </span><br><span class="line">git remote add origin git@github.com:itmyhome2013/blog.git  </span><br></pre></td></tr></table></figure>

<hr>
<p>之後想把 hexo 編譯過的檔案 <code>hexo deploy</code> 到 gh-page 上，結果失敗。後來把 yaml 中 deploy 的位置從 https 改成 ssh 就好了。我還是不懂為什麼 QQ</p>
<p>參考資料</p>
<ul>
<li><a href="http://blog.csdn.net/itmyhome1990/article/details/42557817">让git push命令不再每次都输入密码 - itmyhome的专栏 - CSDN博客</a></li>
<li><a href="https://github.com/hexojs/hexo/issues/2406">hexo d 失败： bash: /dev/tty: No such device or address · Issue #2406 · hexojs/hexo</a></li>
<li><a href="https://github.com/hexojs/hexo/issues/1013">升级到hexo 3.0后deploy type: github选项无效 · Issue #1013 · hexojs/hexo</a></li>
<li><a href="https://github.com/hexojs/hexo/issues/1154">3.0为什么运行hexo deploy没有反应啊？(Hexo Deploy hanging in 3.0) · Issue #1154 · hexojs/hexo</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode 的一些 packages 記錄</title>
    <url>/2017/09/vscode-packages/</url>
    <content><![CDATA[<!-- thumbnail: /images/index.JPG -->

<p><img src="/images/2017-09-28-22-08-17.png" alt="vscode"></p>
<p>雖然先前對 atom 熱衷了一陣子，現在卻叛逃到 vscode 了。覺得羞愧。即便如此，還是想記錄自己用了哪些 packages。</p>
<!-- TOC -->

<ul>
<li><a href="#%E5%AF%AB%E7%A8%8B%E5%BC%8F%E7%9B%B8%E9%97%9C">寫程式相關</a><ul>
<li><a href="#code-runner">Code Runner</a></li>
<li><a href="#html-snippets">HTML Snippets</a></li>
<li><a href="#iis-express">IIS Express</a></li>
</ul>
</li>
<li><a href="#markdown-%E5%AF%AB%E4%BD%9C%E7%9B%B8%E9%97%9C">Markdown 寫作相關</a><ul>
<li><a href="#markdown-preview-enhanced">Markdown Preview Enhanced</a></li>
<li><a href="#markdown-toc">Markdown TOC</a></li>
<li><a href="#paste-image">Paste Image</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<span id="more"></span>

<h1 id="寫程式相關"><a href="#寫程式相關" class="headerlink" title="寫程式相關"></a>寫程式相關</h1><h2 id="Code-Runner"><a href="#Code-Runner" class="headerlink" title="Code Runner"></a>Code Runner</h2><p>可以快速運行目前寫在 vscode 裡面的程式。用過都說讚。我目前只拿來跑 JS 而已</p>
<h2 id="HTML-Snippets"><a href="#HTML-Snippets" class="headerlink" title="HTML Snippets"></a>HTML Snippets</h2><p>補全 Html 的 tag 吧</p>
<h2 id="IIS-Express"><a href="#IIS-Express" class="headerlink" title="IIS Express"></a>IIS Express</h2><p>可以預覽 Html 的渲染效果</p>
<h1 id="Markdown-寫作相關"><a href="#Markdown-寫作相關" class="headerlink" title="Markdown 寫作相關"></a>Markdown 寫作相關</h1><h2 id="Markdown-Preview-Enhanced"><a href="#Markdown-Preview-Enhanced" class="headerlink" title="Markdown Preview Enhanced"></a>Markdown Preview Enhanced</h2><p>功能好像比 atom 版本的弱，現在用不太到</p>
<h2 id="Markdown-TOC"><a href="#Markdown-TOC" class="headerlink" title="Markdown TOC"></a>Markdown TOC</h2><p>可以快速添增目錄大綱</p>
<h2 id="Paste-Image"><a href="#Paste-Image" class="headerlink" title="Paste Image"></a>Paste Image</h2><p>將剪貼簿的圖片存到某個資料夾路徑，然後在 md 檔中貼上連結圖片的語法</p>
]]></content>
      <categories>
        <category>軟體</category>
      </categories>
      <tags>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>Html_layout_list</title>
    <url>/2018/03/Html-layout-list/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近想學前端的東西，接觸到切版的相關資訊，想說簡單記錄一下切版的類型，以及各種 display 類型置中的方式。資料應該是比較古早的，先不加入 bootstrap 和 flexbox，等之後學到再回來補</p>
<span id="more"></span>

<ul>
<li>表格布局: table (我大學時用過 XD)</li>
<li>浮動布局: div <code>float: left</code><ul>
<li>搭配 div.clearfix, clear: both</li>
</ul>
</li>
<li>列表布局: div <code>display: inline-block</code><ul>
<li>有副作用，inline-block 之間會有約 4px 的空格，需用 css hack 消除</li>
<li>在父元素設定 <code>font-size: 0px</code></li>
</ul>
</li>
</ul>
<ul>
<li><a href="http://blog.xuite.net/vexed/tech/29221717-CSS+%E5%B1%AC%E6%80%A7+display+%E7%9A%84%E5%80%BC+inline+block+inline-block+none">CSS 屬性 display 的值 inline block inline-block none @ Vexed’s Blog :: 隨意窩 Xuite 日誌</a></li>
<li><a href="http://luopq.com/2015/11/01/display-inline-block/">詳解 CSS display:inline-block 的應用 | 狼狼的藍胖子</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/2010/11/%E6%8B%9C%E6%8B%9C%E4%BA%86%E6%B5%AE%E5%8A%A8%E5%B8%83%E5%B1%80-%E5%9F%BA%E4%BA%8Edisplayinline-block%E7%9A%84%E5%88%97%E8%A1%A8%E5%B8%83%E5%B1%80/">拜拜了, 浮動布局 - 基于 display:inline-block 的列表布局 « 張鑫旭 - 鑫空間 - 鑫生活</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/2010/11/%E6%8B%9C%E6%8B%9C%E4%BA%86%E6%B5%AE%E5%8A%A8%E5%B8%83%E5%B1%80-%E5%9F%BA%E4%BA%8Edisplayinline-block%E7%9A%84%E5%88%97%E8%A1%A8%E5%B8%83%E5%B1%80/">拜拜了, 浮動布局 - 基于 display:inline-block 的列表布局 « 張鑫旭 - 鑫空間 - 鑫生活</a></li>
<li><a href="https://www.w3cplus.com/css/fighting-the-space-between-inline-block-elements">如何解決 inline-block 元素的空白間距_inline-block 教程_w3cplus</a></li>
</ul>
<h2 id="Box-Model"><a href="#Box-Model" class="headerlink" title="Box Model"></a>Box Model</h2><p>我大致理解成，有分成 block 類型的，與 inline 類型的 box model<br>inline 外層會包一個 iine box </p>
<ul>
<li><a href="http://boohover.pixnet.net/blog/post/18087970-box-model-css-%E6%A1%86%E6%A1%86%E6%A8%A1%E5%9E%8B">Box Model - CSS 框框模型 [2*] @ 網頁藝術思考 - CSS 網頁設計藝術, 友善的無障礙網頁 :: 痞客邦 ::</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/2010/01/css-float%e6%b5%ae%e5%8a%a8%e7%9a%84%e6%b7%b1%e5%85%a5%e7%a0%94%e7%a9%b6%e3%80%81%e8%af%a6%e8%a7%a3%e5%8f%8a%e6%8b%93%e5%b1%95%e4%ba%8c/">CSS float 浮動的深入研究、詳解及拓展 (二) « 張鑫旭 - 鑫空間 - 鑫生活</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Html</tag>
        <tag>Css</tag>
        <tag>Layout</tag>
      </tags>
  </entry>
  <entry>
    <title>github_ssh_setting</title>
    <url>/2018/03/github-ssh-setting/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近想重新啟用 hexo 的部落格，但太久沒摸，有些設定要重新摸索了 orz。先記錄一些剛剛做的事情</p>
<span id="more"></span>

<h2 id="用-cmd-刪除資料夾的檔案"><a href="#用-cmd-刪除資料夾的檔案" class="headerlink" title="用 cmd 刪除資料夾的檔案"></a>用 cmd 刪除資料夾的檔案</h2><p>刪除檔案</p>
<p><code>del *</code></p>
<p>刪除資料夾</p>
<p><code>RD /S *</code></p>
<ul>
<li><a href="https://jingyan.baidu.com/article/fcb5aff780b456edaa4a711c.html">CMD 删除某文件夾下的所有文件夾和文件_百度經驗</a></li>
<li><a href="http://october10.pixnet.net/blog/post/4682309-%E5%88%A9%E7%94%A8-rd--s-q-%E5%91%BD%E4%BB%A4%2C%E5%88%AA%E9%99%A4%E5%A4%9A%E5%B1%A4%E8%B3%87%E6%96%99%E5%A4%BE">利用 rd /s/q 命令, 刪除多層資料夾 @ 有ㄉ沒ㄉ… :: 痞客邦 ::</a></li>
</ul>
<h2 id="確認本地端有無-SSH-公鑰，複製貼上到-github"><a href="#確認本地端有無-SSH-公鑰，複製貼上到-github" class="headerlink" title="確認本地端有無 SSH 公鑰，複製貼上到 github"></a>確認本地端有無 SSH 公鑰，複製貼上到 github</h2><p>因為用 SSH clone 的話，之後不用再確認密碼，所以使用 keys 是必要的</p>
<p>先確認有沒有存在 SSH keys</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打開 gitbash</span></span><br><span class="line">ls -al ~/.ssh</span><br><span class="line"><span class="comment"># List the files in your .ssh directory, if they exist</span></span><br></pre></td></tr></table></figure>

<p>沒有的話，用 github 註冊的信箱建立一個 SSH keys<br><code>ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</code></p>
<p>已經有的話，複製金鑰，貼到 github 去</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">clip &lt; ~/.ssh/id_rsa.pub</span><br><span class="line"><span class="comment"># Copies the contents of the id_rsa.pub file to your clipboard</span></span><br></pre></td></tr></table></figure>


<ul>
<li><a href="https://help.github.com/articles/checking-for-existing-ssh-keys/">Checking for existing SSH keys - User Documentation</a></li>
<li><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/">Generating a new SSH key and adding it to the ssh-agent - User Documentation</a></li>
<li><a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/">Adding a new SSH key to your GitHub account - User Documentation</a></li>
</ul>
<h2 id="修改-vscode-的預設終端機"><a href="#修改-vscode-的預設終端機" class="headerlink" title="修改 vscode 的預設終端機"></a>修改 vscode 的預設終端機</h2><ul>
<li><a href="https://blog.yowko.com/2017/11/visual-studio-code-terminal.html?m=1">如何修改 Visual Studio Code Terminal 使用程式 | Yowko’s Notes</a></li>
</ul>
<h2 id="fs-SyncWriteStream-is-deprecated"><a href="#fs-SyncWriteStream-is-deprecated" class="headerlink" title="fs.SyncWriteStream is deprecated"></a>fs.SyncWriteStream is deprecated</h2><p>在使用時出現奇怪的警告訊息，google 發現可能是 hexo 沒更新，有些語法不被 node.js 支持的關係</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># 問題： </span><br><span class="line"># node 和 hexo 插件的版本帶來的問題：在 node8.x 的版本中，<span class="built_in">fs</span>.SyncWriteStream 被棄用了。</span><br><span class="line"></span><br><span class="line"># 解決： </span><br><span class="line"># 更新如下插件：</span><br><span class="line"></span><br><span class="line">npm install hexo-<span class="built_in">fs</span> --save</span><br><span class="line">npm install hexo-deployer-git@<span class="number">0</span>.<span class="number">3</span>.<span class="number">1</span> --save</span><br><span class="line">npm install hexo-renderer-ejs@<span class="number">0</span>.<span class="number">3</span>.<span class="number">1</span> --save</span><br><span class="line">npm install hexo-server@<span class="number">0</span>.<span class="number">2</span>.<span class="number">2</span> --save</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="http://blog.csdn.net/liuyongshun2/article/details/79348016">hexo（四）DeprecationWarning: fs.SyncWriteStream is deprecated - CSDN 博客</a></li>
<li><a href="http://huberyhe.github.io/2017/10/10/hexo-%E5%8D%87%E7%BA%A7%E4%B8%8E%E8%BF%81%E7%A7%BB/">[hexo] 升級與遷移 | Hubery</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>複製 Google 雲端的資料夾</title>
    <url>/2018/03/google-drive-clone/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在 PTT 上看到有好心的大大分享了 Python 的教學資源。因為資料很多，不想全部下載下來，我就開始尋找有沒有直接把資料複製到自己雲端的方法</p>
<span id="more"></span>

<p>除了一個一個按右鍵建立副本外，我找到一個以 Google 試算表為介面，執行 Google App Script 後，就能把該 Folder ID 的資料夾複製到自己的雲端。</p>
<p>不過我實際使用後，資料夾內的檔案太多的話，會容易失敗的樣子</p>
<ul>
<li><a href="http://techawakening.org/copy-folder-structure-contents-in-google-drive/2846/">How To: Copy Folder Structure and Contents in Google Drive?</a></li>
<li><a href="https://charlottehong.blogspot.tw/2017/12/google.html">CHG: google 雲端硬碟 對資料夾 做副本，複製一份到自己的帳戶</a></li>
<li><a href="http://ak77now.pixnet.net/blog/post/44908675-%5B%E6%95%99%E5%AD%B8%5D-%E5%A6%82%E4%BD%95%E5%9C%A8google-drive%E8%A3%A1%E9%9D%A2%E8%A4%87%E8%A3%BD%E4%B8%80%E4%BB%BD%E8%B3%87%E6%96%99%E5%A4%BE%E5%87%BA">[教學] 如何在 Google Drive 裡面複製一份資料夾出來 @ 老電影下載 :: 痞客邦 ::</a></li>
</ul>
<p>附上原始碼</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   </span></span><br><span class="line"><span class="comment">        Google Drive: Copy/Duplicate Folder Structure and Contents without using Desktop App</span></span><br><span class="line"><span class="comment">       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">   </span></span><br><span class="line"><span class="comment">                      For instructions, go to http://techawakening.org/?p=2846</span></span><br><span class="line"><span class="comment">                      For queries, bugs reporting comment on the above article.</span></span><br><span class="line"><span class="comment">   </span></span><br><span class="line"><span class="comment">                  Written by Shunmugha Sundaram for Techawakening.org - April 27, 2014</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            --.--        |                   |              o                          </span></span><br><span class="line"><span class="comment">              |,---.,---.|---.,---.. . .,---.|__/ ,---.,---..,---.,---. ,---.,---.,---.</span></span><br><span class="line"><span class="comment">              ||---&#x27;|    |   |,---|| | |,---||  \ |---&#x27;|   |||   ||   | |   ||    |   |</span></span><br><span class="line"><span class="comment">              ``---&#x27;`---&#x27;`   &#x27;`---^`-&#x27;-&#x27;`---^`   ``---&#x27;`   &#x27;``   &#x27;`---|o`---&#x27;`    `---|</span></span><br><span class="line"><span class="comment">                                                                  `---&#x27;           `---&#x27;</span></span><br><span class="line"><span class="comment">                                                                 </span></span><br><span class="line"><span class="comment">Credits:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Finding Subordinate Folders/Files: By David French via http://goo.gl/mhykXU</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Change Log:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Jan-13-2015: V1.1: Update to Prevent Files from being Tagged to My Drive Root.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Apr-29-2015: V2: DocList deprecated, Script rewritten to use DriveApp.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">To Donate: http://techawakening.org/go/donate</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sheet = SpreadsheetApp.getActiveSheet();</span><br><span class="line"><span class="keyword">var</span> spreadsheet = SpreadsheetApp.getActiveSpreadsheet();</span><br><span class="line"><span class="keyword">var</span> scriptproperties = PropertiesService.getScriptProperties();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">authorize</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    spreadsheet.toast(<span class="string">&quot;Enter Folder ID and  Select GDrive: Copy Folder-&gt;  Make a Copy&quot;</span>, <span class="string">&quot;&quot;</span>, -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onOpen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ss = SpreadsheetApp.getActiveSpreadsheet();</span><br><span class="line">    <span class="keyword">var</span> menuEntries = [&#123;</span><br><span class="line">            name: <span class="string">&quot;1. Authorize&quot;</span>,</span><br><span class="line">            functionName: <span class="string">&quot;authorize&quot;</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            name: <span class="string">&quot;2. Make a Copy&quot;</span>,</span><br><span class="line">            functionName: <span class="string">&quot;findRootFolder&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    ];</span><br><span class="line">    ss.addMenu(<span class="string">&quot;GDrive: Copy Folder&quot;</span>, menuEntries);</span><br><span class="line">    spreadsheet.toast(<span class="string">&quot;Select GDrive: Copy Folder-&gt; Authorize. This is an One Time Action.&quot;</span>, <span class="string">&quot;Get Started&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findRootFolder</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> folderId = sheet.getRange(<span class="string">&quot;B5&quot;</span>).getValue();</span><br><span class="line">    <span class="keyword">var</span> folderId = folderId.toString().trim();</span><br><span class="line">    <span class="keyword">var</span> start = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> topFolder = DriveApp.getFolderById(folderId);</span><br><span class="line"></span><br><span class="line">        deletekeys();</span><br><span class="line">        spreadsheet.toast(<span class="string">&quot;Copy Process Has Started. Please Wait...&quot;</span>, <span class="string">&quot;Started&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">        getFolders_(topFolder.getName(), topFolder);</span><br><span class="line">        spreadsheet.toast(<span class="string">&quot;Folder Has Been Copied Successfully. Please Check Your Google Drive Now.&quot;</span>, <span class="string">&quot;Success&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        Browser.msgBox(<span class="string">&quot;Error&quot;</span>, <span class="string">&quot;Sorry, Error Occured: &quot;</span> + e.toString(), Browser.Buttons.OK);</span><br><span class="line">        spreadsheet.toast(<span class="string">&quot;Error Occurred :( Please make sure you Entered Folder ID in B5 Cell.&quot;</span>, <span class="string">&quot;Oops!&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFolders_</span>(<span class="params">path, container</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> folders = container.getFolders();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (folders.hasNext()) &#123;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">var</span> folder = folders.next();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> folderCount = count;</span><br><span class="line">    <span class="keyword">var</span> fileslist = container.getFiles();</span><br><span class="line">    <span class="keyword">var</span> fileCountFind = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (fileslist.hasNext()) &#123;</span><br><span class="line">        fileCountFind++;</span><br><span class="line">        <span class="keyword">var</span> file = fileslist.next();</span><br><span class="line">        Logger.log(file.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> fileCount = fileCountFind;</span><br><span class="line">    <span class="keyword">var</span> files = container.getFiles();</span><br><span class="line"></span><br><span class="line">    Logger.log(<span class="string">&quot;container.getName() &quot;</span> + container.getName() + <span class="string">&quot;| folder length &quot;</span> + folderCount + <span class="string">&quot;| files length &quot;</span> + fileCount);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (folderCount &lt;= <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fileCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            Logger.log(<span class="string">&quot;Just Files Found Loop&quot;</span>);</span><br><span class="line">            copyfiles_(container.getName(), files);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (folderCount) &#123;</span><br><span class="line">        Logger.log(<span class="string">&quot;If loop, Folders Found&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> folders = container.getFolders();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (folders.hasNext()) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> folder = folders.next();</span><br><span class="line">            copy_(container.getName(), folder.getName(), files);</span><br><span class="line">            <span class="keyword">var</span> thisFolder = folder.getName();</span><br><span class="line">            <span class="keyword">var</span> thisPath = path + <span class="string">&quot;/&quot;</span> + thisFolder;</span><br><span class="line">            Logger.log(<span class="string">&quot;Folder Name:&quot;</span> + folder.getName());</span><br><span class="line">            getFolders_(thisPath, folder);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copy_</span>(<span class="params">containername, childname, files</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (scriptproperties.getProperty(containername + <span class="string">&quot;copy&quot;</span>)) &#123;</span><br><span class="line">        Logger.log(<span class="string">&quot;if&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> parentcontainer = DriveApp.getFolderById(scriptproperties.getProperty(containername + <span class="string">&quot;copy&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!scriptproperties.getProperty(containername + <span class="string">&quot;processed&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">/*process, copy files*/</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (files.hasNext()) &#123;</span><br><span class="line">                <span class="keyword">var</span> file = files.next();</span><br><span class="line">                <span class="keyword">var</span> newFile = file.makeCopy(file.getName(), parentcontainer);</span><br><span class="line">               <span class="comment">//parentcontainer.addFile(newFile);</span></span><br><span class="line">                DriveApp.getRootFolder().removeFile(newFile);</span><br><span class="line">                Utilities.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scriptproperties.setProperty(containername + <span class="string">&quot;processed&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> childfolder = parentcontainer.createFolder(childname + <span class="string">&quot;_copy&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> childfolderid = childfolder.getId();</span><br><span class="line">        scriptproperties.setProperty(childname + <span class="string">&quot;copy&quot;</span>, childfolderid);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        Logger.log(<span class="string">&quot;else&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> parentfold = DriveApp.createFolder(containername + <span class="string">&quot;_copy&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> parentfoldid = parentfold.getId();</span><br><span class="line">        scriptproperties.setProperty(containername + <span class="string">&quot;copy&quot;</span>, parentfoldid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!scriptproperties.getProperty(containername + <span class="string">&quot;processed&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">/*process, copy files*/</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (files.hasNext()) &#123;</span><br><span class="line">                <span class="keyword">var</span> file = files.next();</span><br><span class="line">                <span class="keyword">var</span> newFile = file.makeCopy(file.getName(), parentfold);</span><br><span class="line">            <span class="comment">//  parentfold.addFile(newFile);</span></span><br><span class="line">                DriveApp.getRootFolder().removeFile(newFile);</span><br><span class="line">                Utilities.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scriptproperties.setProperty(containername + <span class="string">&quot;processed&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> childfolder = parentfold.createFolder(childname + <span class="string">&quot;_copy&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> childfolderid = childfolder.getId();</span><br><span class="line">        scriptproperties.setProperty(childname + <span class="string">&quot;copy&quot;</span>, childfolderid);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    Logger.log(<span class="string">&quot;Container Name: &quot;</span> + containername + <span class="string">&quot;||&quot;</span> + <span class="string">&quot; Child Name: &quot;</span> + childname);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copyfiles_</span>(<span class="params">containername, files</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (scriptproperties.getProperty(containername + <span class="string">&quot;copy&quot;</span>)) &#123;</span><br><span class="line">        Logger.log(<span class="string">&quot;If Loop, Just files found- down&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> parentcontainer = DriveApp.getFolderById(scriptproperties.getProperty(containername + <span class="string">&quot;copy&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!scriptproperties.getProperty(containername + <span class="string">&quot;processed&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (files.hasNext()) &#123;</span><br><span class="line">                <span class="keyword">var</span> file = files.next();</span><br><span class="line">                <span class="keyword">var</span> newFile = file.makeCopy(file.getName(), parentcontainer);</span><br><span class="line">              <span class="comment">//parentcontainer.addFile(newFile);</span></span><br><span class="line">                DriveApp.getRootFolder().removeFile(newFile);</span><br><span class="line">                Utilities.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        scriptproperties.setProperty(containername + <span class="string">&quot;processed&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        Logger.log(<span class="string">&quot;Else Loop, Just files found&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> parentfold = DriveApp.createFolder(containername + <span class="string">&quot;_copy&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> parentfoldid = parentfold.getId();</span><br><span class="line">        scriptproperties.setProperty(containername + <span class="string">&quot;copy&quot;</span>, parentfoldid);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!scriptproperties.getProperty(containername + <span class="string">&quot;processed&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (files.hasNext()) &#123;</span><br><span class="line">                <span class="keyword">var</span> file = files.next();</span><br><span class="line">                <span class="keyword">var</span> newFile = file.makeCopy(file.getName(), parentfold);</span><br><span class="line">              <span class="comment">//parentfold.addFile(newFile);</span></span><br><span class="line">                DriveApp.getRootFolder().removeFile(newFile);</span><br><span class="line">                Utilities.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        scriptproperties.setProperty(containername + <span class="string">&quot;processed&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deletekeys</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    scriptproperties.deleteAllProperties();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>軟體</category>
      </categories>
      <tags>
        <tag>Google Drive</tag>
      </tags>
  </entry>
  <entry>
    <title>建立 Hexo 部落格，並與 Travis 整合</title>
    <url>/2018/03/built-hexo-and-use-travis/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直以來都覺得用 Hexo 寫 blog 有點辛苦，除了要 commit 文件檔外，還要 hexo generate, hexo deploy。雖然我寫成腳本了，可以一鍵執行，但總覺得很臃腫。最近一直聽到持續整合這個東西，想說有空的話來試看看好了。</p>
<span id="more"></span>

<h1 id="先-build-Hexo"><a href="#先-build-Hexo" class="headerlink" title="先 build Hexo"></a>先 build Hexo</h1><p>可參考 卡斯伯 的教學影片</p>
<ul>
<li><a href="https://www.facebook.com/WccCasper/videos/486603828402512/">(3) High翻天啊 - 2017最HOT丢回…. Follow us for more funny movement at…</a></li>
</ul>
<p>git 建立與備份流程</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init <span class="comment"># 初始化</span></span><br><span class="line">git add. <span class="comment"># 把新增的項目加入</span></span><br><span class="line">git commit -m <span class="string">&quot;git init&quot;</span> <span class="comment"># 記錄訊息</span></span><br><span class="line">git remote add origin git@github.com:xxx.git <span class="comment"># 新增遠方的 origin，如果是 clone 下來的 repo 就不用這行惹</span></span><br><span class="line">git push -u origin master <span class="comment"># 遠端路徑：push 原始檔，not hexo-demo project</span></span><br></pre></td></tr></table></figure>

<p>建立 Hexo 與發文流程</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝 CLI command 介面</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快速雛型</span></span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install </span><br><span class="line"></span><br><span class="line"><span class="comment"># 啟動(本地端預覽)</span></span><br><span class="line">hexo s <span class="comment"># s=server, localhost:4000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立靜態網站</span></span><br><span class="line">hexo g <span class="comment"># g=generate, public 資料夾生成</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 佈署(push 站點)</span></span><br><span class="line"><span class="comment"># 先填寫部屬路徑，修改 _config.yml</span></span><br><span class="line">deploy:         <span class="comment"># _config.yml</span></span><br><span class="line">    <span class="built_in">type</span>:git</span><br><span class="line">    repo:xxx.git</span><br><span class="line">    branch:gh-pages</span><br><span class="line"></span><br><span class="line"><span class="comment"># 佈署</span></span><br><span class="line">hexo g </span><br><span class="line">npm install hexo-deployer-git --save <span class="comment"># 要先下載，不然不能 hexo g</span></span><br><span class="line">hexo d <span class="comment"># push public to branch:gh-pages</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一個 site 佈署兩個站點</span></span><br><span class="line"><span class="comment"># 改成相對路徑，修改 _config.yml</span></span><br><span class="line">relative_link: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>Themes 安裝版型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ex Anodyne </span><br><span class="line">   example - ▇ 範例畫面</span><br><span class="line">   link - Anodyne 專案頁面</span><br><span class="line"></span><br><span class="line">1.安裝themes： template&#x2F;installation</span><br><span class="line">2.套用themes：</span><br><span class="line">_config.yml  &#x2F;&#x2F;置換themes</span><br><span class="line">  theme:landscape anodyne</span><br><span class="line"></span><br><span class="line">themes&#x2F;anodyne&#x2F;_config.yml  &#x2F;&#x2F;細部修改</span><br><span class="line">  Disqus comments 留言板</span><br><span class="line">  comments:</span><br><span class="line">    disqus_shortname:</span><br><span class="line">  GA</span><br><span class="line">  google_analytics:</span><br><span class="line">     </span><br><span class="line">3.客製化themes：</span><br><span class="line">layout 資料夾，template language 熟悉與了解邏輯。</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Travis"><a href="#Travis" class="headerlink" title="Travis"></a>Travis</h2><p>待用</p>
<p>參考</p>
<ul>
<li><a href="https://www.jianshu.com/p/5e74046e7a0f">使用 Travis CI 自動部署 Hexo - 簡書</a></li>
<li><a href="https://www.jianshu.com/p/93918de6fa2c">Hexo使用Travis CI自动化部署 - 简书</a></li>
<li><a href="https://www.jianshu.com/p/e22c13d85659">手把手教你使用Travis CI自动部署你的Hexo博客到Github上 - 简书</a></li>
<li><a href="http://www.itfanr.cc/2017/08/09/using-travis-ci-automatic-deploy-hexo-blogs/">使用 Travis CI 自動部署 Hexo 博客 | IT 範兒</a></li>
<li><a href="https://skychang.github.io/2017/01/01/Hexo-Use_Travis_CI_Auto_Deploy_Blog/">Hexo - 使用 Travis CI 自動佈署 Blog | 天空的垃圾場</a></li>
<li><a href="http://lotabout.me/2016/Hexo-Auto-Deploy-to-Github/">Hexo 自动部署到 Github | 三点水</a></li>
<li><a href="https://soarlin.github.io/2017/03/29/use-travis-ci-auto-deploy-to-github/">使用 Travis CI 自動發布 Hexo 內容到 Github｜SoarLin’s blog</a></li>
<li><a href="https://www.karlzhou.com/2016/05/28/travis-ci-deploy-blog/">用 Travis CI 自動部署 Hexo 博客 | Karl’s Notes</a></li>
<li><a href="http://notes.iissnan.com/2016/publishing-github-pages-with-travis-ci/#comments">使用 Travis CI 自動更新 GitHub Pages | IIssNan’s Notes</a></li>
<li><a href="https://ssarcandy.tw/2016/07/29/hexo-auto-deploy/">用 Travis CI 自動部屬 hexo 到 GitHub | SSARCandy’s Blog</a></li>
<li><a href="http://xwartz.xyz/pupa/2016/06/auto-update-with-travis-ci/">使用 Travis CI 自動更新 Hexo Blog · Pupa</a></li>
<li><a href="https://segmentfault.com/a/1190000009054888">使用 Travis 自動部署 Hexo 到 Github 與 自己的服務器 - 我的兒子叫酸奶 - SegmentFault 思否</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html">持續集成服務 Travis CI 教程 - 阮一峰的網絡日志</a></li>
<li><a href="https://github.com/steveklabnik/automatically_update_github_pages_with_travis_example">steveklabnik/automatically_update_github_pages_with_travis_example: An example of automatically updating GitHub Pages when you’re using Travis CI.</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Travis</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用 markdown 寫論文</title>
    <url>/2018/03/markdown-pandoc-cite-footnote/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直有在想說，如果當時寫論文時，是用 Markdown 來寫的話，撰寫速度會不會變得更快。我想應該是不會的，而且可能還會因為摸設定摸到死掉 XD。以下記錄目前蒐集到的，如何用 Markdown 寫論文的方式</p>
<span id="more"></span>

<h2 id="一、下載-Pandoc"><a href="#一、下載-Pandoc" class="headerlink" title="一、下載 Pandoc"></a>一、下載 Pandoc</h2><p>Pandoc 是 Markdown 的一種擴充。Markdown 不能解決的，就交給 Pandoc 吧</p>
<ol>
<li>到官網下載 Pandoc，順便用 Anaconda 下載 Python，然後在終端機輸入 <code>pip install pandoc-fignos</code> 插件</li>
<li>node.js 也下載比較好的樣子</li>
</ol>
<h2 id="如何引用文獻"><a href="#如何引用文獻" class="headerlink" title="如何引用文獻"></a>如何引用文獻</h2><ol>
<li>需要先有 bibtex 文件。可以用 Zotero 或 Endnote 來產生管理。</li>
<li>把 bibtex 檔放在目錄底下 </li>
<li>bibtex 內容大概是這樣</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@article&#123;yangzhiping2003,</span><br><span class="line">    title &#x3D; &#123;試評卡尼曼經濟心理學研究及其影響 [J]&#125;,</span><br><span class="line">    volume &#x3D; &#123;26&#125;,</span><br><span class="line">    number &#x3D; &#123;4&#125;,</span><br><span class="line">    urldate &#x3D; &#123;2013-05-27&#125;,</span><br><span class="line">    journal &#x3D; &#123;心理科學&#125;,</span><br><span class="line">    author &#x3D; &#123;陽志平&#125;,</span><br><span class="line">    year &#x3D; &#123;2003&#125;,</span><br><span class="line">    pages &#x3D; &#123;724–726&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>文中需要這樣引用 <ul>
<li><code>[yangzhiping2003]</code> 在研究中提到，blabla …<br>看起來<br>會像是</li>
</ul>
</li>
</ol>
<h2 id="腳註"><a href="#腳註" class="headerlink" title="腳註"></a>腳註</h2><p>在文中用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AAA表示[^1]，在BBB的時候[^2]</span><br></pre></td></tr></table></figure>

<p>在文末用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[^1]:</span><br><span class="line">[^2]:</span><br></pre></td></tr></table></figure>

<p>還是有點複雜，先到這裡打住好了</p>
<hr>
<p>參考資料</p>
<ul>
<li><a href="https://github.com/raytaylorlin/hust-graduation-thesis-pandoc">raytaylorlin/hust-graduation-thesis-pandoc: A tool for rendering HUST graduation thesis(including master and bachelor) using pandoc and latex.</a></li>
<li><a href="http://alfred-sun.github.io/markx-pandoc/">Markx</a></li>
<li><a href="http://pages.tzengyuxio.me/pandoc/#%E8%85%B3%E8%A8%BB">Pandoc’s Markdown 語法中文翻譯</a></li>
<li><a href="http://www.yangzhiping.com/tech/pandoc.html">Markdown 寫作進階：Pandoc 入門淺談 - 陽志平的網志</a></li>
<li><a href="http://blog.sciencenet.cn/blog-377709-1088215.html">科學網—如何用 Markdown 寫論文？ - 王樹義的博文</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Pandoc</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS 有單行註解這種東西嗎</title>
    <url>/2018/03/is-css-has-one-line-annotation/</url>
    <content><![CDATA[<p>最近在重新學習前端的基礎知識。跟著影片做中學的時候，突然想在 CSS 裡記錄想法，就跑去找 CSS 的註解方式。看到有文章寫 CSS 有單行註解 <code>//</code> 的時候，還很高興的使用了好幾天。</p>
<p>後來才發現，奇怪，怎麼預覽畫面跟想像中的不一樣，後來發現 CSS 似乎沒有單行註解，只有多行註解 <code>/***/</code>？</p>
<p>在搜尋後發現，其實好像真的沒這個規範，但很多開發者有一直討論過這件事情，VScode 裡也沒有支援這種註解方式。</p>
<p>BTW，之所以不支援 <code>//</code> 註解，好像是因為在壓縮程式碼的時候，有這種註解方式的話，會讓後面的屬性失效。但其實，我在 VScode 裡試驗過，只要在後面加個逗號 <code>//;</code> 就不會有影響了。</p>
<span id="more"></span>


<hr>
<p>參考資料</p>
<ul>
<li><a href="https://www.ptt.cc/bbs/Web_Design/M.1456285299.A.E04.html">[問題] css 的單行註解是不是有兼容問題？ - 看板 Web_Design - 批踢踢實業坊</a></li>
<li><a href="https://lists.w3.org/Archives/Public/public-html-ig-zh/2012Sep/0000.html">CSS //- 註解的可行性研究 from Kang-Hao (Kenny) Lu on 2012-09-05 (public-html-ig-zh@w3.org from September 2012)</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 browsersync 讓網頁能在瀏覽器中即時預覽</title>
    <url>/2018/03/live-in-browser-browsersync/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在重新開始學前端後，就一直很想能像 Codepen 那樣，能編輯完程式碼後，就即時在瀏覽器看到即時畫面。曾測試過一些方法，但都無法。後來找到了 browser-sync </p>
<span id="more"></span>

<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>在我理解中，browser-sync 會建立一個簡易的 server，並監測專案資料夾裡面的檔案。如果檔案有變更的話，就重新整理頁面。另外，server 端會在 <code>&lt;body&gt;</code> 插入相關語法，因此沒加入 <code>&lt;body&gt;</code> 的網頁是不會自動重整的（我踩這個雷踩了好幾個小時 QQ）</p>
<h2 id="作法"><a href="#作法" class="headerlink" title="作法"></a>作法</h2><p>以下只記錄簡單的作法</p>
<p>先安裝 node.js，會自帶 npm 管理工具</p>
<ul>
<li>到官網下載安裝</li>
<li>或是透過 chocolately 安裝</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">choco install node.js</span><br></pre></td></tr></table></figure>


<p>在全局安裝 browser-sync</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g browser-sync</span><br></pre></td></tr></table></figure>

<p>監測檔案、開啟網頁、即時重整預覽</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">browser-sync start --server --file <span class="string">&quot;*.*&quot;</span></span><br></pre></td></tr></table></figure>

<hr>
<p>參考資料</p>
<ul>
<li><a href="http://newhtml.net/%E7%AE%80%E5%8C%96%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95%E7%9A%84%E5%88%A9%E5%99%A8-browsersync/">簡化前端測試的利器 – BrowserSync – NewHTML</a></li>
<li><a href="http://blog.qiji.tech/archives/2878">Browsersync 簡介及使用 – 技術學習小組</a></li>
<li><a href="http://www.browsersync.cn/">Browsersync 中文網 - 省時的瀏覽器同步測試工具</a></li>
<li><a href="https://www.jianshu.com/p/480c707cd553">用 browser-sync 實時刷新 browser 的坑 - 簡書</a></li>
<li><a href="http://eddychang.me/blog/others/92-scss-livereload.html">SCSS 開發的 LiveReload 議題 - eddychang.me</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>FrontEnd</tag>
      </tags>
  </entry>
  <entry>
    <title>談網頁的佈局以及 display:flow-root</title>
    <url>/2018/04/html-layout-and-flowroot/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在學習網頁排版的時候，課程裡面使用 div 以及 float 來排版，而其實這種排版方式也還算是主流(吧)的一支。但我一直覺得這種排版方式有脫褲子放屁的感覺，很阿雜，因為需要清除浮動，才不會造成父元素的高度塌陷。(可能也有人這樣想吧，所以後來有了 flex 和 grid 排版方式 XD)</p>
<p>以下簡單介紹目前我知道的網頁佈局方式，之後再稍微談談 <code>display: flow-root</code> 這個比較新的東西</p>
<span id="more"></span>

<h2 id="一、網頁佈局方式"><a href="#一、網頁佈局方式" class="headerlink" title="一、網頁佈局方式"></a>一、網頁佈局方式</h2><p>我還記得大三的時候，跑去香妝系修網頁設計。當時使用的編輯器是 DreamWeaver，使用的佈局就是 table 了。害我後聽到 div 佈局的時候，花了很長一段時間去了解。但說實在的，我覺得 table 佈局比 div 佈局直覺多了。</p>
<p>就我的理解中，目前比較常被使用過的網頁佈局典範有這些</p>
<ul>
<li>table 佈局</li>
<li>div 佈局<ul>
<li>flow-root 佈局(等等會提到)</li>
</ul>
</li>
<li>flex 佈局</li>
<li>grid 佈局</li>
</ul>
<p>這些佈局典範，基本上都和 html 的元素屬性 display 有關。</p>
<p>在 w3.org 在 <a href="https://www.w3.org/TR/css3-box/#block-level0">CSS basic box model</a> 公佈的資料裡，有提到很多 display 的屬性。display 好像就翻譯叫佈局吧？但為了不讓它跟 與視覺效果的網頁佈局 搞混，下文就沿用英文 display 指這個屬性。</p>
<h3 id="1-1-table-佈局"><a href="#1-1-table-佈局" class="headerlink" title="1.1 table 佈局"></a>1.1 table 佈局</h3><p>table 佈局，可以透過 html 的 table 元素、或是把 <code>&lt;div&gt;</code> 設定成 <code>display: table</code> 達成。我的理解是，這種佈局就像是在 word 裡面拉表格的樣子差不多。拉完表格、固定好細格的位置後，只要把資料放入細格，在螢幕看到的畫面就是實際呈現的畫面(好繞口)。</p>
<p>但因為 table 無法方便的 RWD、table 有預設樣式對 css 不太友善的關係，後來網路佈局的主流就換成了 div 佈局。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">　<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">　<span class="tag">&lt;<span class="name">td</span>&gt;</span> 第一欄 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span> 第二欄 <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span> 第三欄 <span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line">　<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2-div-佈局"><a href="#1-2-div-佈局" class="headerlink" title="1.2 div 佈局"></a>1.2 div 佈局</h3><p>div 佈局，就是用 div 來堆疊網頁上內容的一種佈局方式。因為 div 這個元素沒有什麼對視覺有干擾的預設樣式，就像是空白的容器一樣，所以很適合 <s>拿來蓋房子</s> 用來區隔性質不同的網頁內容。再加上 div 有 <code>display: block</code> 的預設值，而 block 元素可以包裹 block 與 inline 元素，所以比起 span 更適合拿來當磚塊來蓋房子了。</p>
<p>但，div 佈局有個問題是，需要清除浮動。不管是在 block 或是 inline 元素中，在預設的情況下，他們的子元素都會依照 normal flow 的方式，由左至右、由上而下的乖乖排隊。但因為 block 父元素可以包裹 block 子元素，而 block 具有佔據一行的特性，所以 block 子元素雖然一樣會由上往下乖乖排隊，但卻沒辦法有左右鄰居。為了讓 block 子元素有能跟其他元素並排，於是有人想到 <code>float</code> 屬性。</p>
<p><code>float</code> 屬性，就相當於 word 裡面的文繞圖功能。當我設定圖片有 <code>float: left</code> 屬性時，圖片就會貼在 block 父元素的左側，而父元素之下的其他文字就會依照著 normal flow，貼著圖片依序排序去。因此，div 子元素可以有鄰居了！而且這些飄在 normal flow 之上的浮動 div 子元素，彼此也是可以當鄰居的。</p>
<p>但，好景不常，有一好沒兩好。這些浮起來的 div 子元素，因為沒有人拉它們回來，於是時常飄著飄著，就飄出父元素的視覺範圍了。這個現象叫做父元素的高度塌陷，height collapsing (還是叫 margin collapsing?)。為了解決這個現象，於是很多人開始討論該如何「清除浮動」，也就是 clearfix。</p>
<h4 id="1-2-1-ClearFix"><a href="#1-2-1-ClearFix" class="headerlink" title="1.2.1 ClearFix"></a>1.2.1 ClearFix</h4><p data-height="265" data-theme-id="0" data-slug-hash="xWMgee" data-default-tab="result" data-user="ayugioh2003" data-embed-version="2" data-pen-title="height collapsing" class="codepen">See the Pen <a href="https://codepen.io/ayugioh2003/pen/xWMgee/">height collapsing</a> by Chiu (<a href="https://codepen.io/ayugioh2003">@ayugioh2003</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>

<p>橘色的 div 是藍色和紅色 div 的父元素，本來應該是要將它們包起來的。但因為紅色藍色 div 有 <code>float: left</code> 的屬性，所以脫離了 normal flow。橘色 div 的高度本來是由它的最高的子元素所決定，但因為紅藍 div 離家出走了，所以橘色 div 的高度就沒辦法像自己的小孩那麼高（有種心酸的感覺）。</p>
<p>為了讓橘色 div 能包住紅藍 div 子元素，就需要「清除浮動」了。簡單的理解是，在紅色 div 後頭擺上一個不會逃家的小孩，這樣橘色 div 就可以抓到所有小孩了(咦)。</p>
<p data-height="265" data-theme-id="0" data-slug-hash="oqmZgg" data-default-tab="css,result" data-user="ayugioh2003" data-embed-version="2" data-pen-title=".clearfix" class="codepen">See the Pen <a href="https://codepen.io/ayugioh2003/pen/oqmZgg/">.clearfix</a> by Chiu (<a href="https://codepen.io/ayugioh2003">@ayugioh2003</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>

<p>簡單的說明</p>
<ul>
<li><code>.content:after</code> 是一種偽元素，能在橘色 div 後面產生一個虛的元素，並設定 css 屬性</li>
<li>要讓 <code>.content:after</code> 出現在網頁上，必須要針對 <code>content</code> 屬性設定值。就算是空白也沒關係。因為我們只是想讓紅色 div 子元素後還有個子元素，能用來清除浮動，於是 <code>content</code> 只要空白就好</li>
<li>這部份我沒有理解得很清楚。偽元素預設是 <code>display: inline</code>，為了讓它有自己的高度，需要設定成 <code>display: block</code> 或是 <code>display: table</code></li>
<li>最後就是讓它背負「清除浮動」的任務啦 <code>clear: both</code></li>
</ul>
<p>以上就是我對 div 排版的大概理解。在 <a href="http://www.iyunlu.com/view/css-xhtml/55.html">那些年我們一起清除過的浮動</a> 這篇文章中，有提到更多「清除浮動」的方式，他甚至認為「清除浮動」的原理主要可分成兩類</p>
<ul>
<li>其一，通過在浮動元素的末尾添加一個空元素，設置 clear：both 屬性，after 僞元素其實也是通過 content 在元素的後面生成了内容爲一個點的塊級元素</li>
<li>其二，通過設置父元素 overflow 或者 display：table 屬性來閉合浮動</li>
</ul>
<p>此外，在 2017 年，chrome 和 firefox 支援了一個新的 display 屬性：<code>flow-root</code>，也能達成類似 clearfix 的效果。這個方法和上文提到的第二種原理有相關。待會會在後面說明。</p>
<p>(另外，div 也有用 <code>display: inline-block</code> 排版方式，但 inline-block 有一些特別的 <s>feature</s> bug，所以還是不少人寧願用 block 搭配 float 來排版)</p>
<h3 id="1-3-flex-佈局"><a href="#1-3-flex-佈局" class="headerlink" title="1.3 flex 佈局"></a>1.3 flex 佈局</h3><p>還沒學，稍微看過教學，覺得厲害。聽說跟 div 佈局概念比較接近</p>
<ul>
<li><a href="https://www.w3cplus.com/css/css-grids-flexbox-and-box-alignment-our-new-system-for-web-layout.html">Web 布局新系統：CSS Grid,Flexbox 和 Box Alignment_CSS3, CSS3 Grid Layout, Grid, Layout 教程_w3cplus</a></li>
</ul>
<h3 id="1-4-gird-佈局"><a href="#1-4-gird-佈局" class="headerlink" title="1.4 gird 佈局"></a>1.4 gird 佈局</h3><p>還沒學，覺得厲害。聽說跟 table 佈局概念比較接近</p>
<ul>
<li><a href="https://www.w3cplus.com/css/css-grids-flexbox-and-box-alignment-our-new-system-for-web-layout.html">Web 布局新系統：CSS Grid,Flexbox 和 Box Alignment_CSS3, CSS3 Grid Layout, Grid, Layout 教程_w3cplus</a></li>
</ul>
<hr>
<h2 id="二、閉合浮動與-display-flow-root"><a href="#二、閉合浮動與-display-flow-root" class="headerlink" title="二、閉合浮動與 display: flow-root"></a>二、閉合浮動與 display: flow-root</h2><p>在 <a href="http://www.iyunlu.com/view/css-xhtml/55.html">那些年我們一起清除過的浮動</a>作者提到，其實「清除浮動」的說法並不是很精準，我們要的其實不只是「清除浮動」，而是要讓父元素高度不會塌陷，不會影響到父元素的後面鄰居。因此以「閉合浮動」的說法會比較精確。原理二就是使用閉合浮動的概念。</p>
<p>那如何達到閉合浮動，以及它是什麼原理呢？該文提到，在 CSS2.1 規範中，有一個新的概念，叫 BFC ( <a href="https://www.w3.org/TR/CSS21/visuren.html#block-formatting">Block formatting contexts，塊級格式化上下文</a>)。</p>
<p>我們可以把 BFC 想像成是一個控制欲很強的父元素。BFC 的小孩元素，永遠只能待在這個家的空間裡面，無法接觸到 BFC 之外的元素。因此，就能達到類似清除浮動的效果，但它其實是閉合浮動。</p>
<p>在比較久之前，只有符合特殊條件的元素，才能成為 BNC 這個比較特別的 block (inline-block)。在 <a href="https://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html">前端精選文摘：BFC 神奇背後的原理</a> 一文提到的條件有</p>
<ul>
<li>根元素</li>
<li>float 屬性不爲 none</li>
<li>position 爲 absolute 或 fixed</li>
<li>display 爲 inline-block, table-cell, </li>
<li>table-caption, flex, inline-flex</li>
<li>overflow 不爲 visible</li>
</ul>
<p>所以符合這些條件的父元素，就算沒有清除浮動，本身也自帶了閉合浮動的特殊效果，這個父元素的高度也就不會塌陷了。</p>
<p>有些 clearfix 的方案，會設定父元素 <code>overflow: hidden</code>，就是把父元素轉換成了 BNC，讓子元素只能乖乖待在家裡，無法逃出父元素的框框(聽起來好悲哀)。</p>
<h3 id="2-1-display-flow-root"><a href="#2-1-display-flow-root" class="headerlink" title="2.1 display: flow-root"></a>2.1 display: flow-root</h3><p><code>flow-root</code> 就像是 <code>block</code>、<code>inline</code>這些值一樣，是 <code>display</code> 屬性可以選擇的值。作用就是，能直接把被設定成 <code>display: flow-root</code> 的元素，直接轉變成 BNF 喔！這樣應該能套用在父元素上，閉合浮動，避免父元素的高度塌陷了。</p>
<p><code>flow-root</code> 是在 css3 中才被加入的，好像很長一段時間都沒被實作過。但在 2017 年四月釋出的 <a href="https://developers.google.com/web/updates/2017/04/nic58">Chrome 58</a> 和 <a href="https://hacks.mozilla.org/2017/04/firefox-53-quantum-compositor-compact-themes-css-masks-and-more/">Firefox 53</a> 都相繼支援 <code>flow-root</code> 功能啦 ~ 不過根據 <a href="https://caniuse.com/#search=flow-root">can i use</a>，到 2018 年的今天，好像也只有 Chrome 和 Firefox 有支援而已。</p>
<p>總之就是，要閉合浮動的話，只要在父元素設定 <code>display: flow-root</code> 就好了。而還沒支援的瀏覽器上，可以使用 <code>@supports</code>，拿舊的 clearfix 方案出來檔</p>
<p>demo1</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.left</span>,</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@supports</span> (<span class="attribute">display</span>: flow-root) &#123;</span><br><span class="line">    <span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: flow-root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.wrapper</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">content</span>: none;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>demo2</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flow-root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@supports</span> <span class="keyword">not</span> (<span class="attribute">display</span>: flow-root) &#123;</span><br><span class="line">    <span class="selector-class">.wrapper</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">clear</span>: both;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>附上 flow-root 的參考資料</p>
<ul>
<li><a href="https://unwire.pro/2017/04/29/css-display-flow-root/marketing/">解決 float:left 走樣問題更簡單　使用 CSS 新屬性 display: flow-root - UNWIRE.PRO</a></li>
<li><a href="https://helloanselm.com/2017/flow-root-supports/">Using flow-root today – Anselm Hannemann</a></li>
<li><a href="https://div.io/topic/1973">css 技巧之：css 新屬性 display:flow-root 介紹。 - Div.IO</a></li>
</ul>
<hr>
<p>以上是我的整理</p>
<p>因能力有限有誤或不清楚的地方，請多多指教與指正 orz</p>
<p>(像 Margin collapsing 和 height collapsing 我就分不太清楚差別；好像沒有後面用法的樣子)</p>
<p>附上主要參考資料</p>
<ul>
<li><a href="http://www.iyunlu.com/view/css-xhtml/55.html">那些年我們一起清除過的浮動 - 層疊之美</a></li>
<li><a href="https://www.w3cplus.com/css3/display-flow-root.html">flow-root_flow-root 教程_w3cplus</a></li>
<li><a href="http://cssmojo.com/the-very-latest-clearfix-reloaded/">The very latest clearfix reloaded</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
  </entry>
  <entry>
    <title>How 哥宇宙宣傳網頁試作</title>
    <url>/2018/04/howhow-universe-webpage-demo/</url>
    <content><![CDATA[<p>因為太喜歡 Howhow 了，我課程作業想不到題材，就拿來宣傳 How 哥宇宙好了 XD<br>以下記錄頁內錨點、Youtube Player API 的部份</p>
<span id="more"></span>

<p>先放上作品 (有彩蛋，記得開耳機 XD)</p>
<p data-height="430" data-theme-id="0" data-slug-hash="bvzxKM" data-default-tab="result" data-user="ayugioh2003" data-embed-version="2" data-pen-title="HW4-32  設計三欄版型_ytapi| Hexschool HTML, CSS" class="codepen">See the Pen <a href="https://codepen.io/ayugioh2003/pen/bvzxKM/">HW4-32  設計三欄版型_ytapi| Hexschool HTML, CSS</a> by Chiu (<a href="https://codepen.io/ayugioh2003">@ayugioh2003</a>) on <a href="https://codepen.io">CodePen</a>.</p>

<hr>
<h2 id="一、設定頁內錨點與滾動效果"><a href="#一、設定頁內錨點與滾動效果" class="headerlink" title="一、設定頁內錨點與滾動效果"></a>一、設定頁內錨點與滾動效果</h2><p>其實設定頁內錨點還滿簡單的，只要 a 的連結和 id 的名字一樣就好。這樣點下去，頁面就會自動跳到 div 那裡。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>How哥宇宙<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#intro&quot;</span>&gt;</span>關於How哥宇宙<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#tree&quot;</span>&gt;</span>How哥宇宙分支<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#review&quot;</span>&gt;</span>別人的評價<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">&quot;playAll()&quot;</span>&gt;</span>彩蛋<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;intro&quot;</span> <span class="attr">id</span>=<span class="string">&quot;intro&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tree&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;review&quot;</span> <span class="attr">id</span>=<span class="string">&quot;review&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>至於產生滾動效果的話，只要加入以下 css 就好。不過目前(2018.04)貌似只有 Firefox 和 Chrome 兩個瀏覽器有支援而已 orz</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  scroll-behavior: smooth;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>參考資料</p>
<ul>
<li><a href="https://kknews.cc/zh-tw/tech/ena88ry.html">神奇的 html 錨點，讓你的網頁在內部自由的跳轉 - 每日頭條</a></li>
<li><a href="https://stackoverflow.com/questions/17631417/css-pure-css-scroll-animation">css3 - CSS: pure CSS scroll animation - Stack Overflow</a></li>
<li><a href="https://caniuse.com/#search=scroll-behavior">Can I use… Support tables for HTML5, CSS3, etc</a></li>
</ul>
<hr>
<h2 id="二、Youtube-Player-API"><a href="#二、Youtube-Player-API" class="headerlink" title="二、Youtube Player API"></a>二、Youtube Player API</h2><p>Howhow 在三月多的時候，發佈了一個影片。因為內嵌一個品質不錯、但又無腦的、叫做 How 哥宇宙的 MV。後來就很多人開始二創，用自己會的樂器來接龍演奏樂器。先附上原始影片和始作俑者</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/DSYLan4xT8s" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>

<iframe width="560" height="315" src="https://www.youtube.com/embed/9ss0iRp9RGM" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>


<p>總之呢，我的目標就是在網頁上放一個按鈕，然後我只要按這個按鈕，就能控制所有被內嵌在網頁上的 Youtube iframe 的播放。然後我就一直撞牆了，冏。</p>
<p>在查詢的過程中，發現要操作 iframe 好像是件困難的事情，因為 iframe 裡的資料其實是其他網站的資料，這有點像是跨域請求的概念。之前有接觸過一點 AJAX，知道跨域的東西 hen 麻煩。</p>
<p>就當我快失去信心，意興闌珊的隨便組合關鍵字在 google 上 google 時，意外發現 <a href="https://developers.google.com/youtube/iframe_api_reference#playVideo">Youtube IFrame Player API</a> 這個東西。這東西帶給了我一線生機啊！</p>
<p>假設原本使用 iframe 內嵌的話，語法會是這樣</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.youtube.com/embed/PEr5agHOTcg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;560&quot;</span> <span class="attr">height</span>=<span class="string">&quot;315&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;allowfullscreen&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>改用 API 後， html 部份只要加入一個 div，其他靠 JS 來處理</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 這個DIV是用來顯示iframe的 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ytplayer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://www.youtube.com/iframe_api&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">   <span class="comment">// 自訂影片物件的變數名稱</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> player; </span></span><br><span class="line"> </span><br><span class="line"><span class="javascript">   <span class="comment">// API 提供的函數名稱。API js 已經準備好了，這函式就會開始執行</span></span></span><br><span class="line"><span class="javascript">   <span class="function"><span class="keyword">function</span> <span class="title">onYouTubeIframeAPIReady</span>(<span class="params"></span>) </span>&#123;  </span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="comment">// 初始化影片物件，並指定影片要放在哪個 id 的 div 上面</span></span></span><br><span class="line"><span class="javascript">     player = <span class="keyword">new</span> YT.Player(<span class="string">&#x27;ytplayer&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">       videoId: <span class="string">&#x27;PEr5agHOTcg&#x27;</span>, <span class="comment">//你的Youtube 影片ID</span></span></span><br><span class="line">       events: &#123;</span><br><span class="line"><span class="javascript">         <span class="string">&#x27;onStateChange&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line">           if (event.data == YT.PlayerState.PLAYING) &#123;</span><br><span class="line"><span class="javascript">             alert(<span class="string">&#x27;hello!&#x27;</span>);  <span class="comment">//這邊是當開始播放後，需要做的動作</span></span></span><br><span class="line">           &#125;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>之後要控制影片的播放的話，就可以透過 api 來操作。例如</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">player.playVideo();</span><br><span class="line">player.stopVideo();</span><br></pre></td></tr></table></figure>

<p>如果要達成自訂按鈕來播放影片的話，就需要添加 <a href="https://www.w3schools.com/js/js_htmldom_eventlistener.asp">JavaScript DOM EventListener</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// js</span></span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, playVideo)   <span class="comment">// 我想像中應該是這樣用啦</span></span><br></pre></td></tr></table></figure>

<p>只是後來我不曉得哪邊沒調整到，試不出來，就只好用 <a href="http://www.w3school.com.cn/tags/event_onclick.asp">HTML onclick 事件屬性</a> 來添加</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;player.playVideo()&quot;</span>&gt;</span>Click ME<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>最後在附上一次 How 哥宇宙宣傳網頁 XD<br>(這是我自己的二創啦，不是真的官方 der)</p>
<p data-height="430" data-theme-id="0" data-slug-hash="bvzxKM" data-default-tab="result" data-user="ayugioh2003" data-embed-version="2" data-pen-title="HW4-32  設計三欄版型_ytapi| Hexschool HTML, CSS" class="codepen">See the Pen <a href="https://codepen.io/ayugioh2003/pen/bvzxKM/">HW4-32  設計三欄版型_ytapi| Hexschool HTML, CSS</a> by Chiu (<a href="https://codepen.io/ayugioh2003">@ayugioh2003</a>) on <a href="https://codepen.io">CodePen</a>.</p>


<hr>
<p>附上參考資料<br>BTW，這 API 好像更新的很快，要用之前可先確認官方的說明手冊變了沒 orz</p>
<ul>
<li><a href="http://blog.elaine-iic.tw/2015/07/youtube-iframe-player-api.html">【YouTube】(三) 如何透過 YouTube IFrame Player API 控制 Youtube 撥放器？ - Elaine Wu</a></li>
<li><a href="https://parkerro.tw/%E3%80%90%E7%AD%86%E8%A8%98%E3%80%91youtube%E8%88%87%E7%B6%B2%E9%A0%81%E4%BA%92%E5%8B%95%E7%9A%84%E5%A5%BD%E5%B9%AB%E6%89%8B-youtube-iframe-player-api/">【筆記】Youtube 與網頁互動的好幫手 - YouTube IFrame Player API - ParkerRo 趴克肉</a></li>
<li><a href="https://developers.google.com/youtube/iframe_api_reference">YouTube Player API Reference for iframe Embeds  |  YouTube IFrame Player API  |  Google Developers</a></li>
</ul>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Html</tag>
        <tag>CSS</tag>
        <tag>YouTube</tag>
      </tags>
  </entry>
  <entry>
    <title>練習做一個網購商品列表首頁</title>
    <url>/2018/04/product-list-practice/</url>
    <content><![CDATA[<p>本來練習的課程只做了一個商品主題式列表，但因為看到很多人都做了有表頭表尾的網購首頁出來，想說不能輸，就越做越多了 XD</p>
<p>以下整理幾個用到的東西</p>
<span id="more"></span>

<h2 id="主題式列表"><a href="#主題式列表" class="headerlink" title="主題式列表"></a>主題式列表</h2><p>其實就是 ul li 的結構而已</p>
<h2 id="在商品列表左上方放折扣訊息"><a href="#在商品列表左上方放折扣訊息" class="headerlink" title="在商品列表左上方放折扣訊息"></a>在商品列表左上方放折扣訊息</h2><p>這可以用 <code>position: absolute</code> 做到<br>首先放了一個紅色三角形上去</p>
<ul>
<li><a href="http://www.cnblogs.com/jscode/archive/2012/10/19/2730905.html">【轉】純 CSS 畫的基本圖形（矩形、圓形、三角形、多邊形、愛心、八卦等），NB 麽 - 草根程序猿 - 博客園</a></li>
<li><a href="http://www.wibibi.com/info.php?tid=%E7%94%A8_CSS_%E8%A8%AD%E8%A8%88%E5%87%BA%E4%B8%89%E8%A7%92%E5%BD%A2%E5%9C%96%E6%A1%88">用 CSS 設計出三角形圖案 - Wibibi</a></li>
<li><a href="http://apps.eky.hk/css-triangle-generator/zh-hant">CSS 三角形產生器</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10136641">30 天掌握 Sass 語法 - (27) 使用 @if 提升 @Mixin 靈活度，以 CSS 圖形化為例 - iT 邦幫忙:: 一起幫忙解決難題，拯救 IT 人的一天</a></li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.bg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="comment">/*   top: 0;</span></span><br><span class="line"><span class="comment">  left: 0; */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">70px</span> solid red;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">70px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 別人的寫法 */</span></span><br><span class="line"><span class="selector-class">.thick-border</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">60px</span> <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: transparent <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.9</span>);</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>之後再把文字擺上去，順便用了 <code>transform: rotate(-45deg);</code> 讓文字旋轉</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.productList</span> <span class="selector-tag">li</span> <span class="selector-class">.sale</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">9px</span>;</span><br><span class="line"><span class="comment">/*   background-color: red; */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="comment">/*   padding: 8px; */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line"><span class="comment">/*   text-align: center; */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="回到最上頁"><a href="#回到最上頁" class="headerlink" title="回到最上頁"></a>回到最上頁</h2><p>先用了 <code>position: fixed</code> 讓按鈕固定在右下角<br>再配合平滑滾動，讓畫面看起來比較和緩</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  scroll-behavior: smooth;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按鈕也有用 <code>border-radius: 5px;</code> 來產生圓角</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>好像沒什麼了。剩下大概就</p>
<ul>
<li>大量使用 hover 製造互動效果</li>
<li>使用 <code>display: flow-root</code> 閉合浮動</li>
</ul>
<p>之後也要花時間學習怎麼配色，不然我一直都用粉紅色和淡藍色 XD</p>
<p>附上試作的網頁</p>
<p data-height="480" data-theme-id="0" data-slug-hash="dmLREa" data-default-tab="result" data-user="ayugioh2003" data-embed-version="2" data-pen-title="利用絕對定位設計左上角圖案" class="codepen">See the Pen <a href="https://codepen.io/ayugioh2003/pen/dmLREa/">利用絕對定位設計左上角圖案</a> by Chiu (<a href="https://codepen.io/ayugioh2003">@ayugioh2003</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>Html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Google Sheet 的自訂函式</title>
    <url>/2019/02/google-sheet-custom-function/</url>
    <content><![CDATA[<p>很久沒更新這個 Blog 了，但覺得應該要重新經營一下，就直接先在 Github 的網頁寫 md 了。之後應該會把過去文章備份起來，重新再建立 Blog 一次吧。</p>
<p>剛剛看到赤燭的包子在臉書上問說，Google Sheet 的某個語法要怎麼用，底下有人額外提到 Google Sheet 的自訂函數。一時好奇，就想說來研究一下好了。</p>
<ul>
<li><a href="https://www.facebook.com/huw12313212/posts/2102607726482619">王瀚宇 - 有人用過Google Sheet的Conditional Format Rules嘛？…</a></li>
</ul>
<span id="more"></span>

<p>看了一下 Google Sheet 自訂函數教學 <a href="https://developers.google.com/apps-script/guides/sheets/functions">1</a>，還滿好懂的。先到 Google Sheet 控制菜單找到 <code>Tools &gt; Script editor</code>，然後就可以在裡面寫自己想要的函式了。</p>
<p>例如，如果要把 cell 的數值加倍的話，就在頁面自訂一個 DOUBLE 函式：</p>
<p><img src="https://i.imgur.com/juxyZqV.png" alt="範例程式"></p>
<p>然後回到 Google Sheet 介面，在細格中引用自訂的函式：</p>
<p><img src="https://i.imgur.com/STZ2o2Q.png" alt="範例sheet"></p>
<p>這樣就大公告成了。BTW，Google App Script 好像支援用 JSDoc 語法來說明函式的功能。之前不曉得這可以做什麼用，但現在懂惹</p>
<ul>
<li><a href="http://usejsdoc.org/about-getting-started.html">Use JSDoc: Getting Started with JSDoc 3</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>GoogleSheet</tag>
        <tag>JSDoc</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取臉書粉專的留言</title>
    <url>/2019/02/get-facebook-page-comments/</url>
    <content><![CDATA[<p>剛剛看到一個讓人生氣的臉書貼文 <a href="https://www.facebook.com/mykmt/photos/a.150164682972/10157105754217973/?type=3&theater">1</a>，於是想了解一下底下的留言會有什麼反應。由於在短短五個小時內，就湧入三千多則留言，數據量很多；再加上臉書的留言載入很爛，就更難閱讀了。想說用些方法讓自己比較好閱讀些</p>
<span id="more"></span>


<h2 id="透過-Graph-API-Explorer"><a href="#透過-Graph-API-Explorer" class="headerlink" title="透過 Graph API Explorer"></a>透過 Graph API Explorer</h2><p>本來是想用這個方式抓留言的……，但現在好像只有自己管理的粉專，才能透過 API 抓留言的樣子，所以這條路行不通。鑑於之後可能有機會用到，就還是找了一下資料</p>
<ul>
<li><a href="http://ronyeh.me/2017/12/04/%E7%94%A8python%E6%89%BE%E5%87%BAcsv%E4%B8%AD%E7%9A%84email/">抓下 FB 粉絲團留言中的 email - Ron’s blog</a></li>
</ul>
<h2 id="展開全部留言，在-console-中用語法抓留言"><a href="#展開全部留言，在-console-中用語法抓留言" class="headerlink" title="展開全部留言，在 console 中用語法抓留言"></a>展開全部留言，在 console 中用語法抓留言</h2><p>我目前只想得到這種方式了 orz。首先，可以透過別人寫好的 Bookmarkelet，將貼文底下的留言自動打開。我之前試過，電腦要用好一點的，不然瀏覽器會 lag</p>
<ul>
<li><a href="https://www.kocpc.com.tw/archives/145296">想要在 自動展開臉書留言 　把這個加入書籤列中幫你一鍵搞定 - 電腦王阿達</a></li>
<li><a href="http://fannys23.pixnet.net/blog/post/43518713-%E5%B1%95%E9%96%8B%E6%89%80%E6%9C%89facebook%E7%95%99%E8%A8%80">[Web] 在瀏覽器增加展開所有 facebook 留言的按鈕 @ 小攻城師的戰場筆記：：痞客邦 ::</a></li>
<li><a href="https://www.dcard.tw/f/dcard/p/7852146">【外掛】一鍵展開所有留言 - Dcard Dcard板</a></li>
</ul>
<p>接下來，就是在 console 裡面寫 JavaScript 來過濾資料。先附上剛剛試用的程式碼：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 每個留言都被放在 &lt;li&gt; 裡面，所以抓取整個留言區的每個 &lt;li&gt;</span></span><br><span class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;._77bp&gt;li&#x27;</span>) </span><br><span class="line"><span class="comment">// 接著抓 &lt;li&gt; 裡面的 &lt;span&gt;，抓出裡面的文字，然後印到 console 上</span></span><br><span class="line">list.forEach(<span class="function"><span class="params">item</span>=&gt;</span><span class="built_in">console</span>.log( item.querySelector(<span class="string">&#x27;span&#x27;</span>).innerText ))</span><br></pre></td></tr></table></figure>

<p>大概是這樣吧。如果我後續要改良的話，可能會朝這幾個方向走</p>
<ol>
<li>把資料存成 object、array 形式，方便整理。Chrome 的 console 用 <code>copy()</code> 能直接把值放到剪貼簿，這樣就能方便存資料了</li>
<li>改成 Nodejs 可以執行的寫法。流程可能是用 Chrome headless 進入網頁，自動展開留言，抓取留言存成 Json，再寫入檔案吧。不過我完全不確定是否可行就是了</li>
</ol>
<p>附上一些未來可能對我有幫助的參考資料</p>
<ul>
<li><a href="https://juejin.im/post/5a4e1038f265da3e591e1247">[译] JavaScript 自动化爬虫入门指北（Chrome + Puppeteer + Node JS）：和 Headless Chrome 一起装逼一起飞 - 掘金</a></li>
<li><a href="https://medium.com/@evenchange4/chrome-headless-puppeteer-%E5%B0%8F%E5%A6%99%E7%94%A8-9ac2c3b4e761">Chrome Headless — Puppeteer 小妙用 – Michael Hsu – Medium</a></li>
<li><a href="https://www.cnblogs.com/dolphinX/p/7715268.html">Puppeteer: 更友好的 Headless Chrome Node API - 謙行 - 博客園</a></li>
</ul>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Facebook</tag>
      </tags>
  </entry>
  <entry>
    <title>浮動排版與clearfix的建議</title>
    <url>/2019/03/css-float-layout-and-clearfix/</url>
    <content><![CDATA[<p>前天在六角學院的不公開社團 <a href="https://www.facebook.com/groups/110635703123103/permalink/362891001230904/" title="六角學院社團">1</a> 看到六角校長洧杰丟了一個題目給大家思考 <a href="https://codepen.io/liao/pen/EMPWZd" title="思考題目">2</a>，我猜應該是在練習浮動排版時，時常會看到的父元素高度塌陷吧。因此我以 clearfix 的角度去思考這個題目，下面的文字是我在該貼文底下的留言</p>
<span id="more"></span>

<hr>
<p>以下是我目前程度會想給出的建議</p>
<p>1.把多餘的 code 修掉，能更聚焦。例如，css reset 可以用 codepen 內建的選項載入；CSS 中的 .footer、.end 等等樣式設定其實在這裡沒用到，也可以刪掉；HTML 中的 html、head 等標籤 codepen 會幫忙處理好，因此也可以刪掉</p>
<p>2.從 clearfix 這個命名可以看出，這些 code 應該是想練習如何利用 float 來排版，以及避免浮動元素的父元素的高度塌陷。因此我把 codpen 的標題改成「浮動排版修改」，方便日後回顧時能更容易回想起來</p>
<p>3.CSS 中我覺得有些設定會干擾到效果呈現，所以就先刪掉了。例如，.header 的 height: 150px 設定，會讓本來應該高度塌陷的 .header 繼續有高度，這樣就算設定成正確的 clearfix 用法，也看不出來成效，這樣就失去練習的用意了</p>
<p>4.清除 (閉合) 浮動的第一步與第二步，是要列出網頁中有哪些浮動元素，以及浮動元素的父元素是誰。從 CSS 中可看出，浮動元素有 .topmenu 與 .topmenu li，因此從 HTML 的結構中可找出，它們各自的父元素是 .header 以及 ul，代表我們需要對這兩個父元素進行一個清除浮動的動作</p>
<p>5.再來是第三步，設定 clear:both 來清除浮動。清除 (閉合) 浮動我目前學過的主要有兩種方法。第一個方法是，在最後一個浮動元素的後面，添增一個自帶 clear: both 設定的元素。以我的修改範本為例，需要對 .header 以及 ul 的最後一個子元素的後頭，添加 <code>&lt;div class=&quot;clearfixOld&quot;&gt;&lt;/div&gt;</code> 元素。另外，也可以用 <code>&lt;br clear=both&gt;</code> 放在父元素內部的最後，一樣會有清除浮動的效果</p>
<p>6.清除 (閉合) 浮動的第二種方式是，利用偽元素會插入被設定元素的最後一個子元素後頭的原理，來進行清除浮動。以該範本為例，就是在 .header 和 ul 在兩個元素，新增 clearfix 這個 class，就能自動在最後插入一個帶有 clear:both 設定的子元素，以達成清除浮動的需求了</p>
<p>7.其他 margin、padding 的設定，就要再根據視覺效果進行微調了。我的建議先聚焦在 clearfix 的設定就好，避免超展開 (?)</p>
<p>(完)</p>
<p><a href="https://codepen.io/ayugioh2003/pen/NJxjpB?editors=1100">https://codepen.io/ayugioh2003/pen/NJxjpB?editors=1100</a></p>
]]></content>
      <categories>
        <category>編程</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>float</tag>
        <tag>clearfix</tag>
      </tags>
  </entry>
  <entry>
    <title>砍掉重練部落格：架設 Hexo 在 gh-pages</title>
    <url>/2019/07/restart-hexo/</url>
    <content><![CDATA[<p>最近因為當了六角的遠端助教，讓我想重新寫部落格。雖然幾年前就有用 Hexo 架好部落格，但因為當時還不太懂程式語言與套件的相關概念，導致很多功能是硬湊出來的（像是用 bash 寫自製功能 =_=）。以下將記錄從上一版過度到目前版本的過程。</p>
<span id="more"></span>

<h2 id="砍舊的專案"><a href="#砍舊的專案" class="headerlink" title="砍舊的專案"></a>砍舊的專案</h2><p>本來我的部落格架在 ayugioh2003.github.io 上，而我也想繼續沿用。因此我就把原本的 repo 砍了，再重新開一個空白的 repo。</p>
<h2 id="初始設定"><a href="#初始設定" class="headerlink" title="初始設定"></a>初始設定</h2><p>重新設定過程主要參考 Ray 的<a href="https://hsiangfeng.github.io/categories/hexo/"> Hexo 系列文</a>。先安裝 hexo-cli 命令列工具，並初始化 hexo 設定，安裝 npm 相依套件，最後啟動 server 在本地端預覽部落格，就完成了初始設定。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># clone</span></span><br><span class="line">git@github.com:ayugioh2003/ayugioh2003.github.com.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝</span></span><br><span class="line">npm install hexo-cli -g </span><br><span class="line">hexo init ayugioh2003</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 啟動 hexo</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<h2 id="主題安裝"><a href="#主題安裝" class="headerlink" title="主題安裝"></a>主題安裝</h2><p>Hexo 預設的主題滿簡潔的，在 banner 處會有一顆大月亮，我上一版的主題就是預設的。因為 Ray 的教學中有提到 NeXT 的主題替換，而我也想換換口味，所以也將主題換成 NeXT 了。除了 Ray 的教學文，NeXT 官方網站也有提到替換的方式</p>
<ul>
<li><a href="https://theme-next.iissnan.com/getting-started.html">开始使用 - NexT 使用文档</a> &lt;- 舊版。已停止更新</li>
<li><a href="https://github.com/theme-next/hexo-theme-next/tree/v7.2.0">theme-next/hexo-theme-next at v7.2.0</a> &lt;- 新版。推薦使用</li>
</ul>
<h2 id="Hexo-基礎設定"><a href="#Hexo-基礎設定" class="headerlink" title="Hexo 基礎設定"></a>Hexo 基礎設定</h2><p>基礎設定會在專案資料夾底下的 _config.yml 檔案中。因為我過去有架設 Hexo 的經驗，所以有再修改了 Ray 的一些設定</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">小麥前端</span> <span class="string">blog</span> <span class="comment"># 網站標題</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">一個心理人跑來學前端的記錄</span> <span class="comment"># 網站附標題</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment"># 網站敘述</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="comment"># 關鍵字</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">小麥</span> <span class="comment"># 網站作者名</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-TW</span> <span class="comment"># 網站語系</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://ayugioh2003.github.io</span> <span class="comment"># 網站的 URL</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog/</span> <span class="comment"># 根目錄。所以首頁會是 ayugioh2003.github.io/blog</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:title/</span> <span class="comment">#:year/:month/:day/:title/ # 文章路徑設定</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br></pre></td></tr></table></figure>

<h2 id="佈署到-gh-pages-的設定"><a href="#佈署到-gh-pages-的設定" class="headerlink" title="佈署到 gh-pages 的設定"></a>佈署到 gh-pages 的設定</h2><p>總共需要三個步驟。一、先用 npm 安裝 hexo-deployer-git 套件。二、在 _config.yml 中調整佈署的相關設定。三、每次寫完文章後，要佈署到 gh-pages 的指令。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令列指令</span></span><br><span class="line"><span class="string">npn</span> <span class="string">install</span> <span class="string">hexo-deployer-git</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># _config.yml。將 example 換成自己的 github 帳號</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/example/example.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令列指令。d for deploy，g for generate</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">d</span> <span class="string">g</span></span><br></pre></td></tr></table></figure>

<p>話說在佈署到 Github 的過程中，我遇到一個神秘的錯誤。後來 Google 後發現，當 Repo 的名稱是 <code>&lt;username&gt;.github.io</code> 的形式時，gh-pages 就只能以 master 的形式發布。我本來想將 branch:gh-pages 當靜態網站分支，branch:master 當文章管理的說，結果這個夢想就滅了 QQ</p>
<ul>
<li><a href="https://help.github.com/en/articles/configuring-a-publishing-source-for-github-pages">Configuring a publishing source for GitHub Pages - GitHub Help</a></li>
</ul>
<h2 id="建立、發布文章相關指令"><a href="#建立、發布文章相關指令" class="headerlink" title="建立、發布文章相關指令"></a>建立、發布文章相關指令</h2><p>環境建好了，就該發篇文來試看看效果。以下參考 Ray 的文章內容，以及 Hexo 官方文件</p>
<ul>
<li><a href="https://hsiangfeng.github.io/hexo/20190411/932826160/">架設Hexo+GitHub | Welcome.Web.World</a></li>
<li><a href="https://hexo.io/zh-tw/docs/commands">指令 | Hexo</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new [title] <span class="comment"># 新建文章</span></span><br><span class="line"></span><br><span class="line">hexo s <span class="comment"># server 啟動伺服器</span></span><br><span class="line">hexo g <span class="comment"># generate 生成靜態頁面</span></span><br><span class="line">hexo d <span class="comment"># deploy 將靜態頁面佈署到 github</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 簡寫</span></span><br><span class="line">hexo g -d <span class="comment"># 生成靜態頁面，立即佈署網站</span></span><br><span class="line">hexo d -g <span class="comment"># 在佈署網站前，先生成靜態網頁</span></span><br><span class="line"></span><br><span class="line">hexo clean <span class="comment"># 清除快取檔案與已產生的靜態頁面</span></span><br></pre></td></tr></table></figure>

<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>感謝 Ray 的教學系列文，讓我不再將重練 Hexo 視為畏途。日後應該會再根據系列文新增功能到部落格中，像是 GA、搜尋功能等等。</p>
]]></content>
      <categories>
        <category>部落格設定</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>兩個月來擔任六角遠端切版助教的心得</title>
    <url>/2019/07/hexschool-TA-experience/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/MSsiq4T.png" alt="行事曆圖片。比喻經過了一段時間"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>這是一篇我擔任完六角的遠端切版助教後，想記錄些什麼的心得文。</p>
<p><a href="https://www.facebook.com/hexschool/">六角學院</a>是一個致力於培養網頁前端開發的教育機構。去年服役完，在思考自己的職涯時，剛好有人貼六角的網頁給我；經過評估後，我就入坑惹。（這段寫起來怎麼這麼像業配文 R）</p>
<p>在今天五月時，<a href="https://www.facebook.com/sfismy">六角學院的校長洧杰</a>發出一個公告：<a href="https://www.hexschool.com/2019/05/13/2019-05-13-remote-jobs/">【學員專屬徵才 - 遠端助教】無程式工作經驗者優先錄取</a>。之所以釋出這個職缺，一方面是六角自己想培養自己的人才，一方面是六角想多些人手來幫忙回覆學員的問題。（六角的一個特色是，會在 24 小時內回覆學員在 Udemy 提出的問題，因此每天都會有不少題目需要回覆）</p>
<p>徵才職缺有兩種類型：網頁排版助教、以及 JS 助教。每種職缺有相對應的應徵門檻，像是 JS 助教需要完成六角 JS、Vue 課程的最終作業才可應徵。我當時 Vue 課程還沒上完但其他課程都上完了，所以有應徵排版助教的資格。但我卻害怕能力不夠，有點猶豫要不要應徵報名；還好當時看到閱部客 Youtube 頻道介紹的<a href="https://www.youtube.com/watch?v=RKh0gQWxws8&feature=youtu.be&t=529">「靠！我要」哲學</a>，就下定決心去應徵排版助教了。聽到洧杰老師通知我應徵上惹的時候，真的很感動 QQ</p>
<p>因為七月底這個短期的助教身份就要結束惹，想說 logv 一下（阿傑手勢）。以下談談六角助教在做些什麼，以及簡短心得。</p>
<span id="more"></span>

<h2 id="教育訓練（一週-兩個月）"><a href="#教育訓練（一週-兩個月）" class="headerlink" title="教育訓練（一週/兩個月）"></a>教育訓練（一週/兩個月）</h2><p><img src="https://i.imgur.com/85hlFyJ.png" alt="quip上的教育訓練資源"></p>
<p>在六月三號星期一報到之前，六角就已經有提供教育訓練的文件給我（助教回覆問題的流程、Udemy 助教界面的操作），也有說明會搭配助教長審核我初期回覆給同學的回覆，並用一週的時間讓新進的助教熟悉整個回覆學員問題的流程。</p>
<p>不過我覺得，其實兩個月下來，六角都有搭配一些做法，使得新進助教的回覆品質越來越高，因此讓我覺得教育訓練其實不只一週而已，而是整個兩個月都算是。因此就先簡單列出這兩個月下來，每週都在做些什麼：</p>
<ul>
<li><strong>Week0</strong>：自己找過去前輩的相關經驗當參考。</li>
<li><strong>Week1</strong>：看六角提供的教育訓練資源，先在 Slack 上貼準備回給學員的擬答，並且讓助教長審核回覆品質</li>
<li><strong>Week2</strong>：熟悉回覆流程</li>
<li><strong>Week3</strong>：公告自評方法</li>
<li><strong>Week4</strong>：自評方法實施 (自評每天回覆的品質。最高 10 分)</li>
<li><strong>Week5</strong>：可自行回覆 (平均分數超過 8.5，就能自行回覆學員)</li>
<li><strong>Week9</strong>：交接。暫時擔任類似助教長的角色，審核下一任助教的回覆</li>
</ul>
<p><strong>前輩的相關經驗</strong>：這邊我重點參考兩篇文：上一任 <del>樹精</del> 遠端助教<a href="https://www.facebook.com/profile.php?id=1848693276">蔡宇軒</a>寫的《<a href="https://pvt5r486.github.io/note/20190524/3138494786/">擔任六角遠端助教的那一段日子</a>》，以及<a href="https://www.facebook.com/bosscodingplease/">老闆 來點寇汀吧。</a>寫的《<a href="https://medium.com/%E5%9C%A8%E7%B4%90%E7%B4%84%E5%A4%A7%E5%AD%B8%E8%AE%80%E7%A0%94%E7%95%B6%E5%8A%A9%E6%95%99%E7%9A%84%E9%80%B2%E5%8C%96%E6%97%A5%E8%AA%8C-b5f0d604201a">在紐約大學讀研當助教的進化日誌</a>》。兩篇都寫得很棒，很有參考價值。</p>
<p><strong>官方回覆流程</strong>：六角有讓我們看放在 quip 上的助教回覆題流程，以及一些如何操作 Udemy 助教界面的影片。可以說是如何回覆線上課程問題的線上課程呢（我在說什麼）</p>
<p><strong>助教長審核機制</strong>：我覺得這機制很棒。一方面控制了六角在回覆學員時的品質，一方面也讓身為弱弱助教的我了解到自己回覆的盲點。</p>
<p><strong>自評方法</strong>：算是讓助教自己評估自己是否能夠獨當一面了的意思；如果自評分數高於 8.5，就能夠自行回覆學員問題，不用經過助教長審核。不過後來遇到比較難的問題，還是會把問題貼回 Slack 上請大家幫我集思廣益一下 XD</p>
<p><strong>交接</strong>：我們這次的交接期有三天。簡單來說就是，讓我們上任助教擔任類似助教長的角色，審核新任助教的回覆，目的是讓新任助教適應我們當初 Week1 時做的那些事情。我覺得滿有趣的，因為要先看學員的問題在哪，然後再看新任助教如何瞭解那些問題、擬答有沒有不足的部份後。最後我自己要先形成觀點：反芻、消化後，再表達出來給予新任助教一些意見。這很像是全面啟動電影中的概念，就是第一層無法無法解決的事情，就要再下潛到二三層，然後把二三層後的結果傳回第一層，這樣事情才能解決（離題了 XD）</p>
<h2 id="工作流程（一日）"><a href="#工作流程（一日）" class="headerlink" title="工作流程（一日）"></a>工作流程（一日）</h2><p><img src="https://i.imgur.com/yCtzpFs.png" alt="清空完題目的示意圖。每天六角課程有不少題目，若清空的話會有成就感"></p>
<!-- ![清空完題目的示意圖。每天六角課程有不少題目，若清空的話會有成就感](https://i.imgur.com/VtZ33f3.png) -->

<p>從巨觀角度看完遠端助教兩個月來做的事情後，接下來從微觀角度去看遠端助教一日內要做些什麼事情吧。馬上進入與木曜打對台的六角學院遠端助教之 一 日 系 列 ~（並沒有這個東西）（還是六角可以請泱泱來做這個企劃 XD）（大誤）</p>
<p>六角開出的一天時數是兩個小時，所以助教們就是在這兩個小時內盡量回覆學員們提出的問題。我的時段是平日的早上九點至十一點，負責的則有 HTML(CSS)、RWD、jQuery 以及 Bootstrap4 課程。</p>
<p>通常我這兩個小時的工作流程會長這樣：</p>
<ul>
<li><strong>0830-0900</strong>：吃早餐、看昨天以前在 Slack 上的訊息、掃過 Udemy 助教界面未回覆的問題，偷想問題切入點</li>
<li><strong>0900-1050</strong>：到 Slack 上報到、優先回覆接近一天的問題、依序回覆較早之前的提問、將擬答放上 Slack 給助教長審核或尋求協助、在 Udemy 上回覆學員問題</li>
<li><strong>1050-1100</strong>：緩衝時間。若在尚須給助教長的審核階段，這段時間我通常就不另外打開新問題來回覆，留時間給助教長審核未通過的二次修改；若在自行回覆階段，我就會把時間塞滿</li>
<li><strong>1100-1130</strong>：在 GoogleSheet 上填寫今日時數與回覆，在 Slack 上簽退，以及附上接近一天還沒回覆的問題。最後偷瞄 JS 助教有沒有接到什麼有趣的題目</li>
</ul>
<p>我在當遠端助教的初期時，喜歡回覆那些提問精準、容易回答的題目，因為會讓今天回覆的題數變多，會有成就感（然而薪水不會因為回覆題數變多而變多 XD）。但到了中後期，我卻反而喜歡那種提問不精準、難度偏高的題目。</p>
<p>我覺得在回覆解題時，就像是在玩益智遊戲：當線索越少、難度越高，但卻能憑自己的努力破關時，成就感會很高，經驗值也會變多。若我能順利地拆解不精確的提問、找到難度偏高提問的解法，就會滿有成就感的，也會覺得有因克服了弱點而成長的 fu。</p>
<p>因此在擔任遠端助教的中後期，我都保持著靠刷怪(題)以獲取經驗值的愉悅心情在回覆學員題目 XD。不過如果能把題目清空的話，也會滿開心的就是了。</p>
<h2 id="有趣-崩潰的事"><a href="#有趣-崩潰的事" class="headerlink" title="有趣/崩潰的事"></a>有趣/崩潰的事</h2><p>談了很多比較正經的東西，來談點有趣的事情好了。有天我在回答學員問題的時候呢，竟然發現一個很大的 bug 呢…（物理）。你不除 bug，bug 就會來找你（抖）</p>
<p><img src="https://imgur.com/LdHWO79.png" alt="有 bug 示意圖"></p>
<h2 id="數據分析"><a href="#數據分析" class="headerlink" title="數據分析"></a>數據分析</h2><p>身為一個心理人，順手做些數據統計也是很合理的（從口袋掉出統計課本）。統計數字都是用 GoogleSheet 語法自動生成的，而計算答題時間時所需的每題開始與結束時間，則是透過 AutoHotkey 的熱鍵手動添加當下時間到 GoogleSheet 中。</p>
<!-- ![統計圖表：記錄遠端助教期間的答題數據的描述統計](https://i.imgur.com/BPsP9xn.png) -->
<p><img src="https://i.imgur.com/b2vSajc.png" alt="統計圖表：記錄遠端助教期間的答題數據的描述統計"></p>
<ul>
<li><strong>整體數據部份</strong>：在 43 天中，我總共回答學員了 262 題。其中 HTML(CSS) 課程回答了 114 題，佔了四成左右；RWD、jQuery、Bootstrap4 課程則各佔兩成左右。全部回答學員的字數加起來總共有十萬零一千五百多字。嗯，都可以出一本書了呢（眼神死）。</li>
<li><strong>平均數據部份</strong>：在每日兩小時中，我平均可以回答 6 題左右，而每日回答 6 題以上也是我每日的目標。而我平均每題會花 20 分鐘、以及使用 390 字左右的篇幅去思考與回答。</li>
<li><strong>特別數據部份</strong>：這部份是看極端值。答題較久的題目總共有 96 題，佔我整體回答題數的四成左右，這些題目平均花了 35 分鐘。其中，回答最久的題目花了三個小時左右。</li>
</ul>
<p>那個回答了三個小時的題目是有個學員在問，為什麼 Bootstrap4 的 dropdown 元件，它下拉選單中的連結點擊後，沒辦法跳到網頁中指定的錨點。由於這題需要的 Bootstrap4 與 jQuery 概念剛好是我比較薄弱的部份，再加上因為工作時間結束後還沒解完，剛好卡到中午午餐時間，助教長要等下午才有空幫我審核，所以答題時間就被拉很長。</p>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>來做個小結吧。其實我一開始想的，除了是把學費賺回來之外，也是想多磨一下我還不熟的 jQuery 與 Bootstrap4。但後來發現，我在擔任遠端助教期間，比我最初想像的還多獲得很多東西。以下列出一些我覺得有得到的東西：</p>
<ul>
<li><strong>jQuery、Bootstrap4 的除錯經驗</strong>。這兩個 library 是我原先較不熟，想趁擔任助教時間趁機加強的部份。在這期間我重看了 BS4 官網文件一遍，也更熟悉元件的使用，以及 SCSS 環境的配置；jQuery 則是多會了幾個套件的使用，以及熟悉語法。</li>
<li><strong>HTML、CSS 的底層概念</strong>。像是更瞭解清除(閉合)浮動的概念、Margin collapse 發生的時機與避免、絕對定位的 containing box 觀念等等。因此有時候會到 MDN、StackOverflow、W3C 等權威網站去找較深入專業的解釋。</li>
<li><strong>如何拆解學員的問題</strong>。怪醫豪斯曾說：「everybody lies」，愛因斯坦也曾說：「<a href="https://www.plurk.com/p/l4sau1">不要相信胡適的話</a>」。舉這兩個例子只是想說，一開始不用完全順著發問學員的問題邏輯走，而是要站在更高的角度俯瞰，去瞭解他們為什麼會提出這個問題，以及他們問題背後實際的需求是什麼。襖對了，除錯的時候，我喜歡用類似 A/B test 的觀念（註解掉可疑的語法片段，看 bug 是否能被消滅或被重現）</li>
<li><strong>如何爬疏陌生的觀念</strong>。Google 關鍵字搜尋其實跟集合的交集聯集滿有關係的。當我用越精準的關鍵字組合去搜尋時，就有越高的機率在茫茫連結海中找到有用的文章。六角 Youtube 上有<a href="https://www.youtube.com/watch?v=DBjRl7IXNiQ">相關的介紹影片</a>。</li>
<li><strong>如何鋪陳問題的回覆</strong>。該如何回覆一個問題，讓發問者比較好吸收呢？我認為可以從兩個例子著手：在產品開發的領域中常用到 <a href="https://youtu.be/BHR9fRXAsjI?t=510">User Story</a>，它的結構是「誰」「做了什麼事情」「因為什麼原因」；在<a href="https://www.facebook.com/watch/?v=426615371269235">電影劇本的套路中</a>，結構則常用到「主角」遇到「導火線」而展開「情節」最後達成「目標」。因此，我除了直接說解法（情節）外，也會試圖為發問者（主角）提供根本需求或是 bug 發生原因（導火線），以及說出做完之後的效果是什麼，所以希望發問者可以動手嘗試這個解法以達成效果（目標）。</li>
<li><strong>如何引導別人的思考</strong>。這部份是在三天交接期的體悟。先前是助教長審核我的擬答，我再拿擬答去回覆學員問題；如今變成我們上任助教審核新任助教的擬答，再讓他們去回覆。我覺得這部份，難免會帶著自己的觀點去檢視新任助教的擬答，有時會懷疑自己的某些建議是否多餘，因此這點我還需要多些拿捏。但可加強的是，為新任助教提供更多線索，讓我們 on the same page，期許他能夠透過這些線索，找出適合自己的回答內容。</li>
</ul>
<p>另外，感謝 Slack 群內的 <a href="https://www.facebook.com/sfismy">廖洧杰</a> 與 <a href="https://www.facebook.com/chihcheng.wang.3">王志誠</a> 老師，以及 Jackson 和葉子助教長，時常給予答題的建議。也謝謝同屆的 youting、黃英鳴與 yoku 助教，看到我們一起為了答題而苦惱，就覺得自己不孤單（？）。最後也期許下屆的切版助教 Stacey Wang 和 Yiting 接棒順利囉 ~（也感謝匯薪水的工作人員。在 Slack 群中，我覺得你是最重要也最需要感謝的人之一了 XD）</p>
<p>最後，特別感謝六角錄取我擔任遠端助教，讓我找到在部落格做記錄的強烈動機；也感謝 <a href="https://www.facebook.com/HsiangFeng.hf">Ray</a> 的 <a href="https://hsiangfeng.github.io/categories/hexo/">Hexo 系列文</a>，讓我下定決心砍掉上一版的部落格，並能夠順利快速地建立這一版的部落格，大大提高我重啟部落格的意願 XD</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>HexSchool</tag>
      </tags>
  </entry>
  <entry>
    <title>快速查詢開發文件的方式</title>
    <url>/2019/08/lookup-document-quickly/</url>
    <content><![CDATA[<p>通常在開發時，手邊都會有字典(x)都會有紙本或是網路的開發文件，方便在腦袋缺一根筋時查詢。一般來說，都會用 Google 搜尋關鍵字找教學文章，或是到官網找開發文件。以下整理一些可能會更方便的方式。</p>
<span id="more"></span>

<h2 id="本機端的開發文件資料庫"><a href="#本機端的開發文件資料庫" class="headerlink" title="本機端的開發文件資料庫"></a>本機端的開發文件資料庫</h2><p>Apple 陣營可參考 dash 軟體，Windows 可參考 Zeal</p>
<ul>
<li><a href="https://kapeli.com/dash">Dash for macOS - API Documentation Browser, Snippet Manager - Kapeli</a></li>
<li><a href="https://zealdocs.org/">Zeal - Offline Documentation Browser</a></li>
</ul>
<h2 id="網路版的開發文件資料庫"><a href="#網路版的開發文件資料庫" class="headerlink" title="網路版的開發文件資料庫"></a>網路版的開發文件資料庫</h2><p>推薦 DevDocs，好像是 FreeCodeCamp 開發的。</p>
<ul>
<li><a href="https://devdocs.io/">DevDocs API Documentation</a></li>
</ul>
<h2 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h2><ul>
<li><a href="https://www.zhihu.com/question/22103329">Windows 7 下，有没有类似于 Dash 的软件？ - 知乎</a></li>
<li><a href="https://blog.longwin.com.tw/2014/01/devdocs-collect-web-develop-document-2014/">DevDocs 將網頁開發各種工具的文件做整合查詢介面 | Tsung’s Blog</a></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>devDoc</tag>
        <tag>開發文件</tag>
      </tags>
  </entry>
  <entry>
    <title>將 map、filter、reduce 的運作結果用 emoji 表示</title>
    <url>/2019/08/visualize-map-filter-ruduce-in-javascript-with-emoji/</url>
    <content><![CDATA[<p>忘記在爬什麼文的時候，發現一張來自 <a href="https://www.facebook.com/photo.php?fbid=2207033829313801&set=a.227844993899371&type=3&theater">五倍紅寶石的 Elixir installation party 的簡報照片</a>，上面用了各種 Emoji、以及食材料理前與料理後的譬喻，來說明陣列方法：map、filter、reduce 該怎麼理解。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 簡報上的程式碼</span></span><br><span class="line"><span class="built_in">map</span>([<span class="string">&#x27;🐮&#x27;</span>, <span class="string">&#x27;🥔&#x27;</span>, <span class="string">&#x27;🐔&#x27;</span>, <span class="string">&#x27;🌽&#x27;</span>], cook) <span class="comment"># =&gt; [&quot;🍔&quot;, &quot;🍟&quot;, &quot;🍗&quot;, &quot;🍿&quot;]</span></span><br><span class="line"><span class="built_in">filter</span>([<span class="string">&#x27;🍔&#x27;</span>, <span class="string">&#x27;🍟&#x27;</span>, <span class="string">&#x27;🍗&#x27;</span>, <span class="string">&#x27;🍿&#x27;</span>], isVegetarian) <span class="comment"># =&gt; [&quot;🥔&quot;, &quot;🌽&quot;]</span></span><br><span class="line">reduce([<span class="string">&#x27;🍔&#x27;</span>, <span class="string">&#x27;🍟&#x27;</span>, <span class="string">&#x27;🍗&#x27;</span>, <span class="string">&#x27;🍿&#x27;</span>], eat) <span class="comment"># =&gt; &quot;💩&quot;</span></span><br></pre></td></tr></table></figure>

<p>因為覺得滿有趣的，所以決定改寫成 JavaScript 的版本玩看看 XD</p>
<span id="more"></span>

<h2 id="食材間的對應關係與資料設定"><a href="#食材間的對應關係與資料設定" class="headerlink" title="食材間的對應關係與資料設定"></a>食材間的對應關係與資料設定</h2><p>在照片中，有用到了九種 Emoji。其中四種是料理前的食材：🐮🥔🐔🌽，四種是料理後的…料理：🍔🍟🍗🍿，剩下一種是消化後的大便 💩。</p>
<p>此外，由於後續會需要判別哪些食物是給素食者吃的，所以也需要對食物貼上是否是素食的標籤。像🍟🍿這兩個食物就需要貼上。以下是我部份的食物資料設定：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> foodData = &#123;</span><br><span class="line">  <span class="string">&#x27;🐮&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;cow&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🐮&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;🍔&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🥔&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;potato&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🥔&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;🍟&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">  ,</span><br><span class="line">  <span class="string">&#x27;🍔&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;hamburger&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🍔&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🍟&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;fries&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🍟&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用 Emoji 來當物件的 key 還滿新鮮的 XD</p>
<h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>在 EcmaScript 5.1 中，Array.prototype 已經有內建 map、filter、reduce 方法了，所以可以直接拿來用。</p>
<p>而使用 <a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/map">map</a> 的目的則是：經過烹煮後，<code>[&#39;🐮&#39;, &#39;🥔&#39;, &#39;🐔&#39;, &#39;🌽&#39;]</code> 這四個食材，就會變成 <code>[&quot;🍔&quot;, &quot;🍟&quot;, &quot;🍗&quot;, &quot;🍿&quot;]</code> 惹。yummy</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// map</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cook</span>(<span class="params">item, index, array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> foodData[item].after</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="string">&#x27;🐮&#x27;</span>, <span class="string">&#x27;🥔&#x27;</span>, <span class="string">&#x27;🐔&#x27;</span>, <span class="string">&#x27;🌽&#x27;</span>].map(cook) <span class="comment">// =&gt; [&quot;🍔&quot;, &quot;🍟&quot;, &quot;🍗&quot;, &quot;🍿&quot;]</span></span><br></pre></td></tr></table></figure>

<h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>使用 <a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">filter</a>，就可以將素食的料理挑出來，其他不是素食的料理就當作沒看見。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// filter</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isVegetarian</span>(<span class="params">item, index, array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> foodData[item].vegetable</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="string">&#x27;🍔&#x27;</span>, <span class="string">&#x27;🍟&#x27;</span>, <span class="string">&#x27;🍗&#x27;</span>, <span class="string">&#x27;🍿&#x27;</span>].filter(isVegetarian) <span class="comment">// =&gt; [&quot;🥔&quot;, &quot;🌽&quot;]</span></span><br></pre></td></tr></table></figure>


<h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>經過 <a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">reduce</a> 的消化作用後，吃下去的料理就會變成 💩 惹</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// reduce</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params">item, index, array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;💩&#x27;</span>   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="string">&#x27;🍔&#x27;</span>, <span class="string">&#x27;🍟&#x27;</span>, <span class="string">&#x27;🍗&#x27;</span>, <span class="string">&#x27;🍿&#x27;</span>].reduce(eat) <span class="comment">// =&gt; &quot;💩&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>以下是完整程式碼</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 用 Emoji 表示 map、filter、reduce 的概念</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> foodData = &#123;</span><br><span class="line">  <span class="string">&#x27;🐮&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;cow&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🐮&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;🍔&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🥔&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;potato&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🥔&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;🍟&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🐔&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;chicken&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🐔&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;🍗&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🌽&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;corn&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🌽&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;🍿&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🍔&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;hamburger&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🍔&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🍟&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;fries&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🍟&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🍗&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;drumstick&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🍗&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;🍿&#x27;</span>: &#123;</span><br><span class="line">    name: <span class="string">&#x27;popcorn&#x27;</span>,</span><br><span class="line">    before: <span class="string">&#x27;🍿&#x27;</span>,</span><br><span class="line">    after: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    vegetable: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">　</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cook</span>(<span class="params">item, index, array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> foodData[item].after</span><br><span class="line">&#125;</span><br><span class="line">[<span class="string">&#x27;🐮&#x27;</span>, <span class="string">&#x27;🥔&#x27;</span>, <span class="string">&#x27;🐔&#x27;</span>, <span class="string">&#x27;🌽&#x27;</span>].map(cook) <span class="comment">// =&gt; [&quot;🍔&quot;, &quot;🍟&quot;, &quot;🍗&quot;, &quot;🍿&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isVegetarian</span>(<span class="params">item, index, array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> foodData[item].vegetable</span><br><span class="line">&#125;</span><br><span class="line">[<span class="string">&#x27;🍔&#x27;</span>, <span class="string">&#x27;🍟&#x27;</span>, <span class="string">&#x27;🍗&#x27;</span>, <span class="string">&#x27;🍿&#x27;</span>].filter(isVegetarian) <span class="comment">// =&gt; [&quot;🥔&quot;, &quot;🌽&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params">item, index, array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;💩&#x27;</span> </span><br><span class="line">&#125;</span><br><span class="line">[<span class="string">&#x27;🍔&#x27;</span>, <span class="string">&#x27;🍟&#x27;</span>, <span class="string">&#x27;🍗&#x27;</span>, <span class="string">&#x27;🍿&#x27;</span>].reduce(eat) <span class="comment">// =&gt; &quot;💩&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>EcmaScript</tag>
        <tag>ES5</tag>
      </tags>
  </entry>
  <entry>
    <title>六角三週年同學會參與心得</title>
    <url>/2019/09/hexschool-homecoming-three-years-2019/</url>
    <content><![CDATA[<p>今天到台北參加了<a href="https://hexschool.kktix.cc/events/16581437-copy-1">六角的三週年同學會</a>。想說也滿久沒寫 blog 了，就來寫個心得吧。以下依照活動議程順序記錄</p>
<span id="more"></span>

<h2 id="六角學院發展介紹"><a href="#六角學院發展介紹" class="headerlink" title="六角學院發展介紹"></a>六角學院發展介紹</h2><p>活動從 14:00 開始。在 14:00~14:40 間，是洧杰老師在介紹六角目前的現況（學生人數、課程總觀看時數等等）、目前六角有提供的服務，以及六角的年度策略。</p>
<p>六角的年度策略如下：</p>
<ul>
<li>16 線上帶你學到會</li>
<li>17 加速前端知識普及</li>
<li>18 加速就業</li>
<li>19 加職涯發展，從菜鳥到資深<ul>
<li>由前端切入軟體工程（大神來六角）。讓學員建立與講者間的弱連結，以及讓學員能快速轉換到想學習的語言、工具</li>
</ul>
</li>
<li>20 加速為學員找到舞台<ul>
<li>有些學員想到更好的環境，但不曉得該如何過濾公司、也不曉得自己未來能精進什麼技術</li>
<li>對內，建立六角社群情報平台。預計分享面試資訊、面試心得牆（有點類似天眼通）。但比較不是評論公司好壞，而是分享被問了哪些題目。預計匿名留言、發文。</li>
<li>對外，讓廠商主動觸及，目前有六角人才牆。之後會有前端外包需求計畫</li>
<li>六角希望將學員與六角的資源串連起來。因為十年、二十年、三十年後，技術會被取代，但懂得進步的人才則不會被取代。</li>
</ul>
</li>
</ul>
<p>現在六角預計有 1000 個弱連結的公司。明年目標能有 5000 間公司。</p>
<p>有些學員問，能幫六角做些什麼？洧傑說，學員只要負責變強，其他讓六角來就好。</p>
<h2 id="學長姊經驗談"><a href="#學長姊經驗談" class="headerlink" title="學長姊經驗談"></a>學長姊經驗談</h2><p>14:50~15:30 是表訂的學長姊分享時間，有五位在職場的學長姊來分享，分別是引擎、Greene、士堯（Simon）、世恩、與 Chelsea。以下是他們的轉職成功分享文：</p>
<ul>
<li><a href="https://www.hexschool.com/2017/12/20/2017-12-20-interview/">兩個月保險業務轉職前端，分享如何 “學習” – 引擎 | 六角學院</a></li>
<li><a href="https://www.hexschool.com/2018/06/16/2018-06-16-interview/">只要想著半年後的樣子，這樣的喜悅就能擊敗學習的孤獨感 - Greene | 六角學院</a></li>
<li><a href="https://www.hexschool.com/2018/06/15/2018-06-15-interview/">專精一職，涉略所有，才能有無限可能 - Simon | 六角學院</a></li>
<li><a href="https://www.hexschool.com/2019/08/15/2019-08-15-interview/">興趣就是即便精力耗盡，還是要做！- 世恩 | 六角學院</a></li>
<li><a href="https://www.hexschool.com/2018/01/04/2018-12-04-interview/">年紀的追趕下，擁有專業技能，才能踏實完成每一步 – Chelsea | 六角學院</a></li>
</ul>
<p>以下是洧傑老師提問，他們回答的記錄：</p>
<p>轉職花了多少時間</p>
<ul>
<li>花了一年，17年六月左右開始。前面有先上過一、兩個月實體課程，前面先兼職，後面全職學習</li>
<li>也是一年學習，先兼職，後全職學習</li>
<li>半年時間全職學習。家人會覺得你怎麼都在電腦前面、不去上班。要懂得跟家裡溝通。學習時貪婪吸收資源，以求成長</li>
<li>創業失敗後決定 B 計畫學習前端。三個半月全職學習</li>
<li>兩個半月學習，之前在電容廠當流水線工人。不過現代門檻高，半年到一年之間學習時間感覺比較合理</li>
</ul>
<p>面試經驗</p>
<ul>
<li>兩年多來的過來經驗，求職時要判斷公司是否符合需求。三個重點：1)問工程師結構、2)他們如何解決問題的流程、3)會不會加班(個人在意)</li>
<li> 這職位怎麼開出來的，判斷公司潛力</li>
<li>曾在2018時PTT發求職心得文。求職時要判斷公司是否符合需求，是不是在找人才。準備面試，可以參考題庫、技術能力邏輯也是必要的</li>
<li>技術是基本條件。此外，前端工程師需要跟人工作，因此個性與團隊是否符合很重要。學長曾當過面試官，曾刷掉技術符合，但個性不符的求職者</li>
<li>六角辦的 the F2E 活動很適合當作品集。因為有些工作經驗的成果沒辦法當作品，如博弈產業</li>
</ul>
<p>何時找下間公司，為什麼</p>
<ul>
<li>覺得第一份工作要求不高，就會開始考慮。第一份工作可以先體會工作的流程模式，之後再想這份工作隊自己未來的發展性</li>
<li>找工作時給自己階段任務。等到這份工作完成心中的目標後，就可以考慮挑戰更難地方</li>
<li>先前求職不太順利。第一份台中博弈公司，進去沒多久就虧損收掉。第二間台北三線電商，面試的經理沒多久跑了，工程師也有辭職槽，大概一個多禮拜就辭職了。之後才進入現在的電商公司 </li>
<li>先前在老牌旅遊業四個月，後來參加社群活動被招募到其他公司，卻因遇到公司角力被拆 team 而被辭退。後來到一個能讓自己規劃產品的公司</li>
<li>幫大家總結想找下間的原因：1)因為受委屈、錢拿不夠、2)團隊氣氛、在乎團隊是否能帶來成長。自己經驗，第一間旅遊業技術較落後，因無法提供更多養分就考慮換下間公司</li>
<li>總結，遇到技術天花板，就被決定了薪資。因為公司覺得目前這樣就夠了，不會放更多資源、力氣在這個部門上</li>
</ul>
<p>部門溝通</p>
<ul>
<li>像前端會跟 PM、SA 系統分析師、UI 溝通。UI 會設計圖，前端要刻出來。SA 會開工單</li>
<li>這位學長目前是遠距工作。認為有些溝通好用的工具：trello（看板工具）、jira（專案管理軟體）、github（程式碼版本管理平台） </li>
<li>目前在中和的大電商。工具有 redmine（專案管理工具），SA 會發工單、給任務單號。git 版本控管也是一定要的。在大公司學制度、小公司則都學。志誠老師先前也有介紹過他的職涯分享，也有提到這句話</li>
<li>自己在後端 20 幾個的公司，但前端只有 1 個（學長本人）。SA 會開工單給他。溝通用一個微軟的老工具（沒聽清楚）。 </li>
<li>平常會跟設計UXUI、其他開發、產品規劃者、HR 溝通。順帶題一個 slack 的雷，就是在群組中跟其他成員的私密留言，主管也會看得到，請小心</li>
</ul>
<p>如何培養程式邏輯概念，像是 if、for。過程為何</p>
<ul>
<li>試著做完作品集，能讓你看到更高的視野</li>
<li>自己是視覺導向。先刻板再篩，拆出重複邏輯</li>
<li>看別人教學。JS，懂底層邏輯</li>
<li>自己是數位媒體相關。初期ok，但JS苦手。一開始保哥課程聽不懂但有筆記，用筆記勾勒記憶；趁IT鐵人賽練習 JS 觀念。後來第二次聽保哥課程就比較懂</li>
<li>有練習精神時光屋，不懂得看 MDN。像第二關旅遊網，就學到篩資料，如何使用 array。內容作筆記，完成了像是按按鍵下載檔案，或是上傳影片等功能，如何原生方法或框架來完成</li>
<li>多看漫畫、上美術館。練習想像譬喻，像工程師溝通時，很常說這函式吃了什麼參數，吐出什麼值出去。OOP 的觀念也是如此。工程師要了解程式函數的行為，用說的或想像</li>
</ul>
<p>低潮，如何克服，心境</p>
<ul>
<li>曾經產品努力一年，最後沒上線。因為沒通過公司審核，公司覺得不符需求，所以不再投資源進去。之後決定把心思放在如何突破、讓自己成長</li>
<li>曾經因為公司上層角力，而被解散team。當時會有想法是不是因為自己不夠格，沒能力。後來拿筆記本列出每天想做的事請，每天兩個面試，兩個小時學習。如果說高潮的話，就是最近當主管組織團隊。不過不喜歡行政管理工作，比較喜歡寫程式</li>
<li>曾經負責過結帳表單驗證，功能完成後本來要去小組的公司聚餐，但卻臨時接到 hotfix 要求。似乎是該產業的表單有時會出現特殊字元，導致表單出現問題；所以要先事前篩掉這些特殊字元。因此覺得之後應該要先瞭解該產業是否有特殊的需求</li>
<li>曾經找工作時，上一份工作裸退，導致有一個多月空窗，覺得沒有人要你。只能多面試多學</li>
<li>曾經第一天專案是完全不會的框架，但當初面試時說可以用自己喜歡的技術。入職後，專案由 pd(pm?)主導，決議用 react 當團隊需要的技術。因此 react 只能利用私人時間另外學 </li>
</ul>
<p>建議 要入職</p>
<ul>
<li>不要輕易放棄。將學習想成戀愛伴侶，關係是正相關成長。雖然久了會遺忘，但定期關懷它狀況就會變好</li>
<li>工程師要為人服務。要去思考人性，要想到設計師、後端想不到的東西，以及留意使用者需要、適合的東西</li>
<li>要自己安排事情、學習的時程。瞭解自己在社群的定位、以及目標</li>
<li>去年參與讀書會社群後，有組了會讀書會。大家陪伴一年多幫助很大。要像個修道士排時間</li>
<li>有個走在前面的人(前一個分享的學長)當目標，看他學了新東西，自己壓力大就會逼著自己也學。要維持熱情，累了就休息後繼續</li>
</ul>
<h2 id="老師學員聊天時間"><a href="#老師學員聊天時間" class="headerlink" title="老師學員聊天時間"></a>老師學員聊天時間</h2><p>15:50~16:50 是表訂的聊天時間。一開始洧傑有先依序介紹在場有哪些六角的工作人員，像是</p>
<ul>
<li>廖洧傑老師(前端工程師，SASS)</li>
<li>王志誠老師(前端工程師，BS，Vue)</li>
<li>葉子(前端工程師)</li>
<li>俊儀(設計師)</li>
<li>Ray(前端工程師)</li>
<li>宇軒(前端工程師。目前非六角工作人員，但曾當過六角的遠端助教)</li>
</ul>
<p>之後也依序介紹了一些志工、助教。不過介紹到一半時我就突然被洧傑老師 cue 到了（驚），因為我今天年中有擔任過六角的遠端切版助教。诶不是，太突然惹吧 XD</p>
<p>後來的聊天團中，我跑去 Ray 的那團。因為現場有點吵雜，其實沒辦法很完整的聽到整個討論。印象記得的討論有</p>
<p><strong>如何跟社群大神建立關係</strong>。可以不恥在社群上留言互動、不恥加好友、不恥寫部落格給該大神看。Ray 說他曾去玩 Huli 寫的後端解謎遊戲，寫成部落格文，然後請 Huli 給意見。</p>
<p><strong>學習課程卡關時怎麼辦</strong>。以 Ray 自己 Vue 電商作業為例，他以 RO 遊戲為主題，本來有想過 Canvas 方案，但後來卡關很久，所以決定尋找其他方案，把功能拆細。如果一直卡關，可以考慮先休息一陣子再繼續。如果是比較基礎的部份卡關，那可能就是不理解，要再複習課程。</p>
<p>**六角的人才牆提供的服務細節是什麼(我問的)**。主要的協助是履歷審核，其中最重要的是看作品集。作品集有幾個要點，是版面整齊、不要破版、要有功能。能的話，不要直接用六角的作業像是六角西餐廳、甜點電商，面試官會覺得怎麼又來了。如果能自己製作主題是最好（像是 Ray 的電商作業以 RO 遊戲當主題），能讓面試官感受到熱情。但畢竟前端工程師不見得對設計在行，那至少畫面有整齊、不要破版、要有功能。</p>
<h2 id="前端遊戲-誰是前端王"><a href="#前端遊戲-誰是前端王" class="headerlink" title="前端遊戲 - 誰是前端王"></a>前端遊戲 - 誰是前端王</h2><p>17:00-17:30 是表訂的 <del>團康</del> 遊戲時間。在前方螢幕會出現很多道題目，然後台下的學員要用肉體移動到會場的左邊或右邊，來代表自己選擇哪個答案。如果猜錯了就會被淘汰；留到最後的就有獎品。</p>
<p>我這次好像撐到倒數三題吧，腦袋就開始昏昏的，連題目是什麼都忘記了 XD</p>
<h2 id="歡樂結束"><a href="#歡樂結束" class="headerlink" title="歡樂結束"></a>歡樂結束</h2><p>17:30~18:00 是表訂的結束時間，可以去找六角的工作人員做私底下的聊天。</p>
<p>我一開始跑去跟葉子認親了 XD。葉子是我在擔任六角遠端助教期間時，六角配給的助教長。當時每天都有兩個小時的時間在回答同學的問題，當我擬答完後，就會給葉子助教長做審核；如果擬答不夠完整的話，葉子就會再給進一步的建議讓我去做修改；如果 OK 的話，就會在底下按個贊，然後我就能在 Udemy 上回覆同學問題了。總之，就跟葉子拍了幾張照，代表有認到親了 XD</p>
<p>除了葉子外，我還有跑去找 Ray 和宇軒合照。想合照是因為 <del>我都看他們的部落格技術文長大的</del> 因為當時遠端助教的原因，有被加入六角的 Slack 群組，就有看到他們也在裡面。然後看久了就覺得很親切（？？），覺得他們很厲害，怎麼有辦法高質量地產出這麼多技術文。而且今天也是第一次見到本人，想說留影做個紀念 XD</p>
<p>後來有跟宇軒再小聊了一下，宇軒有提到自己目前工作的近況、專案管理時要接 issue 開 ticket 等狀況。最後還發現我們有共同認識的朋友 XD</p>
<p>最後還有跟俊儀請教了一下。因為我六角 Vue 電商課程要開始做自己的作品了，就詢問了一下網頁發想流程的細節，就是使用者故事 → 功能地圖 → 流程圖 → 頁面流程(網站地圖) → 線框稿 → 視覺稿 → 原型的這個過程。主要問的點有</p>
<p>Q:如果我功能地圖、網站地圖還沒有想的很完善，可以先畫線框稿嗎？<br>A:還是先把前面的東西完成比較好，才能確認整體的布局、以及元件有無遺漏</p>
<p>Q:如果用 Adobe XD 做線框圖，需要先連接 Artboard 之間的連接線嗎<br>A:那比較是 Prototype 的部份。線框圖階段的話先不用做這件事情，瞭解整體布局與確認元件位置</p>
<p>Q:六角有提供 Adobe XD 的 BS ui-kit，線框圖階段需要理解這個東西嗎<br>A:那比較是視覺稿的部份。線框圖階段還不用理它，等到視覺稿階段，若之後前端想引入 BS 的話，那視覺稿就可以用 BS ui-kit</p>
<p>Q:目前六角的 Adobe XD 比較偏向操作教學。如果想完整學設計的流程，有沒有推薦的資源；如果靠 Google 學的話適合嗎<br>A:不太建議純靠 Google 學。因為東西太零碎，很多文章是給已經有設計概念的人看，讓他們在某個細領域上能更上一層樓。如果完全沒設計概念的人看這些零散文章的話，會沒有系統的觀念。目前網路上似乎還沒有很完整的課程，實體課程可能比較完整。自己推薦 uxabc，有我的同學。</p>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>雖然前一天一直很猶豫要不要報名，因為從桃園通勤到台北有點久，還有一堆自己找的理由像是會下雨、會好累、會花錢、<del>我很懶</del>。但活動結束後，還是滿慶幸自己有來參加，覺得還是聽到滿多東西的。</p>
<h2 id="在六角學員撈到的其他人的心得"><a href="#在六角學員撈到的其他人的心得" class="headerlink" title="在六角學員撈到的其他人的心得"></a>在六角學員撈到的其他人的心得</h2><ul>
<li><a href="https://hsiangfeng.github.io/learnexp/20190930/236119363/">被車輪戰的六角同學會 | Welcome.Web.World</a></li>
<li><a href="https://medium.com/%E9%A6%AC%E6%A0%BC%E8%95%BE%E7%89%B9%E7%9A%84%E5%86%92%E9%9A%AA%E8%80%85%E6%97%A5%E8%AA%8C/%E7%B7%9A%E4%B8%8B%E8%81%9A%E6%9C%83%E5%88%9D%E9%AB%94%E9%A9%97-%E5%85%AD%E8%A7%92%E5%AD%B8%E9%99%A2%E4%B8%89%E9%80%B1%E5%B9%B4%E5%90%8C%E5%AD%B8%E6%9C%83-e0e607c34e47">線下聚會初體驗：六角學院三週年同學會 - 馬格蕾特的前端勇者日誌 - Medium</a></li>
<li><a href="https://medium.com/@smallmoney1224/2019-9-29-hexschool-%E5%90%8C%E5%AD%B8%E6%9C%83%E4%B8%80%E6%97%A5%E9%81%8A-a125db1d2e14">2019/9/29 hexSchool 同學會一日遊 - wilson Chen - Medium</a></li>
<li><a href="https://medium.com/@hsuchihting/2019-%E5%85%AD%E8%A7%92%E5%AD%B8%E9%99%A2%E5%90%8C%E5%AD%B8%E6%9C%83-f83151e2b469">2019 六角學院同學會 - 許智庭 - Medium</a></li>
<li><a href="https://tzuhui.github.io/2019/10/01/Mine/hexschool-third-party/">隨著六角飄到三週年同學會的葉子漂流記 | 想飛的葉子</a></li>
<li><a href="https://medium.com/@zaichirao/%E5%85%AD%E8%A7%92%E4%B8%89%E9%80%B1%E5%B9%B4%E5%90%8C%E5%AD%B8%E6%9C%83%E6%B4%BB%E5%8B%95%E5%9C%93%E6%BB%BF%E6%88%90%E5%8A%9F-e50a1d2e69ec">六角三週年活動圓滿成功 - Zai Chi Rao - Medium</a></li>
</ul>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title>重新嘗試 win 底下的 SubLinux 環境</title>
    <url>/2019/11/windows-subsystem-for-linux/</url>
    <content><![CDATA[<p>因為今天是接案的暫時空閒日子，就把時間拿來研究之前沒搞得很懂的 Windows Sub Linux 惹。以下先列出自己的嘗試步驟</p>
<span id="more"></span>

<h2 id="一、移除舊的-legacy-版本"><a href="#一、移除舊的-legacy-版本" class="headerlink" title="一、移除舊的 legacy 版本"></a>一、移除舊的 legacy 版本</h2><p>好像去年還前年時，為了嚐鮮，有先用了 beta 版本 wsl，所以要先移除掉</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --unregister Legacy</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://docs.microsoft.com/zh-tw/windows/wsl/install-legacy">安裝或移除 Windows 10 年度更新版或建立者更新 | Microsoft Docs</a></li>
</ul>
<h2 id="二、安裝-ubuntu-18-版本"><a href="#二、安裝-ubuntu-18-版本" class="headerlink" title="二、安裝 ubuntu 18 版本"></a>二、安裝 ubuntu 18 版本</h2><ul>
<li><a href="https://blog.miniasp.com/post/2019/02/01/Useful-tool-WSL-Windows-Subsystem-for-Linux">介紹好用工具：WSL (Windows Subsystem for Linux) | The Will Will Web</a></li>
<li><a href="https://hackmd.io/@tf-z1zFMTIC8ADhxEcGJEA/BJByCIUHf">Windows Subsystem for Linux (WSL) 環境設定 - HackMD</a></li>
<li><a href="https://www.youtube.com/watch?v=av0UQy6g2FA">Windows Subsystem for Linux (WSL) Tutorial &amp; How To - YouTube</a></li>
<li><a href="https://www.youtube.com/watch?v=Cvrqmq9A3tA">Windows 10 Bash &amp; Linux Subsystem Setup - YouTube</a></li>
<li><a href="https://blogs.msdn.microsoft.com/microsoft_student_partners_in_taiwan/2017/10/03/wsltune/">【WSL】Windows Subsystem for Linux 安裝及基本配置！ – 台灣微軟學生大使</a></li>
</ul>
<h2 id="三、更新-apt"><a href="#三、更新-apt" class="headerlink" title="三、更新 apt"></a>三、更新 apt</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<p>本來安裝完 ubuntu 後，想直接安裝 nodejs，結果一直跳出錯誤訊息 <code>unable to locate package nodejs</code> orz。後來 google 後，有人說要先更新 apt 這個 linux 世界用來下載套件用的方便工具（對應到 win 世界，相當於 chocolatey）</p>
<ul>
<li><a href="https://superuser.com/questions/1359633/apt-get-install-is-not-working-in-wsl/1359995">ubuntu - apt-get install is not working in WSL - Super User</a></li>
<li><a href="https://askubuntu.com/questions/759678/bash-on-windows-10-doesnt-locate-any-package">apt - Bash (on Windows 10) doesn’t locate any package - Ask Ubuntu</a></li>
</ul>
<h2 id="四、安裝-nvm"><a href="#四、安裝-nvm" class="headerlink" title="四、安裝 nvm"></a>四、安裝 nvm</h2><p>本來想直接安裝 nodejs，後來想說沒用過 nodejs 版本切換工具，所以就跑去下載 nvm 惹。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash</span><br><span class="line"></span><br><span class="line">nvm install 12.13.1 <span class="comment">#目前 node 穩定版本</span></span><br><span class="line">nvm list <span class="comment">#列出已安裝版本</span></span><br><span class="line">nvm use 版本號 <span class="comment">#切換版本</span></span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://noob.tw/nvm/">nvm：快速安裝、切換不同版本的 Node.js</a></li>
<li><a href="https://oranwind.org/nvm-windows/">[Node.JS] 在 Windows 下使用 nvm 切換 Node 版本</a></li>
<li><a href="https://nodejs.org/en/">Node.js</a></li>
</ul>
<h2 id="在-Linux-跑-VSCode"><a href="#在-Linux-跑-VSCode" class="headerlink" title="在 Linux 跑 VSCode"></a>在 Linux 跑 VSCode</h2><p>無聊在 terminal 敲了 <code>code .</code> 指令，這在 cmd 中會直接呼叫出 VSCode，並以目前路徑開啟。沒想到，在 wsl 中敲 <code>code .</code>，竟然跳出提示 <code>Installing VS Code Server</code> @@。後來研究後，好像是在 wsl 開啟一個 sever，讓 server 跟 win 溝通資料，這樣就能使用到 win 中的 VSCode 了。真是黑科技 R</p>
<ul>
<li><a href="https://code.visualstudio.com/remote-tutorials/wsl/run-in-wsl">Run Visual Studio Code in Windows Subsystem for Linux</a></li>
</ul>
<h2 id="zsh-oh-my-zsh"><a href="#zsh-oh-my-zsh" class="headerlink" title="zsh, oh my zsh"></a>zsh, oh my zsh</h2><ul>
<li><a href="https://hackmd.io/@tf-z1zFMTIC8ADhxEcGJEA/BJByCIUHf">Windows Subsystem for Linux (WSL) 環境設定 - HackMD</a></li>
<li><a href="https://medium.com/hungys-blog/windows-subsystem-for-linux-configuration-caf2f47d0dfb">Windows Subsystem for Linux 環境配置 (最新 1709 版) - Hungys.blog() - Medium</a></li>
<li><a href="https://blog.gtwang.org/linux/linux-chsh-command-change-login-shell-tutorial/">Linux 查詢與更改登入 shell 設定，chsh 指令用法教學與範例 - G. T. Wang</a></li>
</ul>
<hr>
<h2 id="之後考慮研究"><a href="#之後考慮研究" class="headerlink" title="之後考慮研究"></a>之後考慮研究</h2><p>Linux 桌面系統，直接在 windows 玩 Ubuntu GUI 界面</p>
<ul>
<li><a href="http://rocksaying.tw/archives/2018/wsl-run-linux-desktop-software.html">Windows Subsystem for Linux (WSL) 使用 Linux 桌面軟體與中文字型 - 石頭閒語</a></li>
</ul>
<p>中文輸入</p>
<ul>
<li>目前無法輸入。issue 說已經修復好，但還沒在 window store 上架，可能要再等等吧</li>
<li><a href="https://github.com/microsoft/terminal/issues/2459">Version: 0.3.2171.0无法使用中文输入法 · Issue #2459 · microsoft/terminal</a></li>
</ul>
<p>查看其他語系的評論</p>
<ul>
<li>在網頁版查看</li>
<li><a href="https://www.microsoft.com/en-us/p/windows-terminal-preview/9n0dx20hk701?activetab=pivot:reviewstab">Get Windows Terminal (Preview) - Microsoft Store</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>wsl</tag>
      </tags>
  </entry>
  <entry>
    <title>IT邦幫忙鐵人賽第11屆頒獎典禮心得</title>
    <url>/2020/01/ithelp-ironman-2020-award/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/fKcDb94.jpg" alt="鐵人賽團體趙"></p>
<blockquote>
<p>圖取自 iT邦幫忙、社長的臉書貼文 <a href="https://www.facebook.com/ithelpfans/posts/1548734745299832">https://www.facebook.com/ithelpfans/posts/1548734745299832</a></p>
</blockquote>
<p>一直以來遇到程式問題時，常常會 google 到 IT邦幫忙的文章；到了今天我終於也參賽了。昨天是<a href="https://www.facebook.com/ithelpfans/posts/1548734745299832">頒獎典禮</a>，我憑著印象斷斷續續地記錄了一些東西。主要是<del>想記錄一些幹話</del> 想讓大家知道寫程式的人其實都滿幽默 der</p>
<span id="more"></span>

<h2 id="主持人小財神"><a href="#主持人小財神" class="headerlink" title="主持人小財神"></a>主持人小財神</h2><p>原來小財神是真人耶 (奇怪的關注點)。開場時大概介紹了三點：</p>
<ol>
<li>好像是感謝輔大醫資學程的負責人幫忙借到輔大國際等級展演空間的百鍊聽</li>
<li>感謝博碩文化幫忙出書</li>
<li>感謝一個個人贊助者</li>
</ol>
<p>然後主持人主持功力滿好的，時間掌握很好，也很幽默 XD</p>
<h2 id="Modern-Web-組"><a href="#Modern-Web-組" class="headerlink" title="Modern Web 組"></a>Modern Web 組</h2><p>因為 Modern Web 參賽者眾多，冠軍比起其他組別還多了一位，總共兩位。因此主持人小財神說，想得到冠軍的參賽者，知道要避開參賽哪個組別了吧 XD</p>
<p>Modern Web 第一個冠軍是 Amos，系列文主題是<a href="https://www.facebook.com/ithelpfans/posts/1522126774627296?__tn__=-R">《金魚都能懂的 CSS 選取器 - 金魚都能懂了你還怕學不會嗎》</a>。Amos 除了有拿到冠軍外，好像也有拿到影片組佳作(不確定)</p>
<p>因為 Amos 前幾年也有拿到冠軍過，主持人小財神表示對 Amos 當時的喊話「言猶在耳」：「我幹麻這麼自虐」、「下次不來了」。在這時候，觀眾們似乎也聽到了當時 Amos 的心聲，眾人們也都哄笑了起來，台上台下都充滿了快活的空氣呢！</p>
<p>…啊，原來是主控室真的把 Amos 前幾年講過的話播出來了啊。不是言猶在耳，是言根本在耳惹。</p>
<p>Modern Web 第二個冠軍是 黃俊鑫，系列文主題是<a href="https://www.facebook.com/ithelpfans/posts/1523130334526940?__tn__=-R">《讓 TypeScript 成為你全端開發的 ACE！》</a>。印象中，他說是第一次參賽，而且在參賽前對 TypeScript 不熟。猛猛的。</p>
<p>襖對了。冠軍在致詞結束前，會被主持人詢問有沒有帶親友來。於是 Amos 說：「我沒有帶親友來。我，沒有朋友。」於是台上台下又充滿了快活的空氣呢！</p>
<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><p>因為我是參賽 Modern Web 組，所以比較有興趣的 Modern Web 組頒獎完後，後面有幾個組別的頒獎過程我沒特別記錄 QQ，有趣的梗就不太記得了。後續只能憑粗略印象打出來</p>
<p>DevOps 組的冠軍是陳正瑋，系列文主題是<a href="https://www.facebook.com/ithelpfans/posts/1515697321936908?__tn__=-R">《和艦長一起 30 天玩轉 GitLab》</a>。</p>
<p>好像說因為當時壓力很大，所以就會想找些事情抒壓，於是就來參加鐵人賽了（嗯？？）。說要感謝老婆，讓他能專注在工作與寫作上。附上這位冠軍的心得貼文（<a href="https://www.facebook.com/photo.php?fbid=3023875110958634&set=a.573877662625070&type=3&theater">點這裡</a>)</p>
<blockquote>
<p>撿到評審的感言記錄：<a href="https://william-yeh.net/post/2019/12/2019-retrospective">https://william-yeh.net/post/2019/12/2019-retrospective</a></p>
</blockquote>
<h2 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h2><p>好像這個組的評審有講一個東西。他說，參賽文章的標題常會看到什麼星際大戰、或是什麼招式的名稱。他說他懂這種命名的心情，因為他也曾經中二過。不過如果想幫助到更多人、讓 SEO 效果更好，那還是建議把標題名稱設定更精確一點比較好。最後說，還好這次沒看到什麼特別呼吸的標題 XD。（註：動畫《鬼滅之刃》世界觀中的人們，能依靠特別的呼吸方式提昇心肺、肌肉能力。例如水之呼吸）</p>
<p>Security 組的冠軍是葛明淞(Gary)，系列文主題是<a href="https://www.facebook.com/ithelpfans/posts/1523160734523900?__tn__=-R">《麻瓜不敗!白魔法藍天煉金術》</a>。</p>
<p>印象中冠軍好像說，當時他們公司有用這個技術(Azure)，而繁體中文資源較少，想說趁這個機會整理出來。</p>
<h2 id="Software-development"><a href="#Software-development" class="headerlink" title="Software development"></a>Software development</h2><p>這組的評審好像提到，關於參加鐵人賽的兩點：</p>
<ol>
<li>評審本身有在面試人，看到開始有人會在履歷上寫參加過鐵人賽。一方面覺得鐵人賽的名聲有慢慢起來，一方面也會覺得，如果該求職者撐過了 30 天的連續發文，也能看出他是一個有毅力的人</li>
<li>希望各位可以繼續參加鐵人賽，或是分享出去讓更多人知道，或是推坑別人來參加</li>
</ol>
<blockquote>
<p>2020.01.06 更新 | 撿到評審的臉書貼文逐字稿，在此附上連結：<a href="https://www.facebook.com/yftzeng.tw/posts/10212690608579525">https://www.facebook.com/yftzeng.tw/posts/10212690608579525</a><br>2020.01.07 更新 | 評審上台發表的清單：<a href="https://www.facebook.com/yftzeng.tw/posts/10212690804824431">https://www.facebook.com/yftzeng.tw/posts/10212690804824431</a></p>
</blockquote>
<p>Software development 組的冠軍是林建億，系列文主題是<a href="https://www.facebook.com/ithelpfans/posts/1525224204317553?__tn__=-R">《30天之從 0 至 1 盡可能的建立一個好的系統 (性能基礎篇)》</a>。印象中第一次參加就優選，第二次參加冠軍、這次第三次參加也還是冠軍。</p>
<p>最後他提到：「如果是不會出人命的挑戰，大家都應該可以挑戰看看」。這讓我想到出人命有兩種形式的笑話：一種是少一條人命的，一種是多一條人命的 XD</p>
<h2 id="IoT"><a href="#IoT" class="headerlink" title="IoT"></a>IoT</h2><p>IoT 組的冠軍是曾英綺，系列文主題是<a href="https://www.facebook.com/ithelpfans/posts/1516714758501831?__tn__=-R">《IoT沒那麼難！新手用JavaScript入門做自己的玩具～》</a>。我自己是有在關注這個系列，一方面是我之前有旁聽過 Arduino 的課程（原版 Arduino 好貴 QQ），一方面是我對前端開發與 JavaScript 有興趣。而這系列把這兩點結合在一起惹，讓我更有興趣。</p>
<p>主持人介紹說，冠軍先前已參賽過三次了（好像都是 Modern Web 組），這次轉到 IoT 組後，就拿到冠軍了。完全呼應了「Modern Web 組人太多，想拿冠軍就轉組」的觀點 XD（眾人笑）</p>
<p>冠軍先前參加過資策會，曾經接受師父/師祖 Amos 的教導。這次得到冠軍後，提到很感謝 Amos 提到的各種諄諄教誨。最後提到很感謝師父，並說自己做到了。以及很感謝家裡的貓(？？)</p>
<p>附上 Amos 教膜拜圖連結: <a href="https://www.facebook.com/photo.php?fbid=10157905789627889&amp;set=a.10154335019512889&amp;type=3">https://www.facebook.com/photo.php?fbid=10157905789627889&amp;set=a.10154335019512889&amp;type=3</a></p>
<h2 id="Google-Developers-Machine-Learning"><a href="#Google-Developers-Machine-Learning" class="headerlink" title="Google Developers Machine Learning"></a>Google Developers Machine Learning</h2><p>這個組別的冠軍是 Jyun-Ting Chen (Dan)，系列文主題是<a href="https://www.facebook.com/ithelpfans/posts/1509905759182731">《Towards Tensorflow 2.0》</a>。</p>
<p>印象中，冠軍說是第一次參加鐵人賽。在參賽前，自己曾到 Google 面試，但因為一些原因被刷掉了。後來想說藉著這次機會把 Tensorflow 了解得更清楚。也提到說在寫文章時找了很多梗圖來放，希望讓大家看得開心一點</p>
<p>最後到了喊話時間，主持人小財神靈機一動，問說你要不要對 Google 喊話看看。冠軍說不太好ㄅ，怕被封殺 XD</p>
<h2 id="Block-chain"><a href="#Block-chain" class="headerlink" title="Block chain"></a>Block chain</h2><p>Blockchain 組的冠軍是李耕銘，系列主題是<a href="https://www.facebook.com/ithelpfans/posts/1514697732036867?__tn__=-R">《從0開始架構區塊鏈》</a>。主持人特別提到他是以學生生分參賽，所以多 3000 元獎勵獎金 ~</p>
<p>冠軍致詞時提到，前 15 天的寫作是辛苦，可能比較累；後 15 天的寫作則是痛苦，有時會不曉得寫什麼，或是知道自己在寫時還有很多不懂的地方。</p>
<p>最後主持人提到說，诶你是台大醫學的，怎麼興趣這麼特別來寫區塊鏈。一開始冠軍說，沒有啦大家本來就有很多興趣啊，像是我有些同學會跑去打網球、或是參加社團等等。最後話鋒一轉，提到自己最近發生的事情：「襖還有，因為我最近虛擬貨幣被套牢了，想說多了解一些區塊鏈的東西。」。台上台下又都充滿了快活的空氣了呢！</p>
<h2 id="Mobile-development"><a href="#Mobile-development" class="headerlink" title="Mobile development"></a>Mobile development</h2><p>Mobile Development 組的冠軍是陳冠榮，系列主題是<a href="https://www.facebook.com/ithelpfans/posts/1521019804737993?__tn__=-R">《從0開始，全方面自動化測試Android App》</a>。</p>
<p>印象中，冠軍說自己也是第一次參賽，而且是在報名截止前十天時看到活動資訊的。他說自己在公司中在 Android 用的測試方式是比較冷門的，網路上的繁體中文參考資源很少。想說趁這次機會整理一下。</p>
<h2 id="影片教學組"><a href="#影片教學組" class="headerlink" title="影片教學組"></a>影片教學組</h2><p>影片教學組的冠軍是高見龍，系列主題是<a href="https://www.facebook.com/ithelpfans/posts/1528279127345394?__tn__=-R">《即將失傳的古老技藝 Vim》</a>。我自己有追這個主題，因為我覺得 Vim 好像用起來很帥 XD。不過後面有些 Ruby 相關的東西我應該不會用到，我就跳過惹。</p>
<p>既然是影片教學組，那麼致詞時用影片來致詞也是很正常的。啊不對，主持人說因為龍哥今天有課程，所以才用影片致詞的方式呈現。其中還提到，雖然他說自己已是用 Vim 八年的老骨頭(還是說老古董?沒記清楚)了，不過編輯器已經改成用 VSCode 比較多了，建議大家現在不需要特別去學 Vim 了（一個寫系列文推坑、然後又建議大家不要跳坑的矛盾組合 XD）</p>
<h2 id="中場休息"><a href="#中場休息" class="headerlink" title="中場休息"></a>中場休息</h2><p>上半場個人組頒獎結束後，就進入了二、三十分鐘左右的中場休息。大概有這些東西：</p>
<ol>
<li>吃吃喝喝的 buffet。吃起來還不錯</li>
<li>自製徽章。下次有機會再參加的話，會想帶個圖案去自製一下</li>
<li>獎狀牆。看了很久才發現可以去拿自己的獎狀</li>
<li>拿徽章與熊熊。看到很多人在排隊，才發現還有熊熊(IT邦幫忙吉祥物)和徽章可以拿。不過待會還有頒獎環節，所以佳作、優選的人要晚一點才會拿到徽章/獎作</li>
</ol>
<h2 id="團賽"><a href="#團賽" class="headerlink" title="團賽"></a>團賽</h2><p>這個環節請到了輔大醫資學程的主任與學生來致詞。學生代表分別有電機三、醫資三、以及資工的研究生。主要都說了些像是，參加團體賽快要撐不下去時，彼此會互相加油打氣；或是自己參賽的主題，像是電機三同學的主題是數位音樂的轉換。</p>
<p>最後一致提到，他們參賽的一大原因，是因為參賽的結果有被算進學分中：看投影片上的截圖表示，參賽結果好像佔某堂課的成績 20% 的樣子 XD</p>
<h2 id="拍照環節"><a href="#拍照環節" class="headerlink" title="拍照環節"></a>拍照環節</h2><p>個人組優勝拍照、個人組佳作拍照 </p>
<h2 id="團賽冠軍-好想工作室"><a href="#團賽冠軍-好想工作室" class="headerlink" title="團賽冠軍: 好想工作室"></a>團賽冠軍: 好想工作室</h2><p>聽說報團人數 29 人，印象中有三還四個人來當代表</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>主持人小財神最後用美國記憶大師的話當結語。印象中大致的句子如下：</p>
<blockquote>
<p>遇到困難時，不要輕易放棄。正是因為它是有難度的、值得挑戰的，才會讓人感到艱辛，要不然每個人都能完成這件事情了。我們雖然感到困難，但依舊完成了這個挑戰。我們是鐵人，不是嗎</p>
</blockquote>
]]></content>
      <tags>
        <tag>Ironman</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 年度回顧</title>
    <url>/2020/01/2019-review/</url>
    <content><![CDATA[<p>覺得最近做事情沒什麼目標，有點渾渾噩噩。在面對新的一年前，先整理一下自己 2019 年做了些什麼，最後簡單規劃自己在 2020 年想做什麼。</p>
<span id="more"></span>


<h2 id="2019-年做了什麼"><a href="#2019-年做了什麼" class="headerlink" title="2019 年做了什麼"></a>2019 年做了什麼</h2><p>有做了這些</p>
<ul>
<li>2019.06-2019.07 六角遠端切版助教 <ul>
<li><a href="https://ayugioh2003.github.io/2019/07/hexschool-TA-experience/">兩個月來擔任六角遠端切版助教的心得 | 小麥前端 blog</a></li>
</ul>
</li>
<li>2019.09-2019.10 iT邦幫忙鐵人賽 <ul>
<li><a href="https://ithelp.ithome.com.tw/users/20104132/ironman/2921">試著把切版專案升級到 gulp4.0 吧 :: 第 11 屆 iT 邦幫忙鐵人賽</a></li>
<li><a href="https://ayugioh2003.github.io/2020/01/ithelp-ironman-2020-award/">IT邦幫忙鐵人賽第11屆頒獎典禮心得 | 小麥前端 blog</a></li>
<li><a href="https://github.com/ayugioh2003/Sweataste-gulp4.0">ayugioh2003/Sweataste-gulp4.0</a></li>
<li><a href="https://docs.google.com/spreadsheets/d/1cRwuSB34OPfdlKhGUF_uOObMpibV0DkBIHH7jtRp-JA/edit#gid=0">鐵人賽gulp4.0文章管理 - Google 試算表</a></li>
</ul>
</li>
<li>2019.10-2020.01 網站接案</li>
</ul>
<p>其他一些瑣事</p>
<ul>
<li>2019.05 外公去世</li>
<li>2019.08 生病，醫生說是玫瑰糠診。到現在還沒完全好</li>
<li>2019.09 六角三週年同學會</li>
</ul>
<h2 id="2020-年打算做的事情"><a href="#2020-年打算做的事情" class="headerlink" title="2020 年打算做的事情"></a>2020 年打算做的事情</h2><p>想做這些</p>
<ul>
<li>找到前端工程師工作<ul>
<li>完成 Vue 課程</li>
<li>完成作品集</li>
<li>整理履歷</li>
<li>準備好面試流程</li>
<li>跑找工作流程</li>
</ul>
</li>
<li>經營自己<ul>
<li>寫部落格。個人想法、技術</li>
<li>也許經營個粉專</li>
<li>也許經營個 Youtube 頻道</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>review</category>
      </categories>
      <tags>
        <tag>review</tag>
      </tags>
  </entry>
  <entry>
    <title>將 Github 上的 repo 轉讓給別人</title>
    <url>/2020/01/transferring-a-respository-at-github/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>這陣子有在處理一個專案。剛開始這個專案是開在我的帳號上，大部分的時間也是我在開發。不過，由於 Github 的私人 repo 只能有三個協作者，而後續可能會再加入新的協作帳號進來，所以就在想該怎麼辦。</p>
<p>後來有人提到「诶我 Github 帳號是付費的，應該可以轉給我喔」，於是我就開始研究該怎麼轉換 repo 的 owner 了。</p>
<span id="more"></span>

<h2 id="官方的說明"><a href="#官方的說明" class="headerlink" title="官方的說明"></a>官方的說明</h2><p>官方其實說明滿清楚的。先附上簡體中文與英文說明</p>
<ul>
<li><a href="https://help.github.com/cn/github/administering-a-repository/transferring-a-repository">轉讓倉庫 - GitHub 幫助</a></li>
<li><a href="https://help.github.com/en/github/administering-a-repository/transferring-a-repository">Transferring a repository - GitHub Help</a></li>
</ul>
<p>以我的狀況，是「一般用戶」轉給「一般用戶」。轉讓步驟大概如下：</p>
<ol>
<li>在 GitHub 上，導航到倉庫的主頁面。</li>
<li>在倉庫名稱下，單擊  Settings（設置）。<br><img src="https://i.imgur.com/unxMWDK.png" alt="Image"></li>
<li>在 “Danger Zone（危險區域）” 下，單擊 Transfer（轉讓）。<br><img src="https://i.imgur.com/Nu2GSoJ.png" alt="Image"></li>
<li>閱讀有關轉讓倉庫的信息，然后輸入您要將倉庫所有權轉讓至的用戶或組織的名稱。<br><img src="https://i.imgur.com/kD7k0RP.png" alt="Image"></li>
<li>根據新所有者的訂閱，閱讀有關可能失去功能的警告。<br><img src="https://i.imgur.com/BwXnb7R.png" alt="Image"></li>
<li>輸入您要轉讓的倉庫的名稱，然后單擊 I understand, transfer this repository（我了解，轉讓此倉庫）。<br><img src="https://i.imgur.com/gA4RLic.png" alt="Image"></li>
</ol>
<p>最後 Github 會寄信給被轉讓者，等他確認後，repo 就會轉給他惹</p>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>滿新鮮的，原來 Github 有轉讓 repo 的功能，而且操作起來還滿方便的，滑鼠點幾下就好惹 ~</p>
]]></content>
      <categories>
        <category>前端工程</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Acer 5750g 在 win10 的 HDMI 無效</title>
    <url>/2020/01/acer5750g-win10-hdmi/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我目前使用的筆電是 Acer 5750G。我大概從 2011 年開始用它的樣子，用了好幾年。不過在前幾年，就陸陸續續出了一些狀況，像是鍵盤按鍵有些不能按、風扇運轉聲音變大等等。其中一個是 HDMI 接口竟然接上螢幕後竟然沒作用。以下是簡單的排錯文</p>
<span id="more"></span>

<h2 id="HDMI-無效的排錯過程"><a href="#HDMI-無效的排錯過程" class="headerlink" title="HDMI 無效的排錯過程"></a>HDMI 無效的排錯過程</h2><p>一開始完全沒頭緒，因為之前大部分時間都用 VGA 接口接螢幕，不知道 HDMI 接口是什麼時候壞掉的。斷斷續續爬文好幾天，今天在 google 下了關鍵字「acer 5750g win10 hdmi」，在 PTT 的 Windows 版上找到一篇文</p>
<ul>
<li><a href="https://www.ptt.cc/bbs/Windows/M.1446993191.A.1B7.html">[問題] WIN10雙螢幕HDMI沒反應 - 看板 Windows - 批踢踢實業坊</a></li>
</ul>
<p>文中有人提到，他有去 GeForce 抓顯卡的驅動。我覺得這方案可以試看看，因為這台筆電本來是預載的系統是 Win7，而我現在升級到 Win10 了，確實有可能因此讓 HDMI 無效。因此就到了 GeForce 官網下載驅動</p>
<ul>
<li><a href="https://www.geforce.com.tw/drivers">驅動程式 | GeForce</a></li>
</ul>
<p>先說結論：HDMI 成功活起來了！感謝 PTT 網友提供排錯的方向。不過之後我可能還是會繼續用 VGA 就是了</p>
<h2 id="日後還需要排錯的部份"><a href="#日後還需要排錯的部份" class="headerlink" title="日後還需要排錯的部份"></a>日後還需要排錯的部份</h2><p>其實之所以想排除 HDMI 的失效，是因為我想讓 Acer 5750G 看能不能三螢幕顯示 (筆電的螢幕、外接兩個螢幕)。不過目前好像無法。在 HDMI 的顯示恢復正常後，我有嘗試外接兩個螢幕，卻總是會有一個無法顯示 QQ</p>
<p>先附上 Acer 5750G 的相關資料</p>
<ul>
<li><a href="https://www.acer.com/ac/zh/TW/content/support-product/3475?b=1&pn=LX.RGA02.041">產品支援 | Acer 台灣</a></li>
<li><a href="https://www.cnet.com/products/acer-aspire-5750g-2314g50mnkk-15-6-core-i3-2310m-windows-7-home-premium-64-bit-4-gb-ram-500-gb-hdd/">Acer Aspire 5750G-2314G50Mnkk - 15.6” - Core i3 2310M - Windows 7 Home Premium 64-bit - 4 GB RAM - 500 GB HDD Series Specs - CNET</a></li>
<li><a href="https://ark.intel.com/content/www/tw/zh/ark/products/52220/intel-core-i3-2310m-processor-3m-cache-2-10-ghz.html">Intel® Core™ i3-2310M 處理器 (3M 快取記憶體，2.10 GHz) 產品規格</a></li>
<li><a href="https://www.geforce.com.tw/hardware/notebook-gpus/geforce-gt-520m/specifications">規格 | GeForce</a></li>
</ul>
<p>在爬文後，似乎沒有針對 Acer 5750G 這個型號的多螢幕設置如何完成的討論。相關的討論倒是有：</p>
<ul>
<li><a href="https://askleo.com/can-i-add-more-than-one-external-monitor-to-my-machine/">Can I Add More than One External Monitor to My Machine? - Ask Leo!</a></li>
<li><a href="https://superuser.com/questions/351443/connecting-two-monitors-to-acer-aspire-5742-6638">windows 7 - Connecting Two Monitors to Acer Aspire 5742-6638 - Super User</a></li>
<li><a href="https://www.dcard.tw/f/3c/p/227985131">#問#筆電外接雙螢幕 - 3C板 | Dcard</a></li>
<li><a href="https://ofeyhong.pixnet.net/blog/post/224212371">【網友詢問】我新買的筆電，在「進階顯示設定」中竟然不是我獨顯的型號，為什麼？ @ 歐飛先生：：痞客邦 ::</a></li>
<li><a href="https://fezjapan.blogspot.com/2012/06/nvidiaoptimusfez3d.html">FEZ 幻想筆記: Nvidia 筆電獨顯技術 Optimus 的盲點：FEZ 及其他 3D 線上遊戲</a></li>
<li><a href="https://ofeyhong.pixnet.net/blog/post/223326531">【教學】如何讓獨顯與內顯同時顯示 (雙螢幕) @ 歐飛先生：：痞客邦 ::</a></li>
<li><a href="https://www.mobile01.com/topicdetail.php?f=233&t=5378592">關於筆電外接 vga 螢幕 獨顯 or 內顯的疑問 - Mobile01</a></li>
<li><a href="https://forums.tomsguide.com/threads/add-two-monitors-to-laptop-with-hdmi-and-vga-output-can-it-happen.320436/">Add two monitors to laptop with HDMI and VGA output - can it happen? | Tom’s Guide Forum</a></li>
<li><a href="https://superuser.com/questions/1207567/run-two-external-monitors-using-one-hdmi-port-and-one-vga-port">Run two external monitors using one HDMI port and one VGA port - Super User</a></li>
<li><a href="https://www.quora.com/Why-won-t-my-laptop-output-to-VGA-and-HDMI-at-the-same-time">Why won’t my laptop output to VGA and HDMI at the same time? - Quora</a></li>
<li><a href="https://linustechtips.com/main/topic/476027-hdmi-vga-at-the-same-time-on-a-laptop/">HDMI &amp; VGA at the same time on a laptop ? - Displays - Linus Tech Tips</a></li>
<li><a href="https://www.youtube.com/watch?v=gn9VZq-nDj8">How to connect three or more monitors to your laptop - YouTube</a></li>
<li><a href="https://www.youtube.com/watch?v=pYUdAWOGJ_Y">7 Monitors on Windows 7 with USB 3.0 - YouTube</a></li>
<li><a href="https://www.youtube.com/watch?v=dlPwVOrzk2k">(1204) KUPA USB Video Adapter (HDMI + VGA) Unboxing and Setup! - YouTube</a></li>
<li><a href="https://24h.pchome.com.tw/prod/DCAX3N-A9008IDOI">KaiJet j5create USB 3.0 VGA 外接顯示卡 (JUA214) - PChome 24h購物</a></li>
<li><a href="https://24h.pchome.com.tw/store/DCAXR1">≡ USB 轉 VGA 介面 - PChome 24h 購物</a></li>
</ul>
<p>看起來有幾個可能性</p>
<ol>
<li>Acer 5750G 的 CPU 是 i3-2310M，只支援兩個螢幕輸出，所以無法三個螢幕</li>
<li>Acer 5750G 有獨顯，可能可以用某些方式接螢幕？</li>
<li>買 USB 外接顯示卡，可能就可以接第三個螢幕</li>
<li>微軟有出一個無線顯示卡，可能跟外接顯示卡用途類似？</li>
<li>筆電都是走內顯輸出，獨顯只負責運算不負責輸出</li>
</ol>
<p>以下附上可能相關的商品連結，方便我自己日後查找用</p>
<ul>
<li><a href="https://24h.pchome.com.tw/store/DCACQL">USB 公 ↔ HDMI 母 - PChome 24h購物</a></li>
<li><a href="https://24h.pchome.com.tw/prod/DCAX3N-A9008IMW9?fq=/S/DCACQL">KaiJet j5create USB 3.0 HDMI 外接顯示卡 (JUA254) - PChome 24h 購物</a></li>
<li><a href="https://24h.pchome.com.tw/prod/DMAA8W-A9006XIZQ">Microsoft 無線顯示轉接器 V2 - PChome 24h 購物</a><br><a href="https://24h.pchome.com.tw/prod/DCADAD-A59124520">KaiJet j5 create USB 2.0 外接顯示卡 JUA210 - PChome 24h 購物</a></li>
</ul>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Laptop</tag>
      </tags>
  </entry>
  <entry>
    <title>報名六角學院的 w3HexSchool 鼠年全馬鐵人挑戰</title>
    <url>/2020/02/w3Hexschool-2020-challenge/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/0lbPEOk.png" alt="六角鼠年鐵人挑戰賽示意圖"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>六角學院舉辦了一個寫文活動<a href="https://www.hexschool.com/2019/11/14/2019-11-14-w3Hexschool-2020-challenge">「鼠年全馬鐵人挑戰賽」</a>。如果維持一週一更的習慣，就能根據累積的文章數來獲得獎座/獎狀。我本來就有想要養成寫文的習慣，而六角舉辦了這個活動，就讓我更有想維持這習慣的動力了。以下先打大致的方向，日後再慢慢補上細節。</p>
<p>BTW，胡立也在推一個新的寫文平台，同時也有寫文活動。再考慮一下要不要參加好惹 @@</p>
<ul>
<li><a href="https://www.facebook.com/permalink.php?story_fbid=3190212667662749&id=100000221410594">胡立 - 過年覺得沒什麼事做的話 不如來看看這個新的技術寫作平台 然後順便報名個活動XD</a></li>
</ul>
<span id="more"></span>

<h2 id="2019年的接案經驗"><a href="#2019年的接案經驗" class="headerlink" title="2019年的接案經驗"></a>2019年的接案經驗</h2><p>Navbar</p>
<ul>
<li><a href="https://ayugioh2003.github.io/2020/02/hide-header/">網頁下滾時隱藏 header，上滾時才顯示 | 小麥前端 blog</a></li>
<li><a href="https://ayugioh2003.github.io/2020/02/navbar-fixed-and-related-issue-at-safari/">讓 navbar 置頂、隨滾動變化樣式、並探討與 Safari 相關的跨平台議題 | 小麥前端 blog</a></li>
</ul>
<h2 id="求職經驗"><a href="#求職經驗" class="headerlink" title="求職經驗"></a>求職經驗</h2><h2 id="技術文"><a href="#技術文" class="headerlink" title="技術文"></a>技術文</h2><h2 id="相關連結"><a href="#相關連結" class="headerlink" title="相關連結"></a>相關連結</h2><ul>
<li><a href="https://www.hexschool.com/2019/11/14/2019-11-14-w3Hexschool-2020-challenge/">w3HexSchool 鼠年全馬鐵人挑戰 | 六角學院</a></li>
<li><a href="https://github.com/hexschool/w3hexschool-API">hexschool/w3hexschool-API: w3HexSchool 報名清單 API</a></li>
<li><a href="https://www.facebook.com/groups/110635703123103/permalink/614213139432021/">擴充API 六角學院 - 學員社團</a></li>
</ul>
]]></content>
      <tags>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次前端接案打王(被王打)的心得</title>
    <url>/2020/02/first-frontend-case/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/tkMs2Ag.png" alt="組隊打王示意圖"></p>
<blockquote>
<p>打王(被王打)示意圖</p>
</blockquote>
<h2 id="楔子"><a href="#楔子" class="headerlink" title="楔子"></a>楔子</h2><p>在 2019 年的年中，我在前端的路上陸續做了這些事情：接六角的遠端切版助教、參加 iT 邦幫忙的鐵人賽、以及邊上六角的課程。本來想說寫完鐵人賽 <del>就回家去種田了</del> 就專心上六角的課程，但在十月初、鐵人賽進行到一半的時候，我接到一封神秘的訊息。</p>
<p>這封訊息，讓我踏上了一段長達數個月的旅途。</p>
<p>究竟這封神秘的訊息透露出什麼資訊，以及在後續的路途上會有怎樣的遭遇呢？</p>
<p>讓我們繼續看下去…</p>
<span id="more"></span>

<h2 id="第一章：接受任務"><a href="#第一章：接受任務" class="headerlink" title="第一章：接受任務"></a>第一章：接受任務</h2><p>故事是從 2019.10.04 開始的：</p>
<blockquote>
<p>哈囉，這邊有個案子，有興趣嗎？</p>
</blockquote>
<p>看著彈出的視窗寫著王志誠老師的名字（後續以 Casper 代稱），發現前面的幾次對話是 <del>老師安安初次見面可以好友加加嗎</del> 當時參加六角同學會時，先當場詢問過志誠老師能不能加臉書好友，後來再到臉書上打招呼的訊息。</p>
<p>看到 Casper 的訊息後，大概知道發生了什麼事情。六角學院在 2019 年底時多了一個<a href="https://www.hexschool.com/case/">前端外包媒合服務</a>，而目前 Casper 在詢問我有沒有接案的意願。</p>
<p>沒想到上次還只是在打招呼，接著就是在討論接案的事情了。不知為什麼，<del>有一種回新手村找 NPC 拿任務的感覺</del> XD</p>
<p>幾經思量後，我決定接下這個遠端寫網頁的案子，開始第一次的接案打王(被王打)日子。</p>
<h2 id="第二章：任務開始前的個人戰力與心態分析"><a href="#第二章：任務開始前的個人戰力與心態分析" class="headerlink" title="第二章：任務開始前的個人戰力與心態分析"></a>第二章：任務開始前的個人戰力與心態分析</h2><p>其實從收到訊息到接受，我猶豫了一陣子。主要是不曉得自己的能力夠不夠接案。以下是我當時的能力經驗：</p>
<p>前端相關能力</p>
<ul>
<li>基礎前端：HTML、CSS</li>
<li>樣式進階：RWD、SASS、BS</li>
<li>JS 技能：ES6、VUE (學到一半)</li>
<li>前端相關：VSCode、Git、gulp</li>
</ul>
<p>前端相關經驗</p>
<ul>
<li>六角遠端切版助教 (2019)</li>
<li>iT邦幫忙鐵人賽撰寫中 (2019.09-)<ul>
<li>後來得到佳作 (2020.01)</li>
</ul>
</li>
</ul>
<p>後來，Casper 說這個專案可能跟視差滾動有關，於是在等待專案開始的期間(10/04-10/08)，就複習了一下六角在響應式課程中介紹到的視差滾動課程，先備起來用。</p>
<h2 id="第三章：任務介紹"><a href="#第三章：任務介紹" class="headerlink" title="第三章：任務介紹"></a>第三章：任務介紹</h2><p>有點像是辦營隊前的行前會概念，在這個專案開始前也有個線上會議(10/09)。在會議的過程中，我大概理解到這些事情：</p>
<h3 id="一、開會成員與合作關係"><a href="#一、開會成員與合作關係" class="headerlink" title="一、開會成員與合作關係"></a>一、開會成員與合作關係</h3><p>開會的成員分別是 Fable 與六角的成員，而發包的是一間品牌設計公司。我想像中的合作關係大概是這樣：</p>
<ul>
<li>客戶公司：紐約的公司。為了實現商業規劃，尋求外部協助</li>
<li>品牌設計公司：紐約的品牌設計公司。協助客戶的品牌設計需求</li>
<li>Fable：台灣的接外包專案的公司，依專案性質建立 UI、前端、後端等團隊以完成外包需求。在這次專案中接了品牌設計公司的發包</li>
<li>六角學院：台灣的前端工程師教育公司。與 Fable 合作媒合前端人才</li>
<li>我：完成前端切版、動畫、互動、接 API 需求</li>
</ul>
<h3 id="二、任務內容"><a href="#二、任務內容" class="headerlink" title="二、任務內容"></a>二、任務內容</h3><p>客戶當時似乎是想重新設計官網，初期提出的需求是一頁式官網，以及問卷頁面。不過中後期有擴增需求，變成多頁式官網、也多了一些串 API、新增動畫效果等等的需求。原先預估是一個月的專案，最後擴增需求變成約三個月結案。</p>
<h3 id="三、組隊成員"><a href="#三、組隊成員" class="headerlink" title="三、組隊成員"></a>三、組隊成員</h3><p><a href="https://hsiangfeng.github.io/learnexp/20190918/2622329192/">套句 Ray 說的話，我位於前端團隊中</a>。剛開始的成員有兩個，六角方的我（切版、串 API）與 Fable 方的 Roy（類似 PM 角色）。在中後期因為一些原因，六角方的 Casper 和 Ray 有加進來協同開發一陣子。而 Roy 後期除了當 PM 角色外，還有擔當後端角色（猛猛的）</p>
<h3 id="四、溝通與協作工具"><a href="#四、溝通與協作工具" class="headerlink" title="四、溝通與協作工具"></a>四、溝通與協作工具</h3><p>在溝通工具部份以 Slack 為主，由於先前當六角助教期間有使用 Slack 幾個月的經驗，就沒什麼太大問題；當功能比較抽象，要清楚地傳遞需求時，就會另外用 zoom 視訊，或是附帶簡報。</p>
<p>協作工具部份，設計師（好像是 Fable 方的）會將設計稿上傳到 Zeplin，這樣我（前端工程師）就可以直接在瀏覽器上查看。另外程式碼是用 Git + Github 進行協作，我自己也會主動開 issue 整理需求與功能。感謝 Github 現在開私人專案不用錢錢。</p>
<h3 id="五、開發流程"><a href="#五、開發流程" class="headerlink" title="五、開發流程"></a>五、開發流程</h3><p>Roy（PM）會先跟案主、設計師開會，了解需求、討論出需要什麼功能、畫面，設計師會出稿到 Zepzin 上。我（前端工程師）則在理解需求與功能後，開始切版或實做功能。</p>
<p>前期的前端工作因為主要是我開發，所以開發流程的版控幾乎就是一路在 master 主分支上操作 XD。中後期開始有比較多的協作，採用的開發流程比較像是狂開分支的 git flow，有時再搭配 Pull Request 讓程式碼在推送合併到 Github 前，讓團隊有檢視程式碼的機會。</p>
<h2 id="第四章：挑戰舉隅"><a href="#第四章：挑戰舉隅" class="headerlink" title="第四章：挑戰舉隅"></a>第四章：挑戰舉隅</h2><p>在打王(被王打)的過程中，最常面對的一個挑戰就是解決未知的、沒處理過的需求。舉幾個在專案過程中遇到的、比較容易視覺化出來的功能需求好了。</p>
<p>一）<a href="https://codepen.io/ayugioh2003/pen/rNNWWLq">漸層色進度提示條</a>。當時因為看不太懂需求是什麼，處理得有點久，後來就陸續調整成符合自適應、線段間距粗細、漸層色等需求的形式。動態效果是我後來才加在 Codepen 上的，沒有用到專案中。</p>
<p><img src="https://i.imgur.com/nbMfax5.gif" alt="漸層色進度條"></p>
<p>二）<a href="https://codepen.io/ayugioh2003/pen/pooXGjo">展開動畫提示框</a>。當時這個需求一開始不太知道該怎麼實做，即提示框的外框先延展開來，過個幾秒內文才浮現。後來想起動畫就像魔術一樣，是一種障眼法，表象認為的結構與實際形成的結構是不需要一樣的，只要有看起來的效果符合預期即可。於是後來把外框與文字各自獨立成不同的元素，這樣動畫就可以分別控制外框的展開與文字的出現時機，且這樣文字就不受外框大小擠壓的影響了。</p>
<p><img src="https://i.imgur.com/hQzo2uY.gif" alt="展開動畫提示框"></p>
<p>三）IG 圖片牆。這個需求我苦惱了好一陣子，因為我之前沒研究過 Instagram 的 API，且它的 API 持續在變動，有很多限制與不可控因素，光是研究就一個頭兩個大。研究過很多方案後，這個需求最後是好心的 Roy (中後期兼職後端) 在後端開了一個抓 IG 資料的 API 給我才解決的。</p>
<ul>
<li><a href="https://www.facebook.com/groups/DevCTaipei/permalink/1477097829108301/">Facebook Developer Circle: Taipei</a></li>
<li><a href="https://codepen.io/ayugioh2003/pen/YzzRRYO">Test Instagram API ?__a=1</a></li>
<li><a href="https://codepen.io/ayugioh2003/pen/VwwVGjO">Fetch public photos from Instagram without the API</a></li>
<li><a href="https://codepen.io/ayugioh2003/pen/WNNaZba">snapwidget demo</a></li>
</ul>
<p><img src="https://i.imgur.com/7K1osZ8.jpg" alt="IG圖片牆"></p>
<h2 id="第五章：初期任務卡卡的咚吱咚吱"><a href="#第五章：初期任務卡卡的咚吱咚吱" class="headerlink" title="第五章：初期任務卡卡的咚吱咚吱"></a>第五章：初期任務卡卡的咚吱咚吱</h2><p>專案開始後，一路上遇上不少挑戰。在專案的初期，我自覺有進行的比較慢，有段時間 Roy(PM) 也有提醒我要盡量趕上進度。以下是我認為當時會比較慢的可能原因：</p>
<h3 id="一、架構的挑選"><a href="#一、架構的挑選" class="headerlink" title="一、架構的挑選"></a>一、架構的挑選</h3><p>當時我在考慮專案的架構要怎麼安排時想了一陣子。後來想說因為需求是一頁式官網、問卷服務，加起來有兩個頁面，可能會有比較多重複的區塊與樣式，就決定用比較熟悉的 gulp 建構工具 + EJS 模板 + SASS 去處理。</p>
<p>另外，因為也有一些畫面互動、資料處理的需求，就引入了前端框架 vue 來處理，當時是用 cdn 的方式引入。不過後來 Roy 有跟我建議說，之後有用到 vue 的話，搭配 webpack 來使用會比較好。這我也同意。之後應該要研究一下 vue 怎麼達到多頁面配置的需求，例如預渲染或伺服器端渲染等解決方案。</p>
<p>這部份我自己的檢討是，當時應該要先清楚講出自己要採用的架構方案，在 Slack 中跟大家討論可行性、擴充性等部份，這樣才不會自己想老半天拖慢進度、或之後要改變架構時會很麻煩。</p>
<h3 id="二、問題的解決"><a href="#二、問題的解決" class="headerlink" title="二、問題的解決"></a>二、問題的解決</h3><p>在專案初期時，如果我遇到了問題，我會先自己搜尋解決方案，像是過去的課程筆記、google、Stack Overflow、前端社群、開發文件等等。雖然大部分都能找到堪用的方案，但就是開發時間會被拉長，而且不確定這方案是不是最佳解。</p>
<p>後來經過各方人馬(?)的開導後，都一致同意 <del><a href="https://www.ptt.cc/bbs/C_Chat/M.1570375703.A.084.html">你不會更新你要先講</a></del> 如果遇到暫時無法解決且會拖到進度的狀況，就回報到 Slack 中讓大家一起想辦法解決。</p>
<p>我的檢討是，在這種有時間壓力的專案中，以開發進度為優先考量。不要想說這種功能自己竟然不會覺得自己很遜、或不敢問別人之類的。在合理(真的有困難度)、有邏輯(有先自行除錯、把需求過程理順)的請教下，在 Slack 群中的人會願意幫忙的。</p>
<h3 id="三、協作的磨合"><a href="#三、協作的磨合" class="headerlink" title="三、協作的磨合"></a>三、協作的磨合</h3><p>這跟第二點有點類似。因為是第一次接案，我對於協同開發的模式較陌生，沒有過往的經驗能讓我遵循。像是該怎麼把遇到的做不太到的功能清楚表達出來讓 PM 知道、該怎麼回饋給設計師有些可能缺少的 UI 界面。熟悉這些協作模式讓我摸索了一陣子。</p>
<p>在專案初期，PM 可能會不了解我的能力在哪，不曉得我是否能跟上開發的時程。這導致 PM 在整個專案期間，會需要主動追我目前的開發進度到哪了。</p>
<p>我的檢討是，首先，和第二點一樣，要不害怕溝通與詢問，以開發進度為優先考量。其次，主動和團隊說明自己的進度在那，時間點可以在某個功能完成時、或是每天的晚上。</p>
<h2 id="第六章：Feedback-轟炸"><a href="#第六章：Feedback-轟炸" class="headerlink" title="第六章：Feedback 轟炸"></a>第六章：Feedback 轟炸</h2><p>開發到一定程度後，就會開始數次的驗收、或是追加需求。我記得我在專案初期時完全沒注意到驗收這件事情，以為整個專案時間就是我的開發時間，讓我自己在初期的開發時間沒有抓好。</p>
<p>除了驗收的 feedback 外，還有其他一些會影響開發時程的變數。像是有 bug、需求追加、有些比較難實現的需求、或是趕在客戶方開會前修完 feedback。</p>
<p>舉一個比較極端的例子。有天下午我正準備替目前進度收尾時，我阿嬤在浴室跌倒撞破頭出血。我一邊試著幫忙止血與清理現場、一邊聯絡我爸準備一起去急診、一邊急忙收尾進度與聯絡 PM 告知部份狀況。</p>
<p>後來晚上在急診時被告知有 feedback 要修，問說明天早上有沒有辦法處理好，我就快崩潰了 QQ。於是先告知我目前無法處理，PM 說他會想辦法，先讓我專心處理好家裡的事情。</p>
<p>半夜十二點回家後，我可能腦袋壞掉了，跟 PM 說我接手剩下來的 feedback (PM 有問我真的 OK 嗎不要勉強 QQ)。當時雖然有在想說，這時間安排是要逼死誰，但還是想說這是我第一次接案，想要盡量做好，就還是接下來修了。</p>
<p>最後修 feedback 修到早上八點，跟 Slack 群組交接一下進度後就去補眠到早上十點，陪阿嬤去醫院洗腎。處理到一個段落時，大概中午就先離開回家補眠。我記得我在補眠時回想過去幾個小時發生的事情，在心裡面一直問自己「我是誰、我在哪、我為什麼要這麼累地做這些事情」QQ</p>
<p>我的檢討是，要做好時間控管，預留時間給修 bug 或 feedback、提前思考未來可能會追加什麼功能預先做好準備。注意自己的壓力與健康狀況，來不及做的功能就說出來。</p>
<h2 id="終章：回顧"><a href="#終章：回顧" class="headerlink" title="終章：回顧"></a>終章：回顧</h2><p>在經過三個多月後的二〇二〇的一月底，終於結案惹（灑花）。這接案的過程中很感謝 Fable 的 Roy，以及六角的 Ray、Casper。</p>
<p>Roy 除了擔任 PM 的角色，與案主、設計溝通完需求與功能會通知我外，在專案中後期也有處理後端與後台的部份。有些時候還會陪我研究一些 issue，真的很 <del>小叮噹</del> 很厲害。Casper 除了介紹我接案的機會外，也有詢問我目前進度如何、在有困難時提供我資源。感謝 Ray 當時在我無暇顧及專案的時候，幫我處理了一些 issue，讓我有時間處理家裡的事情。</p>
<p>我在這個專案中獲得滿多東西的。除了比較直觀的像是獲得磨練前端技術的機會（如輪播、動畫、接API、SASS架構等等），也體驗到整個專案是如何進行的，以及實際地協作溝通。</p>
<p>雖然過程滿累的，但對第一次接案的我來說，收穫頗豐。</p>
<h2 id="參考的資料"><a href="#參考的資料" class="headerlink" title="參考的資料"></a>參考的資料</h2><p>在做專案期間，有時會產生迷惘，像是有些東西我都不會因而沒信心、突然開始懷疑人生與未來。這時就會等比較空閒時（等待 feedback），看一些前人的經驗談。以下是我看過的一些文章</p>
<p>軟體工程師菜鳥時期可參考。看完後可以體會到，就算是很厲害的人，當時也曾迷惘過，因此心情就會好一點（？）</p>
<ul>
<li><a href="https://ithelp.ithome.com.tw/users/20040221/ironman/2236">菜鳥工程師必修的 30 堂溝通課 :: 第 11 屆 iT 邦幫忙鐵人賽</a></li>
<li><a href="https://ithelp.ithome.com.tw/users/20040221/ironman/1247">前端工程師養成手冊 :: 2018 iT 邦幫忙鐵人賽</a></li>
<li><a href="https://ithelp.ithome.com.tw/users/20004901/ironman/526">Will 保哥的 IT 創業之路 :: 2013 iT 邦幫忙鐵人賽</a></li>
</ul>
<p>開發習慣。因為開發初期時主要只有我寫前端部份，撰寫風格感覺比較沒規範與奔放。後來需要和別人協作時（如 Roy 和 Ray）就對他們不好意思，好像讓他們看到爛 code 了 orz。</p>
<ul>
<li><a href="https://ithelp.ithome.com.tw/users/20107637/ironman/1927">可不可以不要寫糙 code :: 2019 iT 邦幫忙鐵人賽</a></li>
</ul>
<p>除了前端技術外，接案的過程本身就是值得分享、聽聽別人經驗的事情。之前有看過六角其他接案前輩的心得，讓我在開發時覺得自己其實不孤單 QQ</p>
<ul>
<li><a href="https://www.hexschool.com/case/">廠商發案平台 | RWD 切版、API 介接、前端人才外包 | 六角學院</a></li>
<li><a href="https://hsiangfeng.github.io/learnexp/20190918/2622329192/">關於接案服務的這件事 | Welcome.Web.World</a></li>
<li><a href="https://www.facebook.com/groups/110635703123103/permalink/552040332315969/">感謝馬維君前端開發，Fable 官網如期上線 - 六角學院學員社團</a><ul>
<li><a href="https://medium.com/%E9%A6%AC%E6%A0%BC%E8%95%BE%E7%89%B9%E7%9A%84%E5%86%92%E9%9A%AA%E8%80%85%E6%97%A5%E8%AA%8C/%E6%8E%A5%E6%A1%88%E5%88%9D%E9%AB%94%E9%A9%97-%E5%89%8D%E7%AB%AF%E4%B9%8B%E8%B7%AF%E7%9A%84%E6%88%90%E9%95%B7%E7%97%9B-e1f804014044">接案初體驗：前端之路的成長痛 - 馬格蕾特的樹洞 - Medium</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>因為有報名六角學院舉辦的<a href="https://www.hexschool.com/2019/11/14/2019-11-14-w3Hexschool-2020-challenge">「鼠年全馬鐵人挑戰賽」</a>寫文活動，加上自己也想整理這次接案學到的東西，估計接下來幾篇都會是跟這次專案相關的文章，再請有興趣的人多多指教惹。</p>
]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
        <tag>接案</tag>
        <tag>接案心得</tag>
        <tag>接案2019</tag>
      </tags>
  </entry>
  <entry>
    <title>網頁下滾時隱藏header，上滾時才顯示</title>
    <url>/2020/02/hide-header/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/5XIMwLs.png" alt="能隱藏header的工具，headroom.js"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 2019 年接案時，曾接到一個需求是，當網頁處在往下滾動狀態時，header是隱藏起來的；而在網頁往上滾動、或網頁已經在最頂端時，header 才會顯示出來。之所以想完成這個效果，可能是想節省空間。因為 header 是讓使用者跳轉到其他頁面的導覽列，而當使用者做出向下滾動網頁的動作時，代表他們需要的是瀏覽後續的網頁。如果在往下滾動時隱藏 header，就能留給使用者更多的螢幕空間去看內容，體驗會更好。</p>
<p>以下是我當時的解法：headroom.js</p>
<p><img src="https://i.imgur.com/5KfwFWr.gif" alt="下滾時隱藏header，上滾時顯示"></p>
<span id="more"></span>

<h2 id="headroom-js"><a href="#headroom-js" class="headerlink" title="headroom.js"></a>headroom.js</h2><p>我記得當時有想過用 CSS 方案（例如 <code>position: sticky</code>），或是 JS 方案（監測網頁位置，改變 header 的狀態）。在 google 的過程中，剛好看到有 headroom.js 工具，就決定使用它了。headroom.js 同時有 CDN 和 NPM 途徑可使用，對試用或前期開發都用 CDN 的我來說還滿方便的。先附上官網：</p>
<ul>
<li><a href="https://wicky.nillia.ms/headroom.js/">Hide your header on scroll - Headroom.js</a></li>
</ul>
<p>引入 headroom.js 的方式如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; cdn 方案</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;headroom.js@0.9.4&#x2F;dist&#x2F;headroom.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; npm 方案</span><br><span class="line">npm install headroom.js --save</span><br></pre></td></tr></table></figure>

<p>使用的方式也很簡單。如果是預設用法的話，在 header 上加個 class、再搭配官網提供的 JS 初始化程式碼就 OK 了。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- initially --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;headroom&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- scrolling down --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;headroom headroom--unpinned&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- scrolling up --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;headroom headroom--pinned&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if you&#x27;re using a bundler, first import:</span></span><br><span class="line"><span class="keyword">import</span> Headroom <span class="keyword">from</span> <span class="string">&quot;headroom.js&quot;</span>;</span><br><span class="line"><span class="comment">// grab an element</span></span><br><span class="line"><span class="keyword">var</span> myElement = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#header&quot;</span>);</span><br><span class="line"><span class="comment">// construct an instance of Headroom, passing the element</span></span><br><span class="line"><span class="keyword">var</span> headroom  = <span class="keyword">new</span> Headroom(myElement);</span><br><span class="line"><span class="comment">// initialise</span></span><br><span class="line">headroom.init();</span><br></pre></td></tr></table></figure>

<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>當時因為用 headroom.js 就已解決需求，後續就沒研究細節或其他方案了。若後續若有相關需求的話，我應該會把其他的設定再好好讀一遍。</p>
<h2 id="延伸-參考資源"><a href="#延伸-參考資源" class="headerlink" title="延伸/參考資源"></a>延伸/參考資源</h2><p>官方</p>
<ul>
<li><a href="https://wicky.nillia.ms/headroom.js/">Hide your header on scroll - Headroom.js</a></li>
<li><a href="https://github.com/WickyNilliams/headroom.js">WickyNilliams/headroom.js: Give your pages some headroom. Hide your header until you need it</a></li>
<li><a href="https://codepen.io/WickyNilliams/pen/AFsKB?editors=1010">Headroom.js demo</a></li>
</ul>
<p>教學介紹</p>
<ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10197806">[十分鐘學習] Headroom.js - 活化導覽列 - iT 邦幫忙：：一起幫忙解決難題，拯救 IT 人的一天</a></li>
<li><a href="https://medium.com/better-programming/lets-build-a-sticky-navigation-b20be4dd77f">Build a Sticky Navigation with Headroom.js - Better Programming - Medium</a></li>
</ul>
]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
        <tag>接案</tag>
        <tag>接案2019</tag>
        <tag>NPM package</tag>
      </tags>
  </entry>
  <entry>
    <title>讓 navbar 置頂、隨滾動變化樣式、並探討與 Safari 相關的跨平台議題</title>
    <url>/2020/02/navbar-fixed-and-related-issue-at-safari/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/VKailFS.gif" alt="navbar 置頂與滾動變化效果示意圖"></p>
<blockquote>
<p>類似效果的示意圖</p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在專案開發期間，有要求網站的上方要有 navbar。不過需求有更改過幾次：一開始是會隨著瀏覽器捲動而消失，後來要求下滾時消失上滾時出現，最後則改成 navbar 在頂端時背景透明、下滾後背景白色。</p>
<p>除了置頂、偵測滾動外，在這個需求也遇上了跨平台問題（通常都是跟 Safari 相關 QQ）。偵測滾動之後的再獨立一篇出來，這邊先談 navbar 置頂與跨平台的問題。</p>
<span id="more"></span>

<h2 id="navbar-置頂方式"><a href="#navbar-置頂方式" class="headerlink" title="navbar 置頂方式"></a>navbar 置頂方式</h2><p>將 navbar 置頂其實不難，在 CSS 學習中算是基礎的應用。主要就是透過 <code>position</code> 屬性，把值設定成 <code>fixed</code>，讓元素絕對定位在畫面上。但搭配一些動畫效果後，發現在 Safari 上有時會出現問題 QQ。</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/position">position - CSS（層疊樣式表） | MDN</a></li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.navbar</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="comment">/* top: 0; */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Safari-相關問題與跨平台除錯"><a href="#Safari-相關問題與跨平台除錯" class="headerlink" title="Safari 相關問題與跨平台除錯"></a>Safari 相關問題與跨平台除錯</h2><p>因為我是在 Windows 平台開發，我本身沒有 Mac 或 iPhone 等裝置，所以跨平台問題通常是 PM 幫忙看。當時遇到不少問題，都是 PM 先描述或螢幕錄影給我看，我再試圖通靈改動程式碼，上線後再請 PM 幫我查看。整個測試過程滿辛苦的 QQ。當時情況好像是，原本 navbar 上滾回頂端時預期會是背景透明，但在 Safari 操作時背景卻是白色。當時評估是 <code>position: fixed</code> 在 Safari 上有些奇怪的 issue。</p>
<p>回到如何跨平台除錯。當時遇到跨平台問題時，我會先在網路上查詢相關議題，像是 Google、<a href="https://caniuse.com/">Can I use</a>、Stack Overflow。這時就會考驗拆解問題與下關鍵字的能力。以我當時狀況為例，我印象有以「fixed」、「position」、「navbar」、「Safari」、「iOS」等關鍵字做排列組合去搜尋。caniuse 也滿好用的，除了列出瀏覽器對某個 CSS 屬性的支援程度外，也有幫忙收集一些已知的 issues，對跨平台 issue 除錯時的幫助很大。</p>
<p>我現在已經有點忘記怎麼解決的了 orz。好像是 PM 繞過被設定 fixed 的元素，把動畫效果做在其他元素上，避免 fixed 在 Safari 上的奇怪問題。以下附上一些當時參考的資料：</p>
<blockquote>
<p>橡皮筋效果</p>
</blockquote>
<ul>
<li><a href="https://www.getit01.com/p20180115822256539/">iOS safari 如何阻止「橡皮筋效果」？ - GetIt01</a></li>
<li><a href="https://www.jianshu.com/p/dc6c2a7744fd">阻止移动端浏览器下拉橡皮筋效果（下拉滚动露底） - 简书</a></li>
<li><a href="https://www.zhihu.com/question/22256539">iOS safari 如何阻止“橡皮筋效果”？ - 知乎</a></li>
<li><a href="https://medium.com/anna-hsaio-%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC%E8%A8%98/%E5%89%8D%E7%AB%AF%E5%B0%8F%E5%AD%B8%E5%A0%82-%E7%A6%81%E6%AD%A2%E8%A1%8C%E5%8B%95%E8%A3%9D%E7%BD%AE%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9A%84%E6%A9%A1%E7%9A%AE%E7%AD%8B%E6%95%88%E6%9E%9C-4b9f484c579e">前端小學堂｜禁止行動裝置瀏覽器的橡皮筋效果 - Anna.Hsaio｜前端開發記 - Medium</a></li>
</ul>
<blockquote>
<p>在 position: fixed 元素上添加能啟動 GPU 渲染的 CSS 屬性</p>
</blockquote>
<ul>
<li><a href="https://stackoverflow.com/posts/49264494/revisions">Revisions to position: fixed doesn’t work on iPad and iPhone - Stack Overflow</a></li>
<li><a href="https://www.youtube.com/watch?v=QU1JAW5LRKU">Using Chrome DevTools to profile the jsconf.eu site - YouTube</a></li>
<li><a href="https://www.fourkitchens.com/blog/article/fix-scrolling-performance-css-will-change-property/">Fix scrolling performance with CSS will-change property – Four Kitchens</a><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.fixed-position-on-mobile</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>設定 overflow、orerflow-scrolling 屬性。不確定要設在 body 還是 fixed 元素身上 (以專案來看，應該是加在 html, body 上)</p>
<ul>
<li><a href="https://stackoverflow.com/a/10317817">https://stackoverflow.com/a/10317817</a></li>
<li><a href="https://www.eventbrite.com/engineering/mobile-safari-why/">Mobile Safari (Whyyyy?!) - Engineering Blog</a></li>
<li><a href="https://stackoverflow.com/questions/23657943/buttons-aligned-to-bottom-of-page-conflict-with-mobile-safaris-menu-bar/">html - Buttons aligned to bottom of page conflict with mobile Safari’s menu bar - Stack Overflow</a></li>
<li><a href="https://remysharp.com/2012/05/24/issues-with-position-fixed-scrolling-on-ios/">Issues with position fixed &amp; scrolling on iOS</a></li>
<li><a href="https://css-tricks.com/snippets/css/momentum-scrolling-on-ios-overflow-elements/?source=post_page-----1efacea28611----------------------">Momentum Scrolling on iOS Overflow Elements | CSS-Tricks</a><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">overflow</span>:hidden;</span><br><span class="line">-webkit-<span class="attribute">overflow</span>-scrolling:touch;</span><br></pre></td></tr></table></figure></li>
</ul>
<blockquote>
<p>各種方案避免 ios 果凍效果</p>
</blockquote>
<ul>
<li><a href="https://stackoverflow.com/questions/29894997/prevent-ios-bounce-without-disabling-scroll-ability">javascript - Prevent iOS bounce without disabling scroll ability - Stack Overflow</a></li>
<li><a href="https://github.com/lazd/iNoBounce">lazd/iNoBounce: Stop your iOS webapp from bouncing around when scrolling</a></li>
<li><a href="https://medium.com/@littleDog/%E7%94%A8-webkit-overflow-scrolling-touch-%E8%AE%93%E4%BD%A0%E7%9A%84mobile-web-application%E6%94%AF%E6%8F%B4momentum-based-scrolling-1efacea28611">用”-webkit-overflow-scrolling: touch”讓你的mobile web application支援momentum-based scrolling</a></li>
</ul>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>當時查了一些資料後，覺得 Safari 對「畫面定位」相關的 CSS 屬性感覺支援度沒有很好，像我在使用 <code>position: fixed</code> 和 <code>background-position: fixed</code> 時都有遇到問題。之後在做網頁時應該會特別避開這點，免得到時又要除錯很久找不出問題來 QQ。</p>
]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
        <tag>接案</tag>
        <tag>接案2019</tag>
      </tags>
  </entry>
  <entry>
    <title>在彈出視窗時隱藏背景滾軸</title>
    <url>/2020/02/pop-window-and-background-fixed/</url>
    <content><![CDATA[<p>先前專案在開發移動版時，本來是用推移的方式展開 navbar 選單，後來客戶希望用覆蓋全畫面的方式來打開選單。</p>
<p>本來想說要不要用 Bootstrap 提供的現有工具解決。移動版 navbar 點擊後跳出的覆蓋視窗，其實概念類似於 BS 提供的 modal，即強制彈出一個新畫面，脫離原先瀏覽網頁內容的情境。</p>
<ul>
<li><a href="https://bootstrap.hexschool.com/docs/4.0/components/modal/">互動視窗 (Modal)・Bootstrap 4 繁體中文手冊 [六角學院譯]</a></li>
</ul>
<p>最後我還是想嘗試用 CSS 土法煉鋼的方式，將 pop window 展開到全畫面以達成需求。</p>
<p>結果出現了一個問題：pop window 覆蓋全畫面時，右邊滾軸竟然還在，而且可以被滾動</p>
<span id="more"></span>

<h2 id="彈出覆蓋畫面時隱藏背景捲軸"><a href="#彈出覆蓋畫面時隱藏背景捲軸" class="headerlink" title="彈出覆蓋畫面時隱藏背景捲軸"></a>彈出覆蓋畫面時隱藏背景捲軸</h2><p>後來發現解法滿簡單的。就是在 pop window 出來時，將 body 加上 <code>overflow: hidden</code>，把整個畫面的滾軸拿掉，這樣就會符合需求了。</p>
<p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="ayugioh2003" data-slug-hash="vYOeWKW" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="pop window, background overflow hidden">
  <span>See the Pen <a href="https://codepen.io/ayugioh2003/pen/vYOeWKW">
  pop window, background overflow hidden</a> by Chiu (<a href="https://codepen.io/ayugioh2003">@ayugioh2003</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
        <tag>接案</tag>
        <tag>接案2019</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS 的文字抹除效果</title>
    <url>/2020/03/css-animation-text-wipe/</url>
    <content><![CDATA[<p>在接專案時遇到了不少動畫的需求，其中一個比較抽象，是關於文字出現時的動畫效果。我用兩種方式比喻。（一）就像是打字時文字慢慢出現，但不是突然地，而是平滑地由左往右浮現（二）就像是拿橡皮擦由右往左擦時文字消失，然後把這段影像往回播放的樣子</p>
<span id="more"></span>

<h2 id="用-CSS-產生文字擦除效果"><a href="#用-CSS-產生文字擦除效果" class="headerlink" title="用 CSS 產生文字擦除效果"></a>用 CSS 產生文字擦除效果</h2><p>若只是單純的將文字逐步出現的話是相對簡單的，只要將文字元素的母元素套上 <code>overflow: hidden</code>，配合 css animation 改變文字元素的母元素的寬度就好。這是類似效果的範例：</p>
<ul>
<li><a href="http://jsfiddle.net/4srtxofg/">Edit fiddle - JSFiddle - Code Playground</a></li>
</ul>
<p>不過當時我看到的需求說「我想要有一點霧霧的感覺」。一時覺得不曉得該怎麼處理 QQ 後來 google 很久後，看到有人做出很相似的效果，就參考了它的語法。相較於前面 <code>overflow</code> 的掩蓋住溢出的文字與動態改變寬度，後一種則是則是用了 <code>mask</code> 系列的 CSS 屬性。放上範例</p>
<p class="codepen" data-height="265" data-theme-id="light" data-default-tab="css,result" data-user="ayugioh2003" data-slug-hash="oNXGoMp" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="text-erasing-reverse">
  <span>See the Pen <a href="https://codepen.io/ayugioh2003/pen/oNXGoMp">
  text-erasing-reverse</a> by Chiu (<a href="https://codepen.io/ayugioh2003">@ayugioh2003</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>

<p>CSS Masking 真的是很迷的屬性，查了一下 MDN 似乎是跟遮罩相關的屬性，規範在 CSS Masking Module Level 1 中。要不是為了這個文字抹除效果，我大概不會發現這個屬性 orz</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Masking">CSS Masking - CSS: Cascading Style Sheets | MDN</a></li>
</ul>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://medium.com/@polymermallard/pure-css-wiping-gradient-text-reveal-1bbddc2aeb54">https://medium.com/@polymermallard/pure-css-wiping-gradient-text-reveal-1bbddc2aeb54</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/mask-position">https://developer.mozilla.org/en-US/docs/Web/CSS/mask-position</a></li>
<li><a href="https://www.zhangxinxu.com/wordpress/2017/11/css-css3-mask-masks/">https://www.zhangxinxu.com/wordpress/2017/11/css-css3-mask-masks/</a></li>
<li><a href="https://cloud.tencent.com/developer/section/1072181">https://cloud.tencent.com/developer/section/1072181</a></li>
<li><a href="https://stackoverflow.com/questions/39608618/linear-wipe-text-effect-using-css-or-css3-animate/39608663">https://stackoverflow.com/questions/39608618/linear-wipe-text-effect-using-css-or-css3-animate/39608663</a></li>
</ul>
]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
        <tag>接案</tag>
        <tag>接案2019</tag>
      </tags>
  </entry>
  <entry>
    <title>簡單的視差滾動</title>
    <url>/2020/03/parallax-scrolling/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/thSI12p.png" alt="視差滾動示意圖"></p>
<p>在專案開始前，覺得有可能會碰到視差滾動的需求，就先複習了一下。後來雖然有用到一下，但因為需求變更，後來在專案中就把視差滾動效果拿掉了。這邊記錄一下視差滾動的東西。</p>
<h2 id="視差滾動是什麼、它的用處？"><a href="#視差滾動是什麼、它的用處？" class="headerlink" title="視差滾動是什麼、它的用處？"></a>視差滾動是什麼、它的用處？</h2><p>視差滾動就是，讓平面的疊加影像，產生出有層次的移動速率不同的感覺。以現實生活的情境為例，當我們坐在火車上看窗外時，會覺得遠方的景物移動的較慢，近方的景物移動的較快。</p>
<p>視差滾動有什麼好處呢？許多的網頁資訊，都是像貼紙一樣直接擺在畫面上。採用視差滾動效果後，除了會讓人有新鮮的感覺，有時也能突顯出背景與前景的差異。</p>
<span id="more"></span>

<h2 id="在網頁實現視差滾動"><a href="#在網頁實現視差滾動" class="headerlink" title="在網頁實現視差滾動"></a>在網頁實現視差滾動</h2><p>前述提到，視差滾動原理其實就是讓背景和前景的移動速度不同。當時做研究時，大概整理出兩種用原生 CSS、JavaScript 做視差滾動的方式：</p>
<p>一、純 CSS 方案</p>
<p>要簡單快速的實現視差滾動效果，可以用這個純 CSS 方案嚐鮮。</p>
<p>在 CSS 中，有一個屬性是 <code>background-attachment</code>，這屬性用來設定，背景圖片的是要固定在 viewport （視圖，瀏覽器視窗畫面）上，還是背景圖片的 containing block （父層容器）上。</p>
<p>當裝著背景圖的容器元素添加了 <code>background-attachment: fixed;</code> 設定後，背景圖會被固定在 viewport 上。也就是說，當使用者滾動網頁時，背景的移動速度會是零，前景(網頁內容)的移動速度是一般的滾動速度，因此達到視差滾動的效果。</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/background-attachment">background-attachment - CSS | MDN</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10197613">簡單的視差滾動 - iT 邦幫忙：：一起幫忙解決難題，拯救 IT 人的一天</a></li>
<li><a href="https://wcc723.github.io/css/2013/09/25/background-att/">CSS沒有極限 - 意想不到的background-attachment | 卡斯伯 Blog - 前端，沒有極限</a></li>
</ul>
<p>二、混合 JavaScript 方案</p>
<p>雖然前面提到的 CSS 方案可以實現簡單視差滾動效果，但當畫面由多個背景圖疊加，想產生多層次感的視差滾動時，純 CSS 方案就不夠用了。例如，有一個畫面由高山、矮山、人物組成。網頁設計師希望讓使用者滾動網頁時，看到遠景的高山移動很慢、中景的矮山移動稍快，近景的人物移動較快。</p>
<p>而原生 JavaScript 實現視差滾動的觀念是</p>
<ol>
<li><p>抓取需要在視差滾動時移動的圖片元素、並得知目前它們在網頁上 Y 軸方向的座標</p>
</li>
<li><p>監測到使用者讓網頁滾動時，執行一些事情</p>
<ul>
<li>遠景圖片讓他移動距離增加少一點</li>
<li>中景圖片移動距離普通</li>
<li>近景圖片移動距離多一點</li>
</ul>
</li>
</ol>
<p>抓取元素在網頁上的座標有一些 JavaScript API 可以用</p>
<ol>
<li><code>getBoundingClientRect</code>、<code>getClientRects</code> 系列</li>
<li><code>offsetTop</code>、<code>scrollTop</code>、<code>clientTop</code> 系列做運算</li>
</ol>
<p>當圖片位置進入到瀏覽器視窗畫面中時，有這些 JavaScript API 能讓圖片開始移動。不過我只試過第一種，第二種還沒試過。第一種寫法雖比較簡單，但會消耗性能，因為每次使用者滾動時都會觸發這個函式。</p>
<ol>
<li><code>onScroll</code></li>
<li><code>IntersectionObserver</code></li>
</ol>
<p>其他好像還有不少種方式，但先前我研究比較通用的方式就是這兩種了。</p>
<h2 id="相關資料"><a href="#相關資料" class="headerlink" title="相關資料"></a>相關資料</h2><ul>
<li><a href="https://hackmd.io/8ss1-w5sQeyac50zFLUj4A?view">視差滾動研究 - HackMD</a></li>
<li><a href="https://github.com/ayugioh2003/parallax-scrolling-exercise">ayugioh2003/parallax-scrolling-exercise: 視差滾動練習</a></li>
</ul>
]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>CSS</tag>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
        <tag>接案</tag>
        <tag>接案2019</tag>
      </tags>
  </entry>
  <entry>
    <title>在網頁放影片，自動重複播放且靜音</title>
    <url>/2020/03/background-video/</url>
    <content><![CDATA[<p>在先前專案開發時，遇到一個需求是，想在 banner 地方放上一個滿版的重複自動播放影片，播放時不要有聲音。因為之前沒什麼在網頁中放影片的經驗，就研究了一下。</p>
<h2 id="如何達成放上影片的需求"><a href="#如何達成放上影片的需求" class="headerlink" title="如何達成放上影片的需求"></a>如何達成放上影片的需求</h2><p>以下是在參考一些文章後整理出的方法</p>
<ol>
<li>用 <code>&lt;video&gt;</code> tag 引入影片，就像是使用 <code>&lt;img&gt;</code> 引入圖片一樣</li>
<li>在 <code>&lt;video&gt;</code> 添加 autoplay, muted, loop 等屬性，達到自動播放、靜音、循環播放效果</li>
<li>用 CSS 設定將影片滿版</li>
</ol>
<span id="more"></span>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">autoplay</span> <span class="attr">muted</span> <span class="attr">loop</span> <span class="attr">id</span>=<span class="string">&quot;myVideo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;rain.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">#myVideo &#123;</span><br><span class="line"><span class="css">  <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="css">  <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">min-width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="潛在需求"><a href="#潛在需求" class="headerlink" title="潛在需求"></a>潛在需求</h2><p>當時查完資料後，沒有多久完成了符合需求的程式碼。但現在想想，覺得影片播放可能還有一些潛在需求。簡單記錄一下</p>
<ol>
<li>流量問題。這次專案影片大小沒很大，所以直接跟網頁檔案放在一起。但感覺放在 Youtbube、vimeo、或專用伺服器可能會更好？</li>
<li>不同版型的影片。專案時有將影片分成桌機版和手機版影片，我是先在網頁擺兩個 <code>&lt;video&gt;</code> 分別引入桌機版和手機版影片，當使用者使用桌機時則顯示桌機版的影片，使用手機時則顯示手機版影片。不過我不確定這是不是最佳解就是了。</li>
<li>影片的格式。後來把網頁丟去測速時，被建議說換成 webm 格式會更好。這點可能也是要注意的地方。</li>
</ol>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://www.w3schools.com/howto/howto_css_fullscreen_video.asp">How To Create a Fullscreen Video Background</a></li>
<li><a href="https://css-tricks.com/should-i-use-a-video-as-a-background/">Should I use a video as a background? | CSS-Tricks</a></li>
<li><a href="https://web.dev/video-basics/">Going beyond images with basic video for the web</a></li>
<li><a href="https://www.barkweb.co.uk/blog/how-we-added-a-video-background-to-our-home-page">How we add a video background to our home page</a></li>
<li><a href="https://caniuse.com/#search=video">Can I use… Support tables for HTML5, CSS3, etc</a></li>
<li><a href="https://stackoverflow.com/questions/31380695/how-to-open-mov-format-video-in-html-video-tag">html5 - How to open .mov format video in HTML video Tag? - Stack Overflow</a></li>
<li><a href="https://stock.adobe.com/tw/search/video?filters%5Bcontent_type:video%5D=1&order=relevance&safe_search=1&search_page=2&search_type=pagination&acp=&aco=walking+dog&limit=100&k=walking+dog&get_facets=0&asset_id=293514354">Walking dog stock photos, royalty-free images, vectors, video</a></li>
<li>ffmpeg, mov, mp4, webm</li>
</ul>
<p>套件</p>
<ul>
<li><a href="https://originalexe.github.io/vidim/">Vidim - Easy background videos</a></li>
<li><a href="https://www.npmjs.com/package/jquery-youtube-background">jquery-youtube-background - npm</a></li>
<li><a href="https://github.com/pupunzi/jquery.mb.YTPlayer">pupunzi/jquery.mb.YTPlayer: use a custom yutube player for a video as background on jQuery framework</a><ul>
<li><a href="https://designmodo.com/video-background-website/">How to Build a YouTube Video Website Background - Designmodo</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
        <tag>接案</tag>
        <tag>接案2019</tag>
      </tags>
  </entry>
  <entry>
    <title>偵測網頁滾動或元素是否進入到畫面</title>
    <url>/2020/03/detect-scrolling/</url>
    <content><![CDATA[<p>前面幾週提到，當初開發專案時，用碰到視差滾動、或是滾動到某一元素時，就啟動某一個動畫效果。這邊整理一下如何偵測滾動、或是如何偵測元素是否進到畫面。</p>
<p>目前我知道有兩種方式：scroll 事件與 Intersection Observer 這個 Web API。</p>
<span id="more"></span>

<h2 id="一、scroll-事件"><a href="#一、scroll-事件" class="headerlink" title="一、scroll 事件"></a>一、scroll 事件</h2><p>當使用者透過輸入裝置改變網頁畫面高度時，就會觸發 scroll 事件，例如用滑鼠滾輪捲動、左鍵拖曳瀏覽器捲軸、down 方向鍵輸入等等。</p>
<p>可以在 .js 檔中用 (1) <code>addEventListner</code> 來偵測 scroll 事件。若偵測到的話，就在第二個參數傳入一個 function，接著這個 function 會自動執行。或是用 (2) <code>onScroll</code> 來偵測。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一種</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// doSomething()</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 第二種</span></span><br><span class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// doSomething()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Document/scroll_event">scroll - Web APIs | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onscroll">window.onscroll - Web API 接口參考 | MDN</a></li>
</ul>
<h2 id="IntersectionObserver-Web-API"><a href="#IntersectionObserver-Web-API" class="headerlink" title="IntersectionObserver Web API"></a>IntersectionObserver Web API</h2><p>先來個望詞生義。Intersection 意思是「相交處、路口」，Obersever 意思是「觀察者」。假設網頁上有幾個角色：ABC。A 是整個目前看到的畫面(viewport)、B 是在畫面外的元素(例如一張圖片) 、C 是一個只存在 JS 中且不在畫面上出現的觀察者(IntersectionObserver)。當使用者滾動畫面，B 圖片進入 A 畫面範圍時(香蕉時)，C 這個觀察者接受到這個事件發生後，就會去執行某個被設定好的 function。</p>
<p>這是一支我沒用過也不太熟的 API，在撰文的當下其實我不會用 XD。先簡單整理幾個它常被用來處理什麼需求好了：</p>
<ol>
<li>無限滾動，滾到底部自動載入剩下的資訊</li>
<li>圖片的 lazy load</li>
</ol>
<p>爬了 w3c 的一些文，這支 API 好像是 Google 在 2016 年提出構想、在 2017 年提出草案的，目前已經有四個瀏覽器引擎實做了這支 API，分別是 Chromium、Edge、Firefox、Webkit，可以說主流的瀏覽器都支援了這支 API。</p>
<ul>
<li><a href="https://developers.google.com/web/updates/2016/04/intersectionobserver">IntersectionObserver’s Coming into View  |  Web  |  Google Developers</a></li>
<li><a href="https://github.com/w3c/IntersectionObserver">w3c/IntersectionObserver: Intersection Observer</a></li>
<li><a href="https://www.w3.org/TR/2017/WD-intersection-observer-20170914/">Intersection Observer</a></li>
<li><a href="https://github.com/w3c/IntersectionObserver/blob/master/explainer.md">IntersectionObserver/explainer.md at master · w3c/IntersectionObserver</a></li>
</ul>
<h3 id="IntersectionObserver-簡單說明"><a href="#IntersectionObserver-簡單說明" class="headerlink" title="IntersectionObserver 簡單說明"></a>IntersectionObserver 簡單說明</h3><p>假設一個情境好了，即獵人看到鏡頭中出現獵物的話就開槍。那麼偽代碼如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 研發「開槍」技能樹</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> 開槍(<span class="params"></span>)</span>&#123;&#125; </span><br><span class="line"><span class="comment">// 2. 招募一個獵人，跟他說看到畫面中有某個東西跑出來的話就開槍，什麼東西晚點跟你說</span></span><br><span class="line"><span class="keyword">var</span> 獵人 = <span class="keyword">new</span> IntersectionObserver(開槍) </span><br><span class="line"><span class="comment">// 3. 想抓的獵物是誰</span></span><br><span class="line"><span class="keyword">var</span> 獵物 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;兔兔&#x27;</span>)</span><br><span class="line"><span class="comment">// 4. 跟獵人說，看到指定的獵物就開槍</span></span><br><span class="line">獵人.observe(獵物)</span><br></pre></td></tr></table></figure>

<p>除了獵人(觀察者 observer)和獵物(目標 target) 外這兩個重要概念外，還有兩個重要概念：entry 和 option。不過這就等我之後再次遇到這個需求時再慢慢研究好了。有興趣的人可以參考相關資源。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> 獵人 = <span class="keyword">new</span> IntersectionObserver(<span class="function"><span class="keyword">function</span> 開槍(<span class="params">entry</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    time,</span><br><span class="line">    rootBounds,</span><br><span class="line">    boundingClientRect,</span><br><span class="line">    intersectionRect,</span><br><span class="line">    intersectionRatio,</span><br><span class="line">    target</span><br><span class="line">  &#125; = entry</span><br><span class="line">  <span class="comment">// doSomething()</span></span><br><span class="line">&#125;, option = &#123;</span><br><span class="line">  threshold,</span><br><span class="line">  root,</span><br><span class="line">  rootMargin</span><br><span class="line">&#125;) </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> 獵物 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;兔兔&#x27;</span>)</span><br><span class="line">獵人.observe(獵物)</span><br></pre></td></tr></table></figure>


<h2 id="相關資源"><a href="#相關資源" class="headerlink" title="相關資源"></a>相關資源</h2><ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver">Intersection Observer - Web API 接口參考 | MDN</a></li>
<li><a href="https://letswrite.tw/intersection-oserver-basic/#3-true-false-callback">IntersectionObserver：上篇 - 基本介紹及使用 - Front-End - Let’s Write</a></li>
<li><a href="https://letswrite.tw/intersection-oserver-demo/">IntersectionObserver：下篇-實際應用 lazyload、進場效果、無限捲動 - Front-End - Let’s Write</a></li>
<li><a href="https://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html">IntersectionObserver API 使用教程 - 阮一峰的網絡日志</a></li>
<li><a href="https://juejin.im/post/5d11ced1f265da1b7004b6f7">超好用的API之IntersectionObserver - 掘金</a></li>
<li><a href="https://alligator.io/js/intersection-observer/">Using the Intersection Observer API to Trigger Animations and Transitions</a></li>
<li><a href="https://shubo.io/intersection-observer-api/">[教學] 如何用 Intersection Observer API 實作 Infinite Scroll/Lazy Loading</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API/Timing_element_visibility">Timing element visibility with the Intersection Observer API - Web APIs | MDN</a></li>
<li><a href="https://shubo.io/intersection-observer-api/">[教學] 如何用 Intersection Observer API 實作 Infinite Scroll/Lazy Loading</a></li>
</ul>
]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>w3HexSchool</tag>
        <tag>w3Hexschool-2020-challenge</tag>
        <tag>接案</tag>
        <tag>接案2019</tag>
      </tags>
  </entry>
  <entry>
    <title>關於心理測驗〈五大性格特質〉</title>
    <url>/2020/07/about-big-five-personality-traits/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/bKonbmO.png" alt="我的英雄學院三巨頭 Big Three，用來當作 Big Five 的示意圖"></p>
<blockquote>
<p>J 個是 Big Three，不是 Big Five</p>
</blockquote>
<p>最近幫忙做了一份簡版的心理測驗，想說來做個介紹</p>
<p>先發布出來佔個坑，之後慢慢補上文章內容</p>
<span id="more"></span>

<h2 id="五大性格特質理論簡介"><a href="#五大性格特質理論簡介" class="headerlink" title="五大性格特質理論簡介"></a>五大性格特質理論簡介</h2><p>五大性格特質（Big Five Personality traits）是一個心理學領域的性格/人格理論。在經過好幾年的研究論文討論後，一些研究者認為人類有五個比較顯著的特質，分別是：</p>
<ul>
<li>經驗開放性（Openness to experience）</li>
<li>盡責性（Conscientiousness）</li>
<li>外向性（Extroversion）</li>
<li>親和性（Agreeableness）</li>
<li>情緒不穩定性（Neuroticism）</li>
</ul>
<h2 id="五大性格特質向度"><a href="#五大性格特質向度" class="headerlink" title="五大性格特質向度"></a>五大性格特質向度</h2><p>剛剛列舉的五項人格特質向度，又可以各自細分成更小的特質</p>
<ul>
<li>經驗開放性：經驗開放性又可以細分成想像力、審美、感受豐富、嚐鮮、思辨、價值觀等細項</li>
<li>盡責性：盡責性又可細分成能力、條理性、責任感、追求成就、自律、審慎等細項</li>
<li>外向性：外向性又可細分成熱情、樂群性、獨斷性、活力、尋求刺激、積極情緒等細項</li>
<li>親和性：親和性又可細分成信任、坦承、利他、順從、謙遜、同理心等細項</li>
<li>情緒不穩定性：情緒不穩定性又可細分成焦慮、憤怒與敵意、抑鬱、自我意識、衝動性、脆弱性等細項</li>
</ul>
<p>人格特質向度意思是，有高程度傾向與低程度傾向之分。例如，經驗開放性程度高的人對新環境、陌生事物的接受度可能較高，經驗開放性程度低的人可能比較保守，比較不喜歡抽象性思考。</p>
<p>要如何得知一個人在各個特質向度上的程度？可以透過根據 Big Five 理論設計的心理測驗得到分數，再依據分數的高低分來判別一個人在各向度上的程度傾向，最後依據 Big Five 理論解讀在不同程度傾向時，一個人的性格特質可能會是如何。</p>
<h2 id="五大性格特質測驗用途"><a href="#五大性格特質測驗用途" class="headerlink" title="五大性格特質測驗用途"></a>五大性格特質測驗用途</h2><p>當透過測驗得知一個人的五大性格特質後，就可以依據結果來做一些用途。以下是我想到的一些：</p>
<p>一、單純得知一個人的五大性格特質。光是知道一個人的五大性格特質這件事情，就可以是一個用途。用在自己身上，就能當作覺察自己是一個帶有什麼性格的人，可以用來提醒自己。當用在別人身上時，也能夠藉此知道自己該如何跟他做互動等等。</p>
<p>二、與其他的有興趣的指標做連結。例如，與學業成就做連結，就能得知帶有什麼性格特質的人可能學業成就比較好。其他也有人拿學習風格、學習動機、工作表現等指標來跟五大性格特質做連結。例如，當老師知道某個學生的性格特質可能讓他學習動機較低，就能提前規劃並額外花心力提高他的學習動機。</p>
<h2 id="科普：心理學理論與心理學測驗"><a href="#科普：心理學理論與心理學測驗" class="headerlink" title="科普：心理學理論與心理學測驗"></a>科普：心理學理論與心理學測驗</h2><p>心理學理論和心理學測驗是相關但不是完全劃上等號的觀念。這概念有點像是，<del>周潤發和周星馳的關係</del> 中式料理與中式料理廚具之間的關係，即想吃一些中式料理如小籠包時會用到蒸籠。雖然小籠包跟蒸籠關係緊密，但蒸籠只是個用來處理料理的工具，而不是料理本身。</p>
<p>在本文中，五大性格特質（The Big Five Personality Traits）是一種心理學的性格理論，而用來得知五大性格特質的測驗沒有特別命名的話，就會統稱為五大性格特質。但其中有一個比較有名的測驗，叫 NEO（Neuroticism-Extraversion-Openness Inventory），它的修改版叫 NEO PI-R（Revised NEO Personality Inventory)。</p>
<h2 id="科普：心理測驗編制"><a href="#科普：心理測驗編制" class="headerlink" title="科普：心理測驗編制"></a>科普：心理測驗編制</h2><p>依我個人的體感評估，目前網路上常見的「<a href="https://www.dcard.tw/topics/%E5%BF%83%E7%90%86%E6%B8%AC%E9%A9%97">心理測驗</a>」有 99% 不是心理學上領域在用的心理測驗，我比較傾向叫做「趣味測驗」（後面也這樣稱呼）。那兩者之間有什麼差別呢？以下列舉幾個差別：</p>
<p>一、根據的理論。在心理學領域使用的心理測驗，通常背後有一個被研究者社群支持的心理學理論。心理測驗中的每個問題都可以回扣到心理學理論中的某個概念。而趣味測驗背後比較少有嚴謹的理論支持。</p>
<p>二、題目的編制。在心理學領域使用的心理測驗，通常不會只有一兩個問題，而是需要根據心理學的理論與概念去設計許多子問題，讓分數可以回推到理論觀念，反映出結果。一些趣味測驗則會有一兩個問題就能得到結果的狀況。</p>
<p>三、測驗的穩定性。使用工具時，我會希望它的輸出結果是穩定的，並且出貨全廠商有經過品質檢驗。例如沖馬桶水，水能剛好帶走便便，而不會讓家裡大淹水。當研究者編制心理測驗時，該測驗也需要經過品質。以溫度計比喻的話，就是新款溫度計的量測結果需要跟它款信譽高的溫度計結果差不多、以及新款溫度計在任意時間點對某固定溫度物體的量測結果都差不多。一個堪用的心理測驗製作過程曠日費時，而非學術用途的趣味測驗只要有趣、有意思就好。</p>
<h2 id="延伸閱讀"><a href="#延伸閱讀" class="headerlink" title="延伸閱讀"></a>延伸閱讀</h2><p>五大性格特質</p>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E4%BA%94%E5%A4%A7%E6%80%A7%E6%A0%BC%E7%89%B9%E8%B4%A8">五大性格特質 - 維基百科，自由的百科全書</a></li>
<li><a href="https://en.wikipedia.org/wiki/Big_Five_personality_traits#History">Big Five personality traits - Wikipedia</a></li>
<li><a href="http://psych.colorado.edu/~carey/courses/psyc5112/readings/psnstructure_goldberg.pdf">Goldberg LR (May 1980) The structure of phenotypic personality traits.</a></li>
<li><a href="https://en.wikipedia.org/wiki/Revised_NEO_Personality_Inventory">Revised NEO Personality Inventory - Wikipedia</a></li>
</ul>
<p>Big Five 線上仿製版本</p>
<ul>
<li><a href="https://meetype.com/bigfive-test">大五人格測驗 2018最新版 (Big5 Test) | Meetype</a></li>
<li><a href="https://tw.dice4rich.com/quiz-pro.jsp?id=5774560712458240">大五人格測驗 (Big Five)</a></li>
</ul>
<p>心理測驗編制/量表編制</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Psychological_testing">Psychological testing - Wikipedia</a></li>
<li><a href="https://wiki.mbalib.com/zh-tw/%E5%BF%83%E7%90%86%E6%B5%8B%E8%AF%95">心理測試 - MBA智库百科</a></li>
<li><a href="https://dasanlin888.pixnet.net/blog/post/34467731">量表編製的方法 @ 晨晰統計部落格新站（統計、SPSS、BIG DATA討論園地） :: 痞客邦 ::</a></li>
<li><a href="https://coggle.it/diagram/WZO6GxCW-AABIRne/t/%E9%87%8F%E8%A1%A8%E7%B7%A8%E5%88%B6">量表編制</a></li>
<li><a href="https://physical.ntsu.edu.tw/var/file/12/1012/img/451/004.pdf">問卷與量表的編製及分析方法</a></li>
</ul>
]]></content>
      <categories>
        <category>psychology</category>
      </categories>
      <tags>
        <tag>psychology</tag>
      </tags>
  </entry>
  <entry>
    <title>前端接案開發流程與心得 2019-2021</title>
    <url>/2021/03/frontend-case-2019-to-2021/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因為剛好六角有徵文活動，想說順便整理一下這陣子以來接案的開發流程與心得。</p>
<h2 id="目前參與過的專案"><a href="#目前參與過的專案" class="headerlink" title="目前參與過的專案"></a>目前參與過的專案</h2><p>我從 2019 年的 10 月左右開始接案，到目前為止經手過三個案子。第一個案子是幫國外公司建立形象官網(從頭到尾參與)、第二個案子是幫一個國內公司後台畫面切板(只參與前半部)、第三個案子則是進行到一半的案子，在既有架構上幫忙增加新頁面或功能(從中間開始參與)。</p>
<span id="more"></span>

<h3 id="第一個案子-2019-08-2020-01"><a href="#第一個案子-2019-08-2020-01" class="headerlink" title="第一個案子 2019.08-2020.01"></a>第一個案子 2019.08-2020.01</h3><p>第一個案子是幫國外公司建立形象官網，開發團隊這端有前端工程師(我)，Roy(身兼PM、後端工程師、後台的前端工程師 XD)、以及當時我家裡有事情來幫忙救火的 Ray。我負責前台部份的切板與動畫效果，大概有十幾頁。</p>
<p>當時前端部份，我選用的技術如下：</p>
<ul>
<li>gulp (自動化建構)</li>
<li>EJS (能複用 HTML 片段)</li>
<li>SCSS (方便處理 CSS)</li>
<li>BootStrap (有現成的元件、Utilities)</li>
<li>Vue (讓資料與畫面關注點分離，方便開發)</li>
<li>webpack (當時用來處理 JS 的 module)</li>
</ul>
<p>當時結案後，有寫過心得文</p>
<ul>
<li><a href="https://ayugioh2003.github.io/2020/02/first-frontend-case/">第一次前端接案打王(被王打)的心得 | 小麥前端 blog</a></li>
</ul>
<h3 id="第二個案子-2020-08-2020-10"><a href="#第二個案子-2020-08-2020-10" class="headerlink" title="第二個案子 2020.08-2020-10"></a>第二個案子 2020.08-2020-10</h3><p>第二個案子是幫國內公司建立官方網站，這裡我負責後台的 ERP 網站切板。</p>
<p>當時前端部份，我選用的技術如下：</p>
<ul>
<li>Vue Cli (因為後台不須處理 SEO，SPA 就夠用了)</li>
<li>Express (因為會需要佈署到雲端，所以簡單起個 server)</li>
<li>vuetify (因為設計稿偏向 material 設計，我比較目前現有的 CSS/vue元件 框架後，決定採用 vuetify)</li>
</ul>
<p>因為以切板為主，沒用到太多的技術工具。不過需要刻出許多能複用的 vue 元件，vue 的語法倒是練習到不少。</p>
<h3 id="第三個案子-2020-01-2021"><a href="#第三個案子-2020-01-2021" class="headerlink" title="第三個案子 2020.01-2021."></a>第三個案子 2020.01-2021.</h3><p>第三個案子，我進去時已經開發到一半了，不是從頭開始。同時有數個網站，有前台也有後台部份。我主要是幫忙在既有基礎上添加新畫面、串接功能，或是修復 bug。</p>
<p>當時前端部份，有使用的技術有：</p>
<ul>
<li>vue (因為網站不太需要 SEO，因此用 vue 開發)</li>
<li>ant design vue (一種 vue UI 元件庫)</li>
<li>vuetify (一種 vue UI 元件庫)</li>
<li>vuex-map-fields (特別寫出來，能方便 vuex 操作)</li>
<li>electron-vue (這案子有桌面應用需求)</li>
</ul>
<h2 id="工作流程整理"><a href="#工作流程整理" class="headerlink" title="工作流程整理"></a>工作流程整理</h2><p>因為進行了三個案子，中間又剛好買了新筆電需要重建開發環境，對於前端開發的工作流程有了一些底。以下是我的一些整理</p>
<h3 id="建構前端開發環境"><a href="#建構前端開發環境" class="headerlink" title="建構前端開發環境"></a>建構前端開發環境</h3><p>為了在專案中能舒舒服服的進行開發，有完善的開發環境是必須的。以下是我個人的開發環境</p>
<ul>
<li>作業系統 windows：硬體 CP 值高。但 MB 最近的 M1 晶片聽說很香，之後會考慮</li>
<li>Windows Terminal：比 cmd 好看，能客製化樣式，有支援 git 狀態，讚讚</li>
<li>軟體包管理器 chocolatey：方便我安裝一些軟體工具)</li>
<li>版本控制 git：方便協作開發</li>
<li>nodejs 與 npm：用來裝前端相關的套件</li>
<li>編輯器 vscode：除了開源，還有豐富的套件生態系</li>
<li>瀏覽器 Chrome：現代化的瀏覽器，方便測試現代化前端技術寫出來的網頁。內建 dev tools、以及能安裝 vue tools 方便測試</li>
</ul>
<h3 id="專案啟動初期-剛進入專案"><a href="#專案啟動初期-剛進入專案" class="headerlink" title="專案啟動初期/剛進入專案"></a>專案啟動初期/剛進入專案</h3><p>當進入到專案後，我習慣會自己開個文件，記錄專案開始與專案結束期間的各種事情。例如：</p>
<ul>
<li>記錄專案名稱、專案目的、專案範圍、開發團隊人員：讓自己對這個專案的規模有個底</li>
<li>整理使用技術、專案可參考資源、設計稿、API 文件：方便自己開發，不用到處找</li>
</ul>
<p>之前我是用 hackmd 記錄，現在比較偏好使用 notion。</p>
<h3 id="開發中"><a href="#開發中" class="headerlink" title="開發中"></a>開發中</h3><p>在開發中，我習慣再開一份文件寫自己遇到的技術與解決方案。雖然遇到很多 bug 或技術難題時會想撞牆，但能解決的話，就會內化成自己的養分。</p>
<p>除了在前端的難題外，也會遇到流程上、畫面上，或是 API 串接上的問題；這時就會需要請教 PM、後端，或是其他前端。像在第三個專案，算是我第一次需要與其他人頻繁協作，這時我就養成詢問前，先自己測試過一遍，之後附上說明文字，像是操作情境、所在頁面、操作流程，最後附上截圖或是影片，方便對方理解。必要時也會用電話聯絡的方式來加速溝通理解過程。</p>
<h3 id="結案"><a href="#結案" class="headerlink" title="結案"></a>結案</h3><p>寫個心得/檢討文記錄一下，像是這篇心得文</p>
<ul>
<li><a href="https://ayugioh2003.github.io/2020/02/first-frontend-case/">第一次前端接案打王(被王打)的心得 | 小麥前端 blog</a></li>
</ul>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>這次整理文寫得比較簡略，也算是幫自己做一個回顧。</p>
<p>BTW，話說我 hexo 也好久沒用了，剛剛才發現我 github 上沒有最新的備份，最新的文章還留在快壞掉的舊筆電上 orz。趁著還能開機時趕快備份出來 XD</p>
<hr>
<p>此文參與 <a href="https://www.hexschool.com/">六角學院</a> 的 <a href="https://www.hexschool.com/2021/03/08/2021-03-08-ox-year-call-for-papers/">哞職順利｜徵文活動</a>。</p>
<p>若有在<a href="https://www.facebook.com/groups/110635703123103">六角學院的學員臉書社團</a>中，也可以瞧瞧其他人的<a href="https://www.facebook.com/groups/110635703123103/permalink/887938915392774/">投稿文</a></p>
]]></content>
  </entry>
  <entry>
    <title>前端面試準備 2021</title>
    <url>/2021/03/frontend-interview-perparation-2021/</url>
    <content><![CDATA[<h1 id="前端面試準備-2021"><a href="#前端面試準備-2021" class="headerlink" title="前端面試準備 2021"></a>前端面試準備 2021</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我目前已經以前端工程師的身份工作一年了，但我其實還沒面試過。在目前的案子結束後，預計想找個在公司上班的正職工作。以下是我規劃的前端面試準備。</p>
<h2 id="一、前端生涯規劃"><a href="#一、前端生涯規劃" class="headerlink" title="一、前端生涯規劃"></a>一、前端生涯規劃</h2><p><img src="https://i.imgur.com/2V7QvMA.jpg"></p>
<p>在深入面試細節之前，我會希望先站在高處鳥瞰全局。因此，每個面試行動，應該會是整個生涯規劃的一部分。</p>
<p>我自己有針對此開了一個 notion 文件，從學習面、求職面、成長面、職涯面做整理，讓自己的每一步都盡量被記錄下來。</p>
<p>另外也可以參考六角的這篇文章：<a href="https://www.hexschool.com/qa/how-to.html">邁向前端工程師 / 設計師之路 | 六角學院</a></p>
<span id="more"></span>

<h2 id="二、整理作品集"><a href="#二、整理作品集" class="headerlink" title="二、整理作品集"></a>二、整理作品集</h2><p>目前我預計的作品集有這些：</p>
<ol>
<li>六角 vue 課程的最終作品</li>
<li>在 f2e 精神時光屋 上的電商網站 (進度八十趴)</li>
<li>筆電價格規格查詢 (已有成品，考慮要不要重寫)</li>
</ol>
<p>在 notion 文件中，我也有整理一些適合當作品集的來源，例如</p>
<ul>
<li>時事、生活需求</li>
<li>模仿網站</li>
<li>觀察 Open API 想靈感</li>
<li>F2E 前端修煉精神時光屋</li>
</ul>
<h2 id="三、整理履歷"><a href="#三、整理履歷" class="headerlink" title="三、整理履歷"></a>三、整理履歷</h2><p>目前整理下來，履歷大概可分為這些結構</p>
<ol>
<li>個人介紹：名字、希望職稱、聯絡資訊、所在地點、簡介</li>
<li>技能</li>
<li>工作經歷</li>
<li>作品</li>
<li>學歷</li>
</ol>
<p>我預計會在 CakeResume 上放自己的履歷，有在想要不要另外自己客製化。除此之外也有在 notion 上整理其他人的履歷、以及如何寫履歷的分享。</p>
<p>之後應該也會將履歷貼到六角社群討論，或是請教六角的老師。</p>
<h2 id="四、蒐集興趣職缺"><a href="#四、蒐集興趣職缺" class="headerlink" title="四、蒐集興趣職缺"></a>四、蒐集興趣職缺</h2><p>我目前想到出來的興趣職缺條件如下</p>
<ul>
<li>月薪 47000 以上</li>
<li>地點在台北、新北、桃園</li>
<li>工作內容希望偏向 JS，切板成份較少</li>
<li>技術有使用到 vue</li>
</ul>
<p>目前我蒐集職缺的來源舉例如下</p>
<ul>
<li>臉書社團 (如 front-end developers Taiwan)</li>
<li>PTT SoftJob</li>
<li>CakeResume</li>
<li>yourator</li>
</ul>
<p>同時這些也有整理到自己 notion 文件中。</p>
<h2 id="五、面試題"><a href="#五、面試題" class="headerlink" title="五、面試題"></a>五、面試題</h2><p>面試題我目前想到可以分成幾種成份：</p>
<ul>
<li>技術面</li>
<li>合作溝通面</li>
</ul>
<p>技術面的部份，平常有在看社群的貼文，應該會有一些概念。我之後也會去練一下。</p>
<p>合作溝通面部份，可能要事先回顧自己的開發經驗，預先找出自己優勢與劣勢的部份。優勢部份可以趁適合的時機提出，劣勢的部份則是被提問到時要想辦法化險為夷。</p>
<h2 id="六、投遞履歷"><a href="#六、投遞履歷" class="headerlink" title="六、投遞履歷"></a>六、投遞履歷</h2><p>這部份我想到可以注意的點有這些</p>
<ol>
<li>盡量投遞：通常 投遞數 &gt; 接到面試數 &gt; 接到 offer 數。就像是漏斗的概念，前面投遞數量有了，最後能接到 offer 才有數量可以選擇</li>
<li>Email 用語：不要使用像聊天軟體的用語，使用偏書面語的詞彙，這樣才不會被認為態度太輕挑 </li>
</ol>
<h2 id="七、搜尋租屋資訊"><a href="#七、搜尋租屋資訊" class="headerlink" title="七、搜尋租屋資訊"></a>七、搜尋租屋資訊</h2><p>這部份我還沒有仔細找。目前有先加入台北租屋資訊交流的社團中</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>雖然先前有過碩班、實習的面試經驗，但感覺和工作的面試還是會不太相同，就算做了整理準備還是紙上談兵。看來還是得實際面試後才能真切體會到呢。</p>
<hr>
<p>此文參與 <a href="https://www.hexschool.com/">六角學院</a> 的 <a href="https://www.hexschool.com/2021/03/08/2021-03-08-ox-year-call-for-papers/">哞職順利｜徵文活動</a>。</p>
<p>若有在<a href="https://www.facebook.com/groups/110635703123103">六角學院的學員臉書社團</a>中，也可以瞧瞧其他人的<a href="https://www.facebook.com/groups/110635703123103/permalink/887938915392774/">投稿文</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo deploy 失敗，版本 node14，訊息：The &quot;mode&quot; argument must be integer…</title>
    <url>/2021/03/hexo-deploy-fail-at-node14/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近為了徵文活動，想重新啟用 hexo 部落格。結果發現使用 <code>hexo deploy</code> 指令時出錯了 orz。</p>
<span id="more"></span>

<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>使用錯誤訊息關鍵字找了一下，好像是 hexo-cli 2.0.0 不支援 node14+ 的樣子。悲劇。</p>
<p>文章提供了兩個解決方案</p>
<ol>
<li>降低 node 版本</li>
<li>升級到 <a href="mailto:&#x68;&#x65;&#x78;&#111;&#x40;&#x34;&#x2e;&#50;&#46;&#x31;">&#x68;&#x65;&#x78;&#111;&#x40;&#x34;&#x2e;&#50;&#46;&#x31;</a>+</li>
</ol>
<p>因為我的新筆電有安裝 nvm，切換 node 環境很方便，我就採用方案一，將 node 版本切換到穩定板 node 12 了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm use 12.18.3</span><br></pre></td></tr></table></figure>

<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>覺得自己除錯的功力有一點進步了呢。想當初第一次用 hexo 時，完全看不懂該怎麼用，現在竟然一個指令就能解決錯誤訊息了，真是令人感慨呢（？）。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://evestorm.github.io/posts/430/">node14+版本下 hexo 部署失败 | EVE | 暴风雨前夕</a></li>
<li><a href="https://www.google.com/search?q=TypeError+%5BERR_INVALID_ARG_TYPE%5D:+The+%22mode%22+argument+must+be+integer.+Received+an+instance+of+Object&rlz=1C1CHBF_zh-TWTW911TW911&oq=TypeError+%5BERR_INVALID_ARG_TYPE%5D:+The+%22mode%22+argument+must+be+integer.+Received+an+instance+of+Object&aqs=chrome..69i57.590j0j7&sourceid=chrome&ie=UTF-8">TypeError [ERR_INVALID_ARG_TYPE]: The “mode” argument must be integer. Received an instance of Object - Google 搜尋</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>在 2021 年重拾 hexo 部落格</title>
    <url>/2021/04/restart-hexo-blog-2021/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前幾天因為六角學院舉辦了徵文比賽，為了有個文章的網址可以投稿，我重新開啟了這個佈滿灰塵的 hexo 部落格。不過，因為重啟過程中，遇到了一些障礙，而且 hexo 好像已經有 hexo 5 版本了，我想說那就花點時間來升級吧。本文簡單記錄一下我為了升級處理的東西。</p>
<p>主要參考資料是 Ray 的 <a href="https://ithelp.ithome.com.tw/users/20119486/ironman/2944">試著學 Hexo :: 第 12 屆 iT 邦幫忙鐵人賽</a> 系列。</p>
<span id="more"></span>

<h2 id="參考的部份"><a href="#參考的部份" class="headerlink" title="參考的部份"></a>參考的部份</h2><ul>
<li>升級到 hexo5<ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10253367">試著學 Hexo-番外篇之更新 Hexo - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
</ul>
</li>
<li>更新 NexT 主題<ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10254054">試著學 Hexo-番外篇之更新 NexT 主題 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10246631">(17) 試著學 Hexo - NexT 主題篇 - NexT - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10248682">(21) 試著學 Hexo - NexT 主題篇 - NexT 還有哪些設定？ - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
</ul>
</li>
<li>第三方服務、套件<ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10247520">(19) 試著學 Hexo - NexT 主題篇 - 第三方服務 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10248214">(20) 試著學 Hexo - NexT 主題篇 - 可以安裝的套件 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
</ul>
</li>
<li>Github Actions<ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10251504">(27) 試著學 Hexo - 奇淫技巧 - 自動化部屬(GitHub Actions) - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
</ul>
</li>
</ul>
<h2 id="Google-Adsense"><a href="#Google-Adsense" class="headerlink" title="Google Adsense"></a>Google Adsense</h2><p>之前 NexT 舊版本的模板語言是 swig 或 EJS，現在改成用 njk 了。</p>
<p>Ray</p>
<ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10252653">(30) 試著學 Hexo - 奇淫技巧 - 財富自由 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10254054">試著學 Hexo-番外篇之更新 NexT 主題 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
</ul>
<p>其他</p>
<ul>
<li><a href="https://hsiangfeng.github.io/hexo/20190703/893132670/">替 Hexo NexT 增加 Google AdSense | Welcome.Web.World</a></li>
<li><a href="https://blog.typeart.cc/hexo%20NexT%E4%B8%BB%E9%A1%8C%E5%A2%9E%E5%8A%A0AdSense/">hexo NexT主題增加AdSense | 只是個打字的</a></li>
<li><a href="https://www.boris1993.com/others/hexo-next-enable-google-adsense.html">在 NexT 主题中接入 Google AdSense | Code Life</a></li>
</ul>
<h2 id="GA"><a href="#GA" class="headerlink" title="GA"></a>GA</h2><ul>
<li><a href="https://jimmywei01.github.io/2019/05/09/%E4%BD%BF%E7%94%A8GA%E6%9B%BF%E7%B6%B2%E7%AB%99%E4%BD%9C%E5%88%86%E6%9E%90/">使用GA替網站作分析 | Jimmy’s Blog</a></li>
<li><a href="https://op30132.github.io/2019/12/27/hexo-google-analysis/">Hexo 加上 Google analysis | Winnie’s blog</a></li>
</ul>
<h2 id="模板處理"><a href="#模板處理" class="headerlink" title="模板處理"></a>模板處理</h2><ul>
<li><a href="https://weilining.github.io/925-1.html">Hexo NexT 添加近期文章功能 | Ln’s Blog</a></li>
</ul>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>在瀏覽器上寫 hexo blog</title>
    <url>/2021/10/write-hexo-blog-in-browser/</url>
    <content><![CDATA[<p>之前一直覺得點開 vscode 寫文章有點麻煩，因為到了新環境還要 clone 專案、下載 vscode</p>
<p>今天有心情想寫文章，忽然想起 github 有提供線上 vscode 可以用，想說就來試用看看好了</p>
<span id="more"></span>

<h2 id="一、在-package-json-添加新增文章指令"><a href="#一、在-package-json-添加新增文章指令" class="headerlink" title="一、在 package.json 添加新增文章指令"></a>一、在 package.json 添加新增文章指令</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;new&quot;</span>: <span class="string">&quot;hexo new&quot;</span>,</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>之後就可以用 <code>npm run new -- 文章標題</code> 創建新文章</p>
<h2 id="二、在線上編輯器-codespaces-操作"><a href="#二、在線上編輯器-codespaces-操作" class="headerlink" title="二、在線上編輯器 codespaces 操作"></a>二、在線上編輯器 codespaces 操作</h2><p>參考 <a href="https://github.com/features/codespaces">GitHub Codespaces</a></p>
<h2 id="二、設定-github-action，自動更新文章"><a href="#二、設定-github-action，自動更新文章" class="headerlink" title="二、設定 github action，自動更新文章"></a>二、設定 github action，自動更新文章</h2><p>我之前就有設定 github action，可以偵測 master 分支更新時，就能自動 deploy 部落格</p>
<p>可參考 <a href="https://op30132.github.io/2020/02/05/github-action/">Hexo + github actions 自動化部署 | Winnie’s blog</a></p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://hexo.io/zh-tw/docs/writing.html">寫作 | Hexo</a></li>
<li><a href="https://wayou.github.io/2020/08/20/npm-script-%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0/">npm script 中使用命令行参数</a></li>
</ul>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>zsh 環境讀取不到 nvm</title>
    <url>/2021/10/zsh-command-not-found/</url>
    <content><![CDATA[<p>最近到新公司後，有配到一台 mac pro 可以用，想當然遇到了不少環境設定問題。其中一個區塊是 bash/zsh 的環境處理，底下又有很多子問題，像是</p>
<ol>
<li>zsh 抓不到一些安裝的套件，例如 nvm</li>
<li>vscode 打開時，會出現 shell 環境載入太慢的提示訊息</li>
</ol>
<p>以下是我嘗試解決的方式</p>
<span id="more"></span>

<h2 id="一、先打開-bashrc-檔案"><a href="#一、先打開-bashrc-檔案" class="headerlink" title="一、先打開 .bashrc 檔案"></a>一、先打開 .bashrc 檔案</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc <span class="comment"># 用 vim 打開</span></span><br><span class="line">code ~/.bashrc <span class="comment"># 用 vscode 打開</span></span><br></pre></td></tr></table></figure>

<h2 id="二、在-bashrc-檔案添加指令"><a href="#二、在-bashrc-檔案添加指令" class="headerlink" title="二、在 .bashrc 檔案添加指令"></a>二、在 .bashrc 檔案添加指令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> load-nvm &#123;</span><br><span class="line">  <span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line">  [ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">  [ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="comment"># This loads nvm bash_completion</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;x<span class="variable">$&#123;TERM_PROGRAM&#125;</span>&quot;</span> = <span class="string">&quot;xvscode&quot;</span> ]]; <span class="keyword">then</span> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;in vscode, nvm not work; use `load-nvm`&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">  load-nvm</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>如果只是要在 CLI 中能使用 nvm 的話，只要 <code>function load-nvm</code> 裡面的指令就好</p>
<p>但為了處理 vscode 開啟時 shell 環境載入太慢的緣故，則多了下面是不是 vscode 環境的判斷</p>
<h2 id="三、打開-zshrc-檔案"><a href="#三、打開-zshrc-檔案" class="headerlink" title="三、打開 .zshrc 檔案"></a>三、打開 .zshrc 檔案</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">code ~/.zshrc</span><br></pre></td></tr></table></figure>

<h2 id="四、在-zshrc-檔案添加指令"><a href="#四、在-zshrc-檔案添加指令" class="headerlink" title="四、在 .zshrc 檔案添加指令"></a>四、在 .zshrc 檔案添加指令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 載入 ~/bashrc 的指令</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>因為我想讓 bash 相關的指令，都在 bashrc 處理，所以就這樣引入處理了</p>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>覺得 mac 的環境設定有點麻煩呢<br>好像有點體會到 unix-like 中提到的「萬物皆文件」的說法了</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://ithelp.ithome.com.tw/questions/10198735">zsh: command not found: nvm - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>
</ul>
]]></content>
      <tags>
        <tag>mac</tag>
        <tag>zsh</tag>
      </tags>
  </entry>
  <entry>
    <title>git 在 windows 上的錯誤訊息：invalid path</title>
    <url>/2021/11/git-error-invalid-path-on-windows/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有時我會在家中操作公司的專案。今天在家上班想 git clone 公司專案時，卻出現 <code>error: invalid path &#39;_scripts/update_build:dev.sh</code> 的訊息。在公司時，我是用 macbook 操作專案，在家則是用 windows 筆電操作。以下是解決過程</p>
<h2 id="問題點"><a href="#問題點" class="headerlink" title="問題點"></a>問題點</h2><p>因為 unix-like (macos) 系統的檔名對字元的限制比較寬鬆，而 windows 系統則比較嚴格。<a href="https://stackoverflow.com/questions/1976007/what-characters-are-forbidden-in-windows-and-linux-directory-names">根據 stackOverflow 上的網友表示</a>，unix-like 只有限制不能使用 <code>/ (forward slash)</code> 字元作為檔名。而 windows 則有以下的檔名字元限制清單</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">&lt; (less than)</span><br><span class="line">&gt; (greater than)</span><br><span class="line">: (colon - sometimes works, but is actually NTFS Alternate Data Streams)</span><br><span class="line">&quot; (double quote)</span><br><span class="line">/ (forward slash)</span><br><span class="line">\ (backslash)</span><br><span class="line">| (vertical bar or pipe)</span><br><span class="line">? (question mark)</span><br><span class="line">* (asterisk)</span><br></pre></td></tr></table></figure>

<h2 id="解決方式"><a href="#解決方式" class="headerlink" title="解決方式"></a>解決方式</h2><p>其中最簡單的解決方式是，取檔名時迴避 unix-like 跟 windows 系統限制的字元。以我的狀況為例，我有一個 <code>update_build:dev.sh</code> 檔案，其中的 <code>:</code> 字元是 windows 系統檔名的限制字元。把 <code>:</code> 改成 <code>_</code> 後，git clone 就能順利執行了</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p>windows 官方</p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file">Naming Files, Paths, and Namespaces - Win32 apps | Microsoft Docs</a></li>
</ul>
<p>其他</p>
<ul>
<li><a href="https://dianwu.medium.com/git-%E9%81%87%E4%B8%8A%E7%89%B9%E6%AE%8A%E6%AA%94%E5%90%8D%E9%9B%A3%E9%A1%8C-bbcda929e8c7">Git 遇上特殊檔名難題. 今天突難遇到了一個在 windows 上 Git clone… | by Dian | Medium</a></li>
<li><a href="https://stackoverflow.com/questions/1976007/what-characters-are-forbidden-in-windows-and-linux-directory-names">What characters are forbidden in Windows and Linux directory names? - Stack Overflow</a></li>
</ul>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery 抓 DOM 上的 data-id 資料，但卻是舊的</title>
    <url>/2022/01/jquery-data-get-old-value/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天幫作後台的同事看 bootstrap 的 modal 傳值處理，想說用 jquery 去接跟傳 data-id 的值，突然發現第二筆資料以後的值沒有被更新。以下探討解決的過程</p>
<span id="more"></span>

<h2 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 編輯的 Modal 事件</span></span><br><span class="line">  $(<span class="string">&#x27;#editModal&#x27;</span>).on(<span class="string">&#x27;show.bs.modal&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> btn = $(event.relatedTarget)</span><br><span class="line">    <span class="keyword">var</span> title = btn.data(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">    <span class="keyword">var</span> modal = $(<span class="built_in">this</span>)</span><br><span class="line">    modal.find(<span class="string">&#x27;.modal-title&#x27;</span>).text(title)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get hidden input</span></span><br><span class="line">    <span class="keyword">var</span> tr = btn.parent().parent().parent()</span><br><span class="line">    <span class="keyword">var</span> hiddenInput = tr.find(<span class="string">&#x27;td input&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;hiddenInput&#x27;</span>, hiddenInput)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get id from hidden_input &amp; set id to modal span</span></span><br><span class="line">    <span class="keyword">var</span> id = hiddenInput.value</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;id&#x27;</span>, id)</span><br><span class="line">    modal.find(<span class="string">&#x27;.modal-id&#x27;</span>).text(id)</span><br><span class="line">    modal.find(<span class="string">&#x27;.payment-btn&#x27;</span>)[<span class="number">0</span>].setAttribute(<span class="string">&#x27;data-id&#x27;</span>, id)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log($(<span class="string">&#x27;table&#x27;</span>))</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 主要看這裡</span></span><br><span class="line">  $(<span class="string">&#x27;.payment-btn&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;this&#x27;</span>, $(<span class="built_in">this</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// fail, data is old</span></span><br><span class="line">    <span class="comment">// var btn = $(this);</span></span><br><span class="line">    <span class="comment">// var id = btn.data(&#x27;id&#x27;);</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;way 1&#x27;</span>, $(<span class="built_in">this</span>).data(<span class="string">&#x27;id&#x27;</span>)) <span class="comment">// old value</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;way 2&#x27;</span>, event.target.dataset.id) <span class="comment">// new</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;way 3&#x27;</span>, <span class="built_in">this</span>.dataset.id) <span class="comment">// new</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;way 4&#x27;</span>, $(<span class="built_in">this</span>).attr(<span class="string">&#x27;data-id&#x27;</span>)) <span class="comment">// new</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://codepen.io/ayugioh2003/pen/ZEXdJXQ?editors=1000">bs modal prop</a></li>
</ul>
<h2 id="原因與解法"><a href="#原因與解法" class="headerlink" title="原因與解法"></a>原因與解法</h2><p>一開始我用 jquery 語法取得 button 的 data-id 屬性。原本以為成功了，後來才發現第二筆之後的資料都是舊的 QQ</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;way 1&#x27;</span>, $(<span class="built_in">this</span>).data(<span class="string">&#x27;id&#x27;</span>)) <span class="comment">// old value</span></span><br></pre></td></tr></table></figure>

<p>本來以為是 jquery 壞掉惹，就改用 JS 原生的語法取得 this 物件、跟取得 data-id</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;way 2&#x27;</span>, event.target.dataset.id) <span class="comment">// new</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;way 3&#x27;</span>, <span class="built_in">this</span>.dataset.id) <span class="comment">// new</span></span><br></pre></td></tr></table></figure>

<p>後來才發現用 jquery 的 .data() 方法，資料好像會被快取起來。網友建議改用 .attr 就能抓到新值了</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;way 4&#x27;</span>, $(<span class="built_in">this</span>).attr(<span class="string">&#x27;data-id&#x27;</span>)) <span class="comment">// new</span></span><br></pre></td></tr></table></figure>

<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>我滿少用 jQuery 的，剛開始還真的以為 jQuery 壞掉惹 orz</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://stackoverflow.com/questions/38733750/jquery-this-data-is-returning-old-values/38733825">javascript - jQuery $(this).data() is returning old values - Stack Overflow</a></li>
</ul>
]]></content>
      <tags>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title>了解 JavaScript 中的 callback function</title>
    <url>/2022/04/callback-function/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在初學 JavaScript 時，時常會聽到一個觀念：「callback function」，算是一個高頻詞彙。究竟 callback function 是什麼意思呢？</p>
<span id="more"></span>

<h2 id="定義"><a href="#定義" class="headerlink" title="定義"></a>定義</h2><p>根據 MDN 的說法，回呼函式（callback function）是指能藉由參數（argument）通往另一個函式的函式。它會在外部函式內調用、以完成某些事情。以下也是取自 MDN 的程式碼片段：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greeting</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">  alert(<span class="string">&#x27;Hello &#x27;</span> + name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">processUserInput</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name = prompt(<span class="string">&#x27;輸入你的名字：&#x27;</span>)</span><br><span class="line">  callback(name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">processUserInput(greeting) <span class="comment">// 會印出 Hello, name(剛剛輸入的名字)</span></span><br></pre></td></tr></table></figure>

<h2 id="callback-function-的特性"><a href="#callback-function-的特性" class="headerlink" title="callback function 的特性"></a>callback function 的特性</h2><p>其實 callback function 並不是只有 JavaScript 才有的功能，其他像是 C、C++、Python 等語言都有支援 callback function 寫法。callback function 有這些特性：</p>
<p>一、支援 callback function 的語言，會支援把函式當作是第一公民 (first class)。有些程式語言並不支援把函式當作參數來傳遞，但 JavaScript 可以。JavaScript 把函式當作是第一公民，參數可以放入函式，所以 JavaScript 也支援 callback function 寫法。</p>
<p>二、callback hell。如果沒有管理好 callback function 寫法，很容易會造成程式碼多層巢嵌的慘況，導致程式碼難以閱讀與理解。常見的解決方案有使用 Promise 鏈式寫法，以及使用 async/await 來處理。</p>
<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>在許多程式碼的設計中，時常會遇到 callback function 的使用。以下舉例一些例子</p>
<ol>
<li>setTimeout(callback, delayTime)</li>
<li>domElement.addEventListener(event, callback)</li>
<li>nodejs read file</li>
<li>express middleware</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// next 就是 callback function，用來告知 express 說這個路由想做的事情已經做完了</span></span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Time:&#x27;</span>, <span class="built_in">Date</span>.now())</span><br><span class="line">  next()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>許多套件的 API，為了方便開發者能在某些事件完成後，能執行自己想要執行的程式，都會設計 callback function 讓開發者自訂。若是開發者自己開發程式的話，為了避免在處理非同步時產生的 callback hell，則可以考慮使用 Promise 與 async/await 來避免。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://developer.mozilla.org/zh-TW/docs/Glossary/Callback_function">回呼函式 - 術語表 | MDN</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0">回呼函式 - 維基百科，自由的百科全書</a></li>
<li><a href="https://en.wikipedia.org/wiki/Callback_(computer_programming)">Callback (computer programming) - Wikipedia</a></li>
<li><a href="http://javascriptissexy.com/understand-javascript-callback-functions-and-use-them/">Understand JavaScript Callback Functions and Use Them – JavaScript Is Sexy</a></li>
</ul>
]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>六角 Node.js 後端工程師養成直播班心得</title>
    <url>/2022/06/hex-nodejs-class-2022/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/PGdgxhZ.png" alt="課程封面圖"></p>
<p>最近上了六角的<a href="https://www.hexschool.com/courses/node-training.html">Node.js 後端工程師養成直播班</a>課程；在上週日的專題報告後，課程算是正式結束了。這篇是完課的心得文，大綱參考六角提供的架構。</p>
<span id="more"></span>

<h2 id="當初為什麼報名這堂課？"><a href="#當初為什麼報名這堂課？" class="headerlink" title="當初為什麼報名這堂課？"></a>當初為什麼報名這堂課？</h2><p>從我開始學習前端技術以來，我就對後端充滿了好奇，覺得不會後端的前端是不完整的。之前有上過其他的後端課程，像是六角的<a href="https://www.hexschool.com/courses/nodejs.html">Node.js 前後端開發實戰</a>，或是<a href="https://www.freecodecamp.org/">FreeCodeCamp</a>的課程。</p>
<p>不過前者是用 EJS 的 Server Side Render，而我想要學前後端分離的後端寫法；FreeCodeCamp 有教開 API 的方式，但沒有教一些後端開發常用的功能，例如權限驗證、錯誤處理。雖然我從兩門課程都有學到很多東西，但卻還不是我心中最想要的：適合前後端分離的後端課程。</p>
<p>就在我剛學完 FreeCodeCamp 的課程沒多久，正在尋覓其他 Node.js 的線上課程時，剛好看到六角學院的校長廖洧杰在六角學院的臉書社團<a href="https://www.facebook.com/groups/110635703123103/posts/1076222186564445/">發貼文</a>，說準備開一門後端的直播班課程。</p>
<p>看了課程大綱後，覺得裡面有內容是我需要的，於是就拿出魔法小卡報名了。</p>
<h2 id="第一週-第八週的學習過程"><a href="#第一週-第八週的學習過程" class="headerlink" title="第一週~第八週的學習過程"></a>第一週~第八週的學習過程</h2><p>在六角的這們課程，有多種作業類型：主線任務、小組任務、每日任務。我基本上是以完成所有八週的主線任務的目的在上課的。小組任務是支線任務，參加的話期末會有一個專題報告，洧杰老師會邀請廠商來聽。每日任務的話我因為時間分配的考量，以及大多數課程內容我都吸收良好，所以每日任務我選擇都沒參加。</p>
<p>前四週的課程，內容大概是如何建立 http server、引入 MongoDB、引入 mongoose、引入 Express、以及資料庫設計。因為之前有上過後端課程的經驗，基本上前四周的課程對我來說沒有壓力、前幾週的小組作業難度也低。學習過程大概就是</p>
<ol>
<li>週五晚上上課，開聊天室講幹話(XD)、邊開 Notion 筆記簡單記一下</li>
<li>週末，把主線任務做一做、開小組會議</li>
<li>週間，自己找補充資料，呼應課程內容</li>
</ol>
<p>在第五週開始，因為有比較不熟內容像是錯誤處理、JWT 身分驗證，加上小組作業開始難度提高、加上我是小組長需要花時間 Code Review，所以主線任務開始懶得做，心力先放在小組任務上。學習過程大概是</p>
<ul>
<li>週五晚上上課，邊開聊天室講幹話邊筆記</li>
<li>週末，開小組會議、複習週五的課程、Code Review 小組作業</li>
<li>週間，複習週五的課程、Code Review 小組作業</li>
</ul>
<p>在第七週上課時，老師提到如果提早完成全部作業的話，會有加碼獎品，所以我在第八週時就把第五六七週的作業迅速完成了 XD。同時我也猜測第八週的作業內容並提前完成，等到第八週上課公布作業內容時，我稍微修改一下 Code 就可以交作業了。(所以我是第一個交全部作業的，因為我在第八週線上直播過不到半小時，我就交作業了 XD)</p>
<p><img src="https://i.imgur.com/TsHO37b.png" alt="完成任務時間截圖"></p>
<h2 id="最大的收獲是？"><a href="#最大的收獲是？" class="headerlink" title="最大的收獲是？"></a>最大的收獲是？</h2><p>以課程內容來說的話，有幾個內容是我決定上課時，會想學到的知識點：資料庫設計、錯誤處理、以及權限管理。而這些內容確實在課程中也有提到，覺得還不錯。</p>
<h2 id="最喜歡直播班的哪些活動？"><a href="#最喜歡直播班的哪些活動？" class="headerlink" title="最喜歡直播班的哪些活動？"></a>最喜歡直播班的哪些活動？</h2><p>跟其他工程師一起協作小組專題，應該是我最喜歡的活動了吧。而我恰好被選為組長，同時體驗到後端工程師、技術組長、PM 的角色觀點。<del>多種痛苦一次滿足</del></p>
<p><del>啊，當然還有老師加碼的各種活動，真希望主委可以多加碼一點</del></p>
<h2 id="如果時光能倒流，會希望自己再次注意哪些細節？"><a href="#如果時光能倒流，會希望自己再次注意哪些細節？" class="headerlink" title="如果時光能倒流，會希望自己再次注意哪些細節？"></a>如果時光能倒流，會希望自己再次注意哪些細節？</h2><p>個人作業的專案，我會每週作業開一個分支來實作；我在第二週時才想到這件事情。現在我的個人作業有兩個 REPO，看了有點啊雜 XD</p>
<ul>
<li><a href="https://github.com/ayugioh2003/HexNodejsTodo">ayugioh2003/HexNodejsTodo</a> 第一週個人主線作業</li>
<li><a href="https://github.com/ayugioh2003/hex-nodejs-exercise">ayugioh2003/hex-nodejs-exercise</a> 第二到八週個人主線作業</li>
</ul>
<p>小組協作的共筆，可能會想一開始就用 Notion，而不是 HackMD 跟 Google Sheet 搭配使用。課程中的預設推薦是使用 HackMD、且確實不錯用，但它的表格功能實在不太好用，導致我中期還需要開 Google Sheet 去管理專案進度。</p>
<p>在小組開發的部分，身為組長，可能要更清楚介入修改程式碼的時機點，像是不要過早的介入。在第一週的作業中，要求只有用 http server 寫一個 todolist 的後端，但我卻引入了 ES module 跟 routes/controller/model 分層的觀念，讓第一週小組作業的複雜度變得有點高（雖然我覺得這樣比較漂亮）。</p>
<p>除了不要過早介入修改外，有時候也要限制組員的寫法，例如我應該第一週就要求每個組員都安裝 ESLint；沒有限制的結果，導致專案中有各式各樣的 coding style，風格不統一。</p>
<p>API 文件的部分，本來建立基礎建設時，由一個後端用 swagger.json 管理，但最後後續開發的其他後端就沒有更新 swagger 了。或許 swagger 設定寫進路由 JS 檔案裡面再自動產生文件的作法，對於多人協作會比較好。</p>
<h2 id="對課程的建議或鼓勵？"><a href="#對課程的建議或鼓勵？" class="headerlink" title="對課程的建議或鼓勵？"></a>對課程的建議或鼓勵？</h2><p>建議的話，我就用列點的方式好了，比較多是課程網站的資訊設計</p>
<ol>
<li>課程頁面（程式勇者村）的資訊有點混亂。像是左邊導覽列有些資訊只用到一次就不需要了，或許可以整合起來，像是開學典禮與小組任務，這個只有在第一週會用到的資訊，卻佔了兩行內容。</li>
<li>不曉得為什麼，主線任務的網址，被放在講義與主線任務 HackMD 的頁面裡面。例如想看第三週的主線任務，我需要點第三週講義與主線，接下來才有辦法點擊到主線任務的網址，查看到主線任務資訊。</li>
<li>講義與主線的 HackMD 是內嵌，而小組任務的 HackMD 是新頁，覺得統一比較好。看是全部都用內嵌，或是可以用個 HackMD 的 book 模式統一管理，這樣找起來比較方便。</li>
</ol>
<p>鼓勵的話</p>
<ol>
<li>感謝老師的用心教學，教到有一週嗓子都啞掉了</li>
<li>當有一組學員報告品質出狀況，老師馬上加碼補貼麥克風、以及高鐵票，這點真的大手筆</li>
<li>感謝 Ray 助教的每週直播解說，雖然因為時間關係我都沒有跟直播</li>
<li>感謝助教群的每週主線任務修改</li>
<li>錯誤處理跟權限驗證有符合我修課前的預期，我覺得滿意 XD</li>
</ol>
<h2 id="身為學長姐，分享些想入坑的新同學一些勉勵的話"><a href="#身為學長姐，分享些想入坑的新同學一些勉勵的話" class="headerlink" title="身為學長姐，分享些想入坑的新同學一些勉勵的話"></a>身為學長姐，分享些想入坑的新同學一些勉勵的話</h2><p>如果跟我一樣是靠六角學前端出身、正在尋求後端入門的話，這門課程我還滿推薦的。畢竟師資、教法都是熟悉的味道(?)，同時老師也懂你在前端的程度，可以設身處地回覆你的疑惑，這樣學起來可以事半功倍。</p>
<p>如果是新接觸到六角的前端，或是後端想來學 Node.js 的話，也可以考慮看看。這次 2022 年的 Node.js 直播班是第一屆，裡面也有一些是第一次接觸六角的學員。就我這個學員的側面看法，感覺他們也適應良好。尤其某一組很多組員都是後端出身，他們在做期末專題的第一週就幾乎把需要的後端 API 都做完了，怕.jpg。</p>
<p>如果有參與小組作業、專題的話，協作的經驗也是滿有趣的，而且如果<del>不幸</del>有幸當上組長的話，還可以唆使其他組員去寫 Code，算是個有趣的體驗 XD</p>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>想對第五組的組員一些話 XD</p>
<p>前端部分</p>
<ul>
<li>泡沫：前端扛霸子（無誤）。感謝引入 Next.js、StoryBook 以及 TypeScript，而且我們還有線下見面過 XD</li>
<li>Emi：雖然說對 Next.js 不熟，但我感覺妳和泡沫搭配得很好 ~</li>
</ul>
<p>後端部分</p>
<ul>
<li>Hazel：其實我把妳當副組長在看待 XD。感謝快速出 PR 跟時常幫忙出點子</li>
<li>灰塵貓：感謝你常在第一時間就接下許多 loading，以及花很多時間研究 WebSocket</li>
<li>Sihyun：我還是不會唸你的名字 XD。感謝你很穩定地產出程式碼</li>
<li>Nap：每次私訊在討論協作的事情時，覺得你討論的語氣很有趣哈哈</li>
<li>AmberCYT：感謝你後來很忙，但還是被我拉下水負責一小部分</li>
<li>Zion：感謝在專題中期跟上課程進度後，主動說想加進來幫忙</li>
</ul>
<p>雖然後面幾週有點累，但整體來說，這堂課滿有趣、也吸收了不少資訊 ~</p>
<p>(本來想放上專題報告時聊天室的有趣截圖，但發現我忘記儲存了⋯洧杰老師有沒有聊天室存檔 QQ)</p>
]]></content>
      <categories>
        <category>backend</category>
      </categories>
      <tags>
        <tag>HexSchool</tag>
        <tag>Node.js</tag>
        <tag>Backend</tag>
      </tags>
  </entry>
  <entry>
    <title>網頁排版的中文字換行至少兩個字</title>
    <url>/2022/09/css-prevent-line-in-text-to-only-contain-one-word/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在<a href="https://www.facebook.com/groups/110635703123103/posts/1226721594847836/?comment_id=1228005791386083">前端社團看到一個提問：希望在文字換行時，每一行都至少有兩個字以上，不要只有一個字</a>。原 PO 希望能用 CSS 解決，但感覺做不到。但我後來想到一個 Tricky 的解法，然後需要一點 JS。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>主要是在 StackOverflow 看到的提示：在英文句子中，在最後一個字元之前加上空白符號，這樣換行時就會至少有兩個字了。</p>
<ul>
<li><a href="https://stackoverflow.com/questions/27400192/css-prevent-line-in-text-to-only-contain-one-word">https://stackoverflow.com/questions/27400192/css-prevent-line-in-text-to-only-contain-one-word</a></li>
</ul>
<p>原理大概是，一般英文句子在換行時，會根據英文單詞為單位作換行的切割。但假如將一段話最後兩個字元中的空格，替代成空白符號的話，那最後兩個單詞就會被黏在一起、被辨識成同一個單位，這樣在換行切割時，就會看起來至少有兩個英文單詞了(但實際上是一個切割單位)。</p>
<p>但轉換成中文句子時會遇到問題：就是中文字之間是沒有空格的。這就很尷尬了。後來我的解決方案是，找一個沒有寬度的空白符號來試看看、碰碰運氣，結果剛好可以。</p>
<ul>
<li><a href="https://note.charlestw.com/html-space/">https://note.charlestw.com/html-space/</a></li>
</ul>
<p>附上 Demo 連結</p>
<ul>
<li><a href="https://codepen.io/ayugioh2003/pen/eYrJdYQ?editors=1100">https://codepen.io/ayugioh2003/pen/eYrJdYQ?editors=1100</a></li>
</ul>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>如果用這種方式達成中文的換行至少兩字以上，應該是可行的，但就還是需要 JS 的輔助就是了。純 CSS 的方案應該不存在吧(?)</p>
]]></content>
      <categories>
        <category>前端開發</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>桌機作業系統 Launcher 列表</title>
    <url>/2023/05/launcher/</url>
    <content><![CDATA[<p>最近頻繁地在使用兩種作業系統：Windows 跟 MacOS。而我平常滿喜歡研究生產力相關的議題，自然也會想研究這兩個平台的生產力工具。以下介紹的是 Launcher</p>
<span id="more"></span>

<h2 id="Launcher-是啥"><a href="#Launcher-是啥" class="headerlink" title="Launcher 是啥"></a>Launcher 是啥</h2><p>Launcher 字面上翻譯，是啟動器、發射器的意思。但在我這篇的語境下，我想說的是電腦作業系統下，可以用鍵盤快捷盤快速叫出的應用程式啟動器。MacOS 官方支援的是 <a href="https://support.apple.com/zh-tw/guide/mac-help/mchlp1008/mac">Spotlight</a>，Windows 半官方支援的是 <a href="https://learn.microsoft.com/zh-tw/windows/powertoys/run">PowerToys Run</a>。</p>
<h2 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h2><p>目前 Windows 我還沒有找到 Plugin 生態系讓我很經驗的 Launcher。目前邊用 PowerToys Run，邊騎驢找馬。以下是一些 Windows 平台上的 Launcher</p>
<p>cerebro</p>
<ul>
<li><a href="https://github.com/cerebroapp/cerebro">https://github.com/cerebroapp/cerebro</a></li>
<li>有支援多平台。但 Plugin 生態系感覺沒有活水</li>
</ul>
<p>FLOW Launcher</p>
<ul>
<li><a href="https://github.com/Flow-Launcher/Flow.Launcher">https://github.com/Flow-Launcher/Flow.Launcher</a></li>
<li>試用中</li>
</ul>
<p>Launchy</p>
<ul>
<li><a href="https://github.com/samsonwang/LaunchyQt">https://github.com/samsonwang/LaunchyQt</a></li>
<li>一個老牌的 Launcher，有佛心開發者繼續維護。哭了。</li>
</ul>
<p>PowerToys Run</p>
<ul>
<li><a href="https://learn.microsoft.com/zh-tw/windows/powertoys/run">https://learn.microsoft.com/zh-tw/windows/powertoys/run</a></li>
<li><a href="https://github.com/microsoft/PowerToys/issues/3200">https://github.com/microsoft/PowerToys/issues/3200</a></li>
<li>有點雞肋，Plugin 沒有第三方生態系，只能盼望官方出</li>
</ul>
<p>uTools</p>
<ul>
<li><a href="https://www.u.tools/">https://www.u.tools/</a></li>
<li>感覺在中國社群有熱度、功能很豐富。缺點就是中國開發，且沒有開源，我不太敢用</li>
</ul>
<p>Wox</p>
<ul>
<li><a href="https://github.com/Wox-launcher/Wox">https://github.com/Wox-launcher/Wox</a></li>
<li>當年出來時，有跟 MacOS 的 Alfred 互別苗頭的感覺。但從 2022 年 11 月起，到發文的今天（2023.05）有半年沒更新了</li>
</ul>
<h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><p>Alfred</p>
<ul>
<li><a href="https://www.alfredapp.com/">https://www.alfredapp.com/</a></li>
<li>當初連 Windows 使用者都流口水的 Launcher。有很多社群 Plugin。要付費</li>
</ul>
<p>Raycast</p>
<ul>
<li><a href="https://www.raycast.com/">https://www.raycast.com/</a></li>
<li>漂亮又好用的 Launcher</li>
</ul>
<p>Spotlight</p>
<ul>
<li><a href="https://support.apple.com/zh-tw/guide/mac-help/mchlp1008/mac">https://support.apple.com/zh-tw/guide/mac-help/mchlp1008/mac</a></li>
<li>官方提供的 Launcher</li>
</ul>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>希望未來我能多使用一點 Launcher 除了搜尋 APP 以外的功能～</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>launcher</tag>
        <tag>生產力工具</tag>
      </tags>
  </entry>
</search>
